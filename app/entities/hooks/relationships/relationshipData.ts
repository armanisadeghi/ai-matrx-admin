import { RelationshipDefinition } from "@/types/relationshipTypes";

export const actionRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'action',
    relationshipCount: 2,
    additionalFields: ['name', 'nodeType', 'referenceId'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'matrix',
    entityOne: 'automationMatrix',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'transformer',
    entityTwo: 'transformer',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const aiAgentRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'aiAgent',
    relationshipCount: 2,
    additionalFields: ['name', 'systemMessageOverride'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'aiSettingsId',
    entityOne: 'aiSettings',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipeId',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const aiModelEndpointRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'aiModelEndpoint',
    relationshipCount: 2,
    additionalFields: ['available', 'configuration', 'createdAt', 'endpointPriority', 'notes'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'aiEndpointId',
    entityOne: 'aiEndpoint',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'aiModelId',
    entityTwo: 'aiModel',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const aiSettingsRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'aiSettings',
    relationshipCount: 3,
    additionalFields: [
        'audioFormat',
        'audioVoice',
        'count',
        'frequencyPenalty',
        'maxTokens',
        'modalities',
        'presencePenalty',
        'presetName',
        'quality',
        'responseFormat',
        'size',
        'stream',
        'temperature',
        'tools',
        'topP',
    ],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'aiEndpoint',
    entityOne: 'aiEndpoint',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'aiModel',
    entityTwo: 'aiModel',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
    ReferenceFieldThree: 'aiProvider',
    entityThree: 'aiProvider',
    entityThreeField: 'id',
    entityThreePks: ['id'],
};

export const automationBoundaryBrokerRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'automationBoundaryBroker',
    relationshipCount: 2,
    additionalFields: ['beaconDestination', 'sparkSource'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'broker',
    entityOne: 'broker',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'matrix',
    entityTwo: 'automationMatrix',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const flashcardHistoryRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'flashcardHistory',
    relationshipCount: 2,
    additionalFields: ['correctCount', 'createdAt', 'incorrectCount', 'reviewCount', 'updatedAt'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'flashcardId',
    entityOne: 'flashcardData',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'userId',
    // entityTwo: "users",
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const flashcardSetRelationsRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'flashcardSetRelations',
    relationshipCount: 4,
    additionalFields: ['order'],
    joiningTablePks: ['flashcardId', 'setId'],
    ReferenceFieldOne: 'flashcardId',
    entityOne: 'flashcardData',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'flashcardId',
    entityTwo: 'flashcardData',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
    ReferenceFieldThree: 'setId',
    entityThree: 'flashcardSets',
    entityThreeField: 'setId',
    entityThreePks: ['setId'],
    ReferenceFieldFour: 'setId',
    entityFour: 'flashcardSets',
    entityFourField: 'setId',
    entityFourPks: ['setId'],
};

export const messageBrokerRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'messageBroker',
    relationshipCount: 3,
    additionalFields: ['defaultValue'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'brokerId',
    entityOne: 'dataBroker',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'defaultComponent',
    entityTwo: 'dataInputComponent',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
    ReferenceFieldThree: 'messageId',
    entityThree: 'messageTemplate',
    entityThreeField: 'id',
    entityThreePks: ['id'],
};

export const recipeBrokerRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeBroker',
    relationshipCount: 2,
    additionalFields: ['brokerRole', 'required'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'broker',
    entityOne: 'broker',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipe',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeDisplayRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeDisplay',
    relationshipCount: 2,
    additionalFields: ['displaySettings', 'priority'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'display',
    entityOne: 'displayOption',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipe',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeFunctionRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeFunction',
    relationshipCount: 2,
    additionalFields: ['params', 'role'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'function',
    entityOne: 'systemFunction',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipe',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeMessageRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeMessage',
    relationshipCount: 2,
    additionalFields: ['order'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'messageId',
    entityOne: 'messageTemplate',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipeId',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeModelRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeModel',
    relationshipCount: 2,
    additionalFields: ['priority', 'role'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'aiModel',
    entityOne: 'aiModel',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipe',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeProcessorRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeProcessor',
    relationshipCount: 2,
    additionalFields: ['params'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'processor',
    entityOne: 'processor',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'recipe',
    entityTwo: 'recipe',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const recipeToolRelationshipDefinition: RelationshipDefinition = {
    joiningTable: 'recipeTool',
    relationshipCount: 2,
    additionalFields: ['params'],
    joiningTablePks: ['id'],
    ReferenceFieldOne: 'recipe',
    entityOne: 'recipe',
    entityOneField: 'id',
    entityOnePks: ['id'],
    ReferenceFieldTwo: 'tool',
    entityTwo: 'tool',
    entityTwoField: 'id',
    entityTwoPks: ['id'],
};

export const RELATIONSHIP_DEFINITIONS = {
    action: actionRelationshipDefinition,
    aiAgent: aiAgentRelationshipDefinition,
    aiModelEndpoint: aiModelEndpointRelationshipDefinition,
    aiSettings: aiSettingsRelationshipDefinition,
    automationBoundaryBroker: automationBoundaryBrokerRelationshipDefinition,
    flashcardHistory: flashcardHistoryRelationshipDefinition,
    flashcardSetRelations: flashcardSetRelationsRelationshipDefinition,
    messageBroker: messageBrokerRelationshipDefinition,
    recipeBroker: recipeBrokerRelationshipDefinition,
    recipeDisplay: recipeDisplayRelationshipDefinition,
    recipeFunction: recipeFunctionRelationshipDefinition,
    recipeMessage: recipeMessageRelationshipDefinition,
    recipeModel: recipeModelRelationshipDefinition,
    recipeProcessor: recipeProcessorRelationshipDefinition,
    recipeTool: recipeToolRelationshipDefinition,
};

