// pages/variables.tsx
'use client';


import { useState } from 'react';
import VariableContentEditor from './VariableContentEditor';
import { Button } from "@/components/ui/button";
import { ScrollArea } from "@/components/ui/scroll-area";
import { PlusCircle } from "lucide-react";

interface VariableContent {
    id: string;
    name: string;
    content: string;
    componentType: string;
    instructions: string;
    isConnected: boolean;
}

export default function VariablesPage() {
    const [variables, setVariables] = useState<VariableContent[]>([]);

    const handleAddVariable = () => {
        setVariables(prev => [...prev, {
            id: '', // Will be generated by component
            name: '',
            content: '',
            componentType: 'input',
            instructions: '',
            isConnected: true
        }]);
    };

    const handleVariableChange = (updatedVariable: VariableContent, index: number) => {
        setVariables(prev => {
            const newVariables = [...prev];
            newVariables[index] = updatedVariable;
            return newVariables;
        });
    };

    const handleVariableDelete = (index: number) => {
        setVariables(prev => prev.filter((_, i) => i !== index));
    };

    return (
        <div className="flex h-screen bg-background">
            {/* Main Content Area */}
            <main className="flex-1 p-6">
                <h1 className="text-2xl font-bold mb-4">Content Variables</h1>
                <p className="text-muted-foreground mb-6">
                    Manage your dynamic content variables here. These variables will be used to populate your main content.
                </p>

                {/* Add your main content visualization here */}
            </main>

            {/* Sidebar */}
            <aside className="w-96 border-l bg-muted/10">
                <div className="p-4 border-b">
                    <Button
                        onClick={handleAddVariable}
                        className="w-full"
                        variant="outline"
                    >
                        <PlusCircle className="mr-2 h-4 w-4" />
                        Add Variable
                    </Button>
                </div>

                <ScrollArea className="h-[calc(100vh-5rem)] p-4">
                    {variables.map((variable, index) => (
                        <VariableContentEditor
                            key={variable.id || index}
                            initialData={variable}
                            isDestructive={!variable.isConnected}
                            onChange={(updated) => handleVariableChange(updated, index)}
                            onDelete={() => handleVariableDelete(index)}
                        />
                    ))}

                    {variables.length === 0 && (
                        <div className="text-center text-muted-foreground p-8">
                            No variables added yet. Click the button above to add one.
                        </div>
                    )}
                </ScrollArea>
            </aside>
        </div>
    );
}

