{
    "aiModelEndpoint": {
        "selfReferential": [],
        "manyToMany": ["aiEndpoint", "aiModel"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "aiModelEndpoint",
            "table_name": "ai_model_endpoint",
            "foreignKeys": {
                "aiEndpoint": {
                    "foreign_table": "ai_endpoint",
                    "foreign_entity": "aiEndpoint",
                    "column": "ai_endpoint_id",
                    "fieldName": "aiEndpointId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_model_endpoint_ai_endpoint_id_fkey"
                },
                "aiModel": {
                    "foreign_table": "ai_model",
                    "foreign_entity": "aiModel",
                    "column": "ai_model_id",
                    "fieldName": "aiModelId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_model_endpoint_ai_model_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "dataInputComponent": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["messageBroker", "broker", "dataBroker"],
        "relationshipDetails": {
            "entityName": "dataInputComponent",
            "table_name": "data_input_component",
            "foreignKeys": {},
            "referencedBy": {
                "messageBroker": {
                    "foreign_table": "message_broker",
                    "foreign_entity": "messageBroker",
                    "field": "defaultComponent",
                    "column": "default_component",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "message_broker_default_component_fkey"
                },
                "broker": {
                    "foreign_table": "broker",
                    "foreign_entity": "broker",
                    "field": "customSourceComponent",
                    "column": "custom_source_component",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "broker_custom_component_fkey"
                },
                "dataBroker": {
                    "foreign_table": "data_broker",
                    "foreign_entity": "dataBroker",
                    "field": "inputComponent",
                    "column": "input_component",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "data_broker_default_component_fkey"
                }
            }
        }
    },
    "brokerValue": {
        "selfReferential": [],
        "manyToMany": ["dataBroker"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "brokerValue",
            "table_name": "broker_value",
            "foreignKeys": {
                "dataBroker": {
                    "foreign_table": "data_broker",
                    "foreign_entity": "dataBroker",
                    "column": "data_broker",
                    "fieldName": "dataBroker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "broker_value_data_broker_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "flashcardHistory": {
        "selfReferential": [],
        "manyToMany": ["flashcardData"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "flashcardHistory",
            "table_name": "flashcard_history",
            "foreignKeys": {
                "flashcardData": {
                    "foreign_table": "flashcard_data",
                    "foreign_entity": "flashcardData",
                    "column": "flashcard_id",
                    "fieldName": "flashcardId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "flashcard_history_flashcard_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "compiledRecipe": {
        "selfReferential": [],
        "manyToMany": ["recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["applet"],
        "relationshipDetails": {
            "entityName": "compiledRecipe",
            "table_name": "compiled_recipe",
            "foreignKeys": {
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe_id",
                    "fieldName": "recipeId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "compiled_recipe_recipe_id_fkey"
                }
            },
            "referencedBy": {
                "applet": {
                    "foreign_table": "applet",
                    "foreign_entity": "applet",
                    "field": "compiledRecipeId",
                    "column": "compiled_recipe_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "applet_compiled_recipe_id_fkey"
                }
            }
        }
    },
    "flashcardSets": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["flashcardSetRelations"],
        "relationshipDetails": {
            "entityName": "flashcardSets",
            "table_name": "flashcard_sets",
            "foreignKeys": {},
            "referencedBy": {
                "flashcardSetRelations": {
                    "foreign_table": "flashcard_set_relations",
                    "foreign_entity": "flashcardSetRelations",
                    "field": "setId",
                    "column": "set_id",
                    "foreign_field": "setId",
                    "foreign_column": "set_id",
                    "constraint_name": "flashcard_set_relations_set_id_fkey"
                }
            }
        }
    },
    "emails": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "emails",
            "table_name": "emails",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "flashcardSetRelations": {
        "selfReferential": [],
        "manyToMany": ["flashcardData", "flashcardSets"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "flashcardSetRelations",
            "table_name": "flashcard_set_relations",
            "foreignKeys": {
                "flashcardData": {
                    "foreign_table": "flashcard_data",
                    "foreign_entity": "flashcardData",
                    "column": "flashcard_id",
                    "fieldName": "flashcardId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "flashcard_set_relations_flashcard_id_fkey"
                },
                "flashcardSets": {
                    "foreign_table": "flashcard_sets",
                    "foreign_entity": "flashcardSets",
                    "column": "set_id",
                    "fieldName": "setId",
                    "foreign_field": "setId",
                    "foreign_column": "set_id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "flashcard_set_relations_set_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "wcImpairmentDefinition": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["wcInjury"],
        "relationshipDetails": {
            "entityName": "wcImpairmentDefinition",
            "table_name": "wc_impairment_definition",
            "foreignKeys": {},
            "referencedBy": {
                "wcInjury": {
                    "foreign_table": "wc_injury",
                    "foreign_entity": "wcInjury",
                    "field": "impairmentDefinitionId",
                    "column": "impairment_definition_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "wc_injury_impairment_definition_id_fkey"
                }
            }
        }
    },
    "flashcardImages": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["flashcardData"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "flashcardImages",
            "table_name": "flashcard_images",
            "foreignKeys": {
                "flashcardData": {
                    "foreign_table": "flashcard_data",
                    "foreign_entity": "flashcardData",
                    "column": "flashcard_id",
                    "fieldName": "flashcardId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "flashcard_images_flashcard_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "aiAgent": {
        "selfReferential": [],
        "manyToMany": ["aiSettings", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "aiAgent",
            "table_name": "ai_agent",
            "foreignKeys": {
                "aiSettings": {
                    "foreign_table": "ai_settings",
                    "foreign_entity": "aiSettings",
                    "column": "ai_settings_id",
                    "fieldName": "aiSettingsId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_agent_ai_settings_id_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe_id",
                    "fieldName": "recipeId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_agent_recipe_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "aiSettings": {
        "selfReferential": [],
        "manyToMany": ["aiEndpoint", "aiModel", "aiProvider"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["aiAgent"],
        "relationshipDetails": {
            "entityName": "aiSettings",
            "table_name": "ai_settings",
            "foreignKeys": {
                "aiEndpoint": {
                    "foreign_table": "ai_endpoint",
                    "foreign_entity": "aiEndpoint",
                    "column": "ai_endpoint",
                    "fieldName": "aiEndpoint",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_settings_ai_endpoint_fkey"
                },
                "aiModel": {
                    "foreign_table": "ai_model",
                    "foreign_entity": "aiModel",
                    "column": "ai_model",
                    "fieldName": "aiModel",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_settings_ai_model_fkey"
                },
                "aiProvider": {
                    "foreign_table": "ai_provider",
                    "foreign_entity": "aiProvider",
                    "column": "ai_provider",
                    "fieldName": "aiProvider",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "ai_settings_ai_provider_fkey"
                }
            },
            "referencedBy": {
                "aiAgent": {
                    "foreign_table": "ai_agent",
                    "foreign_entity": "aiAgent",
                    "field": "aiSettingsId",
                    "column": "ai_settings_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_agent_ai_settings_id_fkey"
                }
            }
        }
    },
    "audioRecording": {
        "selfReferential": [],
        "manyToMany": ["audioLabel"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "audioRecording",
            "table_name": "audio_recording",
            "foreignKeys": {
                "audioLabel": {
                    "foreign_table": "audio_label",
                    "foreign_entity": "audioLabel",
                    "column": "label",
                    "fieldName": "label",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "audio_recording_label_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "messageTemplate": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["messageBroker", "recipeMessage"],
        "relationshipDetails": {
            "entityName": "messageTemplate",
            "table_name": "message_template",
            "foreignKeys": {},
            "referencedBy": {
                "messageBroker": {
                    "foreign_table": "message_broker",
                    "foreign_entity": "messageBroker",
                    "field": "messageId",
                    "column": "message_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "message_broker_message_id_fkey"
                },
                "recipeMessage": {
                    "foreign_table": "recipe_message",
                    "foreign_entity": "recipeMessage",
                    "field": "messageId",
                    "column": "message_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_message_message_id_fkey"
                }
            }
        }
    },
    "applet": {
        "selfReferential": [],
        "manyToMany": ["compiledRecipe", "subcategory"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "applet",
            "table_name": "applet",
            "foreignKeys": {
                "compiledRecipe": {
                    "foreign_table": "compiled_recipe",
                    "foreign_entity": "compiledRecipe",
                    "column": "compiled_recipe_id",
                    "fieldName": "compiledRecipeId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "applet_compiled_recipe_id_fkey"
                },
                "subcategory": {
                    "foreign_table": "subcategory",
                    "foreign_entity": "subcategory",
                    "column": "subcategory_id",
                    "fieldName": "subcategoryId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "applet_subcategory_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "flashcardData": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["flashcardHistory", "flashcardSetRelations", "flashcardImages"],
        "relationshipDetails": {
            "entityName": "flashcardData",
            "table_name": "flashcard_data",
            "foreignKeys": {},
            "referencedBy": {
                "flashcardHistory": {
                    "foreign_table": "flashcard_history",
                    "foreign_entity": "flashcardHistory",
                    "field": "flashcardId",
                    "column": "flashcard_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "flashcard_history_flashcard_id_fkey"
                },
                "flashcardSetRelations": {
                    "foreign_table": "flashcard_set_relations",
                    "foreign_entity": "flashcardSetRelations",
                    "field": "flashcardId",
                    "column": "flashcard_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "flashcard_set_relations_flashcard_id_fkey"
                },
                "flashcardImages": {
                    "foreign_table": "flashcard_images",
                    "foreign_entity": "flashcardImages",
                    "field": "flashcardId",
                    "column": "flashcard_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "flashcard_images_flashcard_id_fkey"
                }
            }
        }
    },
    "audioRecordingUsers": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "audioRecordingUsers",
            "table_name": "audio_recording_users",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "recipeDisplay": {
        "selfReferential": [],
        "manyToMany": ["displayOption", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeDisplay",
            "table_name": "recipe_display",
            "foreignKeys": {
                "displayOption": {
                    "foreign_table": "display_option",
                    "foreign_entity": "displayOption",
                    "column": "display",
                    "fieldName": "display",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_display_display_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_display_recipe_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "recipeProcessor": {
        "selfReferential": [],
        "manyToMany": ["processor", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeProcessor",
            "table_name": "recipe_processor",
            "foreignKeys": {
                "processor": {
                    "foreign_table": "processor",
                    "foreign_entity": "processor",
                    "column": "processor",
                    "fieldName": "processor",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_processor_processor_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_processor_recipe_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "wcReport": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["wcClaim"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["wcInjury"],
        "relationshipDetails": {
            "entityName": "wcReport",
            "table_name": "wc_report",
            "foreignKeys": {
                "wcClaim": {
                    "foreign_table": "wc_claim",
                    "foreign_entity": "wcClaim",
                    "column": "claim_id",
                    "fieldName": "claimId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "wc_report_claim_id_fkey"
                }
            },
            "referencedBy": {
                "wcInjury": {
                    "foreign_table": "wc_injury",
                    "foreign_entity": "wcInjury",
                    "field": "reportId",
                    "column": "report_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "wc_injury_report_id_fkey"
                }
            }
        }
    },
    "wcInjury": {
        "selfReferential": [],
        "manyToMany": ["wcImpairmentDefinition", "wcReport"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "wcInjury",
            "table_name": "wc_injury",
            "foreignKeys": {
                "wcImpairmentDefinition": {
                    "foreign_table": "wc_impairment_definition",
                    "foreign_entity": "wcImpairmentDefinition",
                    "column": "impairment_definition_id",
                    "fieldName": "impairmentDefinitionId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "wc_injury_impairment_definition_id_fkey"
                },
                "wcReport": {
                    "foreign_table": "wc_report",
                    "foreign_entity": "wcReport",
                    "column": "report_id",
                    "fieldName": "reportId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "wc_injury_report_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "aiProvider": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["aiSettings", "aiModel"],
        "relationshipDetails": {
            "entityName": "aiProvider",
            "table_name": "ai_provider",
            "foreignKeys": {},
            "referencedBy": {
                "aiSettings": {
                    "foreign_table": "ai_settings",
                    "foreign_entity": "aiSettings",
                    "field": "aiProvider",
                    "column": "ai_provider",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_settings_ai_provider_fkey"
                },
                "aiModel": {
                    "foreign_table": "ai_model",
                    "foreign_entity": "aiModel",
                    "field": "modelProvider",
                    "column": "model_provider",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_model_model_provider_fkey"
                }
            }
        }
    },
    "messageBroker": {
        "selfReferential": [],
        "manyToMany": ["dataBroker", "dataInputComponent", "messageTemplate"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "messageBroker",
            "table_name": "message_broker",
            "foreignKeys": {
                "dataBroker": {
                    "foreign_table": "data_broker",
                    "foreign_entity": "dataBroker",
                    "column": "broker_id",
                    "fieldName": "brokerId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "message_broker_broker_id_fkey"
                },
                "dataInputComponent": {
                    "foreign_table": "data_input_component",
                    "foreign_entity": "dataInputComponent",
                    "column": "default_component",
                    "fieldName": "defaultComponent",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "message_broker_default_component_fkey"
                },
                "messageTemplate": {
                    "foreign_table": "message_template",
                    "foreign_entity": "messageTemplate",
                    "column": "message_id",
                    "fieldName": "messageId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "message_broker_message_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "audioLabel": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["audioRecording"],
        "relationshipDetails": {
            "entityName": "audioLabel",
            "table_name": "audio_label",
            "foreignKeys": {},
            "referencedBy": {
                "audioRecording": {
                    "foreign_table": "audio_recording",
                    "foreign_entity": "audioRecording",
                    "field": "label",
                    "column": "label",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "audio_recording_label_fkey"
                }
            }
        }
    },
    "aiEndpoint": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["aiModelEndpoint", "aiSettings"],
        "relationshipDetails": {
            "entityName": "aiEndpoint",
            "table_name": "ai_endpoint",
            "foreignKeys": {},
            "referencedBy": {
                "aiModelEndpoint": {
                    "foreign_table": "ai_model_endpoint",
                    "foreign_entity": "aiModelEndpoint",
                    "field": "aiEndpointId",
                    "column": "ai_endpoint_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_model_endpoint_ai_endpoint_id_fkey"
                },
                "aiSettings": {
                    "foreign_table": "ai_settings",
                    "foreign_entity": "aiSettings",
                    "field": "aiEndpoint",
                    "column": "ai_endpoint",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_settings_ai_endpoint_fkey"
                }
            }
        }
    },
    "action": {
        "selfReferential": [],
        "manyToMany": ["automationMatrix", "transformer"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "action",
            "table_name": "action",
            "foreignKeys": {
                "automationMatrix": {
                    "foreign_table": "automation_matrix",
                    "foreign_entity": "automationMatrix",
                    "column": "matrix",
                    "fieldName": "matrix",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "action_matrix_fkey"
                },
                "transformer": {
                    "foreign_table": "transformer",
                    "foreign_entity": "transformer",
                    "column": "transformer",
                    "fieldName": "transformer",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "action_transformer_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "aiModel": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["aiProvider"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["aiModelEndpoint", "aiSettings", "recipeModel"],
        "relationshipDetails": {
            "entityName": "aiModel",
            "table_name": "ai_model",
            "foreignKeys": {
                "aiProvider": {
                    "foreign_table": "ai_provider",
                    "foreign_entity": "aiProvider",
                    "column": "model_provider",
                    "fieldName": "modelProvider",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "ai_model_model_provider_fkey"
                }
            },
            "referencedBy": {
                "aiModelEndpoint": {
                    "foreign_table": "ai_model_endpoint",
                    "foreign_entity": "aiModelEndpoint",
                    "field": "aiModelId",
                    "column": "ai_model_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_model_endpoint_ai_model_id_fkey"
                },
                "aiSettings": {
                    "foreign_table": "ai_settings",
                    "foreign_entity": "aiSettings",
                    "field": "aiModel",
                    "column": "ai_model",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_settings_ai_model_fkey"
                },
                "recipeModel": {
                    "foreign_table": "recipe_model",
                    "foreign_entity": "recipeModel",
                    "field": "aiModel",
                    "column": "ai_model",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_model_ai_model_fkey"
                }
            }
        }
    },
    "automationMatrix": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["action", "automationBoundaryBroker"],
        "relationshipDetails": {
            "entityName": "automationMatrix",
            "table_name": "automation_matrix",
            "foreignKeys": {},
            "referencedBy": {
                "action": {
                    "foreign_table": "action",
                    "foreign_entity": "action",
                    "field": "matrix",
                    "column": "matrix",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "action_matrix_fkey"
                },
                "automationBoundaryBroker": {
                    "foreign_table": "automation_boundary_broker",
                    "foreign_entity": "automationBoundaryBroker",
                    "field": "matrix",
                    "column": "matrix",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "boundary_brokers_matrix_fkey"
                }
            }
        }
    },
    "fileStructure": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "fileStructure",
            "table_name": "file_structure",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "dataOutputComponent": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["dataBroker"],
        "relationshipDetails": {
            "entityName": "dataOutputComponent",
            "table_name": "data_output_component",
            "foreignKeys": {},
            "referencedBy": {
                "dataBroker": {
                    "foreign_table": "data_broker",
                    "foreign_entity": "dataBroker",
                    "field": "outputComponent",
                    "column": "output_component",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "data_broker_output_component_fkey"
                }
            }
        }
    },
    "extractor": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "extractor",
            "table_name": "extractor",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "recipe": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [
            "compiledRecipe",
            "aiAgent",
            "recipeDisplay",
            "recipeProcessor",
            "recipeModel",
            "recipeBroker",
            "recipeMessage",
            "recipeTool",
            "recipeFunction"
        ],
        "relationshipDetails": {
            "entityName": "recipe",
            "table_name": "recipe",
            "foreignKeys": {},
            "referencedBy": {
                "compiledRecipe": {
                    "foreign_table": "compiled_recipe",
                    "foreign_entity": "compiledRecipe",
                    "field": "recipeId",
                    "column": "recipe_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "compiled_recipe_recipe_id_fkey"
                },
                "aiAgent": {
                    "foreign_table": "ai_agent",
                    "foreign_entity": "aiAgent",
                    "field": "recipeId",
                    "column": "recipe_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "ai_agent_recipe_id_fkey"
                },
                "recipeDisplay": {
                    "foreign_table": "recipe_display",
                    "foreign_entity": "recipeDisplay",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_display_recipe_fkey"
                },
                "recipeProcessor": {
                    "foreign_table": "recipe_processor",
                    "foreign_entity": "recipeProcessor",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_processor_recipe_fkey"
                },
                "recipeModel": {
                    "foreign_table": "recipe_model",
                    "foreign_entity": "recipeModel",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_model_recipe_fkey"
                },
                "recipeBroker": {
                    "foreign_table": "recipe_broker",
                    "foreign_entity": "recipeBroker",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_broker_recipe_fkey"
                },
                "recipeMessage": {
                    "foreign_table": "recipe_message",
                    "foreign_entity": "recipeMessage",
                    "field": "recipeId",
                    "column": "recipe_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_message_recipe_id_fkey"
                },
                "recipeTool": {
                    "foreign_table": "recipe_tool",
                    "foreign_entity": "recipeTool",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_tool_recipe_fkey"
                },
                "recipeFunction": {
                    "foreign_table": "recipe_function",
                    "foreign_entity": "recipeFunction",
                    "field": "recipe",
                    "column": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_function_recipe_fkey"
                }
            }
        }
    },
    "recipeBroker": {
        "selfReferential": [],
        "manyToMany": ["broker", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeBroker",
            "table_name": "recipe_broker",
            "foreignKeys": {
                "broker": {
                    "foreign_table": "broker",
                    "foreign_entity": "broker",
                    "column": "broker",
                    "fieldName": "broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_broker_broker_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_broker_recipe_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "recipeModel": {
        "selfReferential": [],
        "manyToMany": ["aiModel", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeModel",
            "table_name": "recipe_model",
            "foreignKeys": {
                "aiModel": {
                    "foreign_table": "ai_model",
                    "foreign_entity": "aiModel",
                    "column": "ai_model",
                    "fieldName": "aiModel",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_model_ai_model_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_model_recipe_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "systemFunction": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["registeredFunction"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["tool", "recipeFunction"],
        "relationshipDetails": {
            "entityName": "systemFunction",
            "table_name": "system_function",
            "foreignKeys": {
                "registeredFunction": {
                    "foreign_table": "registered_function",
                    "foreign_entity": "registeredFunction",
                    "column": "rf_id",
                    "fieldName": "rfId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "system_function_function_fkey"
                }
            },
            "referencedBy": {
                "tool": {
                    "foreign_table": "tool",
                    "foreign_entity": "tool",
                    "field": "systemFunction",
                    "column": "system_function",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "tool_system_function_fkey"
                },
                "recipeFunction": {
                    "foreign_table": "recipe_function",
                    "foreign_entity": "recipeFunction",
                    "field": "function",
                    "column": "function",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_function_function_fkey"
                }
            }
        }
    },
    "tool": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["systemFunction"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["recipeTool"],
        "relationshipDetails": {
            "entityName": "tool",
            "table_name": "tool",
            "foreignKeys": {
                "systemFunction": {
                    "foreign_table": "system_function",
                    "foreign_entity": "systemFunction",
                    "column": "system_function",
                    "fieldName": "systemFunction",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "tool_system_function_fkey"
                }
            },
            "referencedBy": {
                "recipeTool": {
                    "foreign_table": "recipe_tool",
                    "foreign_entity": "recipeTool",
                    "field": "tool",
                    "column": "tool",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_tool_tool_fkey"
                }
            }
        }
    },
    "bucketStructures": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "bucketStructures",
            "table_name": "bucket_structures",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "registeredFunction": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["broker"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["systemFunction", "arg"],
        "relationshipDetails": {
            "entityName": "registeredFunction",
            "table_name": "registered_function",
            "foreignKeys": {
                "broker": {
                    "foreign_table": "broker",
                    "foreign_entity": "broker",
                    "column": "return_broker",
                    "fieldName": "returnBroker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "registered_function_return_broker_fkey"
                }
            },
            "referencedBy": {
                "systemFunction": {
                    "foreign_table": "system_function",
                    "foreign_entity": "systemFunction",
                    "field": "rfId",
                    "column": "rf_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "system_function_function_fkey"
                },
                "arg": {
                    "foreign_table": "arg",
                    "foreign_entity": "arg",
                    "field": "registeredFunction",
                    "column": "registered_function",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "args_registered_function_fkey"
                }
            }
        }
    },
    "arg": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["registeredFunction"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "arg",
            "table_name": "arg",
            "foreignKeys": {
                "registeredFunction": {
                    "foreign_table": "registered_function",
                    "foreign_entity": "registeredFunction",
                    "column": "registered_function",
                    "fieldName": "registeredFunction",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "args_registered_function_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "automationBoundaryBroker": {
        "selfReferential": [],
        "manyToMany": ["broker", "automationMatrix"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "automationBoundaryBroker",
            "table_name": "automation_boundary_broker",
            "foreignKeys": {
                "broker": {
                    "foreign_table": "broker",
                    "foreign_entity": "broker",
                    "column": "broker",
                    "fieldName": "broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "boundary_brokers_broker_fkey"
                },
                "automationMatrix": {
                    "foreign_table": "automation_matrix",
                    "foreign_entity": "automationMatrix",
                    "column": "matrix",
                    "fieldName": "matrix",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "boundary_brokers_matrix_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "broker": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["dataInputComponent"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["recipeBroker", "registeredFunction", "automationBoundaryBroker"],
        "relationshipDetails": {
            "entityName": "broker",
            "table_name": "broker",
            "foreignKeys": {
                "dataInputComponent": {
                    "foreign_table": "data_input_component",
                    "foreign_entity": "dataInputComponent",
                    "column": "custom_source_component",
                    "fieldName": "customSourceComponent",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "broker_custom_component_fkey"
                }
            },
            "referencedBy": {
                "recipeBroker": {
                    "foreign_table": "recipe_broker",
                    "foreign_entity": "recipeBroker",
                    "field": "broker",
                    "column": "broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_broker_broker_fkey"
                },
                "registeredFunction": {
                    "foreign_table": "registered_function",
                    "foreign_entity": "registeredFunction",
                    "field": "returnBroker",
                    "column": "return_broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "registered_function_return_broker_fkey"
                },
                "automationBoundaryBroker": {
                    "foreign_table": "automation_boundary_broker",
                    "foreign_entity": "automationBoundaryBroker",
                    "field": "broker",
                    "column": "broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "boundary_brokers_broker_fkey"
                }
            }
        }
    },
    "displayOption": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["recipeDisplay"],
        "relationshipDetails": {
            "entityName": "displayOption",
            "table_name": "display_option",
            "foreignKeys": {},
            "referencedBy": {
                "recipeDisplay": {
                    "foreign_table": "recipe_display",
                    "foreign_entity": "recipeDisplay",
                    "field": "display",
                    "column": "display",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_display_display_fkey"
                }
            }
        }
    },
    "processor": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["recipeProcessor", "processor"],
        "relationshipDetails": {
            "entityName": "processor",
            "table_name": "processor",
            "foreignKeys": {
                "self_reference": {
                    "foreign_table": "self_reference",
                    "foreign_entity": "self_reference",
                    "column": "depends_default",
                    "fieldName": "dependsDefault",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "self-referential",
                    "constraint_name": "processors_depends_default_fkey"
                }
            },
            "referencedBy": {
                "recipeProcessor": {
                    "foreign_table": "recipe_processor",
                    "foreign_entity": "recipeProcessor",
                    "field": "processor",
                    "column": "processor",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "recipe_processor_processor_fkey"
                }
            }
        }
    },
    "recipeFunction": {
        "selfReferential": [],
        "manyToMany": ["systemFunction", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeFunction",
            "table_name": "recipe_function",
            "foreignKeys": {
                "systemFunction": {
                    "foreign_table": "system_function",
                    "foreign_entity": "systemFunction",
                    "column": "function",
                    "fieldName": "function",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_function_function_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_function_recipe_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "bucketTreeStructures": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "bucketTreeStructures",
            "table_name": "bucket_tree_structures",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "recipeTool": {
        "selfReferential": [],
        "manyToMany": ["recipe", "tool"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeTool",
            "table_name": "recipe_tool",
            "foreignKeys": {
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe",
                    "fieldName": "recipe",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_tool_recipe_fkey"
                },
                "tool": {
                    "foreign_table": "tool",
                    "foreign_entity": "tool",
                    "column": "tool",
                    "fieldName": "tool",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_tool_tool_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "transformer": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["action"],
        "relationshipDetails": {
            "entityName": "transformer",
            "table_name": "transformer",
            "foreignKeys": {},
            "referencedBy": {
                "action": {
                    "foreign_table": "action",
                    "foreign_entity": "action",
                    "field": "transformer",
                    "column": "transformer",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "action_transformer_fkey"
                }
            }
        }
    },
    "wcClaim": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["wcReport"],
        "relationshipDetails": {
            "entityName": "wcClaim",
            "table_name": "wc_claim",
            "foreignKeys": {},
            "referencedBy": {
                "wcReport": {
                    "foreign_table": "wc_report",
                    "foreign_entity": "wcReport",
                    "field": "claimId",
                    "column": "claim_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "wc_report_claim_id_fkey"
                }
            }
        }
    },
    "userPreferences": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "userPreferences",
            "table_name": "user_preferences",
            "foreignKeys": {},
            "referencedBy": {}
        }
    },
    "dataBroker": {
        "selfReferential": [],
        "manyToMany": ["dataInputComponent", "dataOutputComponent"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["brokerValue", "messageBroker"],
        "relationshipDetails": {
            "entityName": "dataBroker",
            "table_name": "data_broker",
            "foreignKeys": {
                "dataInputComponent": {
                    "foreign_table": "data_input_component",
                    "foreign_entity": "dataInputComponent",
                    "column": "input_component",
                    "fieldName": "inputComponent",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "data_broker_default_component_fkey"
                },
                "dataOutputComponent": {
                    "foreign_table": "data_output_component",
                    "foreign_entity": "dataOutputComponent",
                    "column": "output_component",
                    "fieldName": "outputComponent",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "data_broker_output_component_fkey"
                }
            },
            "referencedBy": {
                "brokerValue": {
                    "foreign_table": "broker_value",
                    "foreign_entity": "brokerValue",
                    "field": "dataBroker",
                    "column": "data_broker",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "broker_value_data_broker_fkey"
                },
                "messageBroker": {
                    "foreign_table": "message_broker",
                    "foreign_entity": "messageBroker",
                    "field": "brokerId",
                    "column": "broker_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "message_broker_broker_id_fkey"
                }
            }
        }
    },
    "recipeMessage": {
        "selfReferential": [],
        "manyToMany": ["messageTemplate", "recipe"],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": [],
        "relationshipDetails": {
            "entityName": "recipeMessage",
            "table_name": "recipe_message",
            "foreignKeys": {
                "messageTemplate": {
                    "foreign_table": "message_template",
                    "foreign_entity": "messageTemplate",
                    "column": "message_id",
                    "fieldName": "messageId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_message_message_id_fkey"
                },
                "recipe": {
                    "foreign_table": "recipe",
                    "foreign_entity": "recipe",
                    "column": "recipe_id",
                    "fieldName": "recipeId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-many",
                    "constraint_name": "recipe_message_recipe_id_fkey"
                }
            },
            "referencedBy": {}
        }
    },
    "category": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": [],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["subcategory"],
        "relationshipDetails": {
            "entityName": "category",
            "table_name": "category",
            "foreignKeys": {},
            "referencedBy": {
                "subcategory": {
                    "foreign_table": "subcategory",
                    "foreign_entity": "subcategory",
                    "field": "categoryId",
                    "column": "category_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "subcategory_category_id_fkey"
                }
            }
        }
    },
    "subcategory": {
        "selfReferential": [],
        "manyToMany": [],
        "oneToOne": [],
        "manyToOne": ["category"],
        "oneToMany": [],
        "undefined": [],
        "inverseReferences": ["applet"],
        "relationshipDetails": {
            "entityName": "subcategory",
            "table_name": "subcategory",
            "foreignKeys": {
                "category": {
                    "foreign_table": "category",
                    "foreign_entity": "category",
                    "column": "category_id",
                    "fieldName": "categoryId",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "relationship_type": "many-to-one",
                    "constraint_name": "subcategory_category_id_fkey"
                }
            },
            "referencedBy": {
                "applet": {
                    "foreign_table": "applet",
                    "foreign_entity": "applet",
                    "field": "subcategoryId",
                    "column": "subcategory_id",
                    "foreign_field": "id",
                    "foreign_column": "id",
                    "constraint_name": "applet_subcategory_id_fkey"
                }
            }
        }
    }
}
