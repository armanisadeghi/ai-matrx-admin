// File: lib/initialSchemas.ts

import {
    AutomationTableName,
    DataStructure,
    FetchStrategy,
    NameFormat,
    FieldDataType
} from '@/types/AutomationSchemaTypes';

export const initialAutomationTableSchema = {
    action: {
        entityNameVariations: {
            "frontend": "action",
            "backend": "action",
            "database": "action",
            "pretty": "Action",
            "component": "Action",
            "kebab": "action",
            "sqlFunctionRef": "p_action",
            "RestAPI": "action",
            "GraphQL": "action",
            "custom": "action"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: 255,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:3' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            matrix: {
                fieldNameVariations: {
                    "frontend": "matrix",
                    "backend": "matrix",
                    "database": "matrix",
                    "pretty": "Matrix",
                    "component": "Matrix",
                    "kebab": "matrix",
                    "sqlFunctionRef": "p_matrix",
                    "RestAPI": "matrix",
                    "GraphQL": "matrix",
                    "custom": "matrix"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            transformer: {
                fieldNameVariations: {
                    "frontend": "transformer",
                    "backend": "transformer",
                    "database": "transformer",
                    "pretty": "Transformer",
                    "component": "Transformer",
                    "kebab": "transformer",
                    "sqlFunctionRef": "p_transformer",
                    "RestAPI": "transformer",
                    "GraphQL": "transformer",
                    "custom": "transformer"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            nodeType: {
                fieldNameVariations: {
                    "frontend": "nodeType",
                    "backend": "node_type",
                    "database": "node_type",
                    "pretty": "Node Type",
                    "component": "NodeType",
                    "kebab": "node-type",
                    "sqlFunctionRef": "p_node_type",
                    "RestAPI": "nodeType",
                    "GraphQL": "nodeType",
                    "custom": "nodeType"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: 50,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input:50' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            referenceId: {
                fieldNameVariations: {
                    "frontend": "referenceId",
                    "backend": "reference_id",
                    "database": "reference_id",
                    "pretty": "Reference Id",
                    "component": "ReferenceId",
                    "kebab": "reference-id",
                    "sqlFunctionRef": "p_reference_id",
                    "RestAPI": "referenceId",
                    "GraphQL": "referenceId",
                    "custom": "referenceId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'action',
            },
            automationMatrixReference: {
                fieldNameVariations: {
                    "frontend": "automationMatrixReference",
                    "backend": "automation_matrix_reference",
                    "database": "ref_automation_matrix",
                    "sqlFunctionRef": "p_ref_automation_matrix",
                    "pretty": "Automation Matrix Reference",
                    "component": "AutomationMatrixReference",
                    "kebab": "automation-matrixReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['action'][]>,
                databaseTable: 'automation_matrix',
            },
            transformerReference: {
                fieldNameVariations: {
                    "frontend": "transformerReference",
                    "backend": "transformer_reference",
                    "database": "ref_transformer",
                    "sqlFunctionRef": "p_ref_transformer",
                    "pretty": "Transformer Reference",
                    "component": "TransformerReference",
                    "kebab": "transformerReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['action'][]>,
                databaseTable: 'transformer',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'matrix',
                relatedTable: 'automation_matrix',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'transformer',
                relatedTable: 'transformer',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    aiEndpoint: {
        entityNameVariations: {
            "frontend": "aiEndpoint",
            "backend": "ai_endpoint",
            "database": "ai_endpoint",
            "pretty": "Ai Endpoint",
            "component": "AiEndpoint",
            "kebab": "ai-endpoint",
            "sqlFunctionRef": "p_ai_endpoint",
            "RestAPI": "aiEndpoint",
            "GraphQL": "aiEndpoint",
            "custom": "aiEndpoint"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_endpoint',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_endpoint',
            },
            provider: {
                fieldNameVariations: {
                    "frontend": "provider",
                    "backend": "provider",
                    "database": "provider",
                    "pretty": "Provider",
                    "component": "Provider",
                    "kebab": "provider",
                    "sqlFunctionRef": "p_provider",
                    "RestAPI": "provider",
                    "GraphQL": "provider",
                    "custom": "provider"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_endpoint',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_endpoint',
            },
            additionalCost: {
                fieldNameVariations: {
                    "frontend": "additionalCost",
                    "backend": "additional_cost",
                    "database": "additional_cost",
                    "pretty": "Additional Cost",
                    "component": "AdditionalCost",
                    "kebab": "additional-cost",
                    "sqlFunctionRef": "p_additional_cost",
                    "RestAPI": "additionalCost",
                    "GraphQL": "additionalCost",
                    "custom": "additionalCost"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "true" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'ai_endpoint',
            },
            costDetails: {
                fieldNameVariations: {
                    "frontend": "costDetails",
                    "backend": "cost_details",
                    "database": "cost_details",
                    "pretty": "Cost Details",
                    "component": "CostDetails",
                    "kebab": "cost-details",
                    "sqlFunctionRef": "p_cost_details",
                    "RestAPI": "costDetails",
                    "GraphQL": "costDetails",
                    "custom": "costDetails"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'ai_endpoint',
            },
            params: {
                fieldNameVariations: {
                    "frontend": "params",
                    "backend": "params",
                    "database": "params",
                    "pretty": "Params",
                    "component": "Params",
                    "kebab": "params",
                    "sqlFunctionRef": "p_params",
                    "RestAPI": "params",
                    "GraphQL": "params",
                    "custom": "params"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'ai_endpoint',
            },
        },
        defaultFetchStrategy: 'simple',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [],
    },
    aiModel: {
        entityNameVariations: {
            "frontend": "aiModel",
            "backend": "ai_model",
            "database": "ai_model",
            "pretty": "Ai Model",
            "component": "AiModel",
            "kebab": "ai-model",
            "sqlFunctionRef": "p_ai_model",
            "RestAPI": "aiModel",
            "GraphQL": "aiModel",
            "custom": "aiModel"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_model',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_model',
            },
            commonName: {
                fieldNameVariations: {
                    "frontend": "commonName",
                    "backend": "common_name",
                    "database": "common_name",
                    "pretty": "Common Name",
                    "component": "CommonName",
                    "kebab": "common-name",
                    "sqlFunctionRef": "p_common_name",
                    "RestAPI": "commonName",
                    "GraphQL": "commonName",
                    "custom": "commonName"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_model',
            },
            modelClass: {
                fieldNameVariations: {
                    "frontend": "modelClass",
                    "backend": "model_class",
                    "database": "model_class",
                    "pretty": "Model Class",
                    "component": "ModelClass",
                    "kebab": "model-class",
                    "sqlFunctionRef": "p_model_class",
                    "RestAPI": "modelClass",
                    "GraphQL": "modelClass",
                    "custom": "modelClass"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_model',
            },
            provider: {
                fieldNameVariations: {
                    "frontend": "provider",
                    "backend": "provider",
                    "database": "provider",
                    "pretty": "Provider",
                    "component": "Provider",
                    "kebab": "provider",
                    "sqlFunctionRef": "p_provider",
                    "RestAPI": "provider",
                    "GraphQL": "provider",
                    "custom": "provider"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'ai_model',
            },
            endpoints: {
                fieldNameVariations: {
                    "frontend": "endpoints",
                    "backend": "endpoints",
                    "database": "endpoints",
                    "pretty": "Endpoints",
                    "component": "Endpoints",
                    "kebab": "endpoints",
                    "sqlFunctionRef": "p_endpoints",
                    "RestAPI": "endpoints",
                    "GraphQL": "endpoints",
                    "custom": "endpoints"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'ai_model',
            },
            contextWindow: {
                fieldNameVariations: {
                    "frontend": "contextWindow",
                    "backend": "context_window",
                    "database": "context_window",
                    "pretty": "Context Window",
                    "component": "ContextWindow",
                    "kebab": "context-window",
                    "sqlFunctionRef": "p_context_window",
                    "RestAPI": "contextWindow",
                    "GraphQL": "contextWindow",
                    "custom": "contextWindow"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'ai_model',
            },
            maxTokens: {
                fieldNameVariations: {
                    "frontend": "maxTokens",
                    "backend": "max_tokens",
                    "database": "max_tokens",
                    "pretty": "Max Tokens",
                    "component": "MaxTokens",
                    "kebab": "max-tokens",
                    "sqlFunctionRef": "p_max_tokens",
                    "RestAPI": "maxTokens",
                    "GraphQL": "maxTokens",
                    "custom": "maxTokens"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'ai_model',
            },
            capabilities: {
                fieldNameVariations: {
                    "frontend": "capabilities",
                    "backend": "capabilities",
                    "database": "capabilities",
                    "pretty": "Capabilities",
                    "component": "Capabilities",
                    "kebab": "capabilities",
                    "sqlFunctionRef": "p_capabilities",
                    "RestAPI": "capabilities",
                    "GraphQL": "capabilities",
                    "custom": "capabilities"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'ai_model',
            },
            controls: {
                fieldNameVariations: {
                    "frontend": "controls",
                    "backend": "controls",
                    "database": "controls",
                    "pretty": "Controls",
                    "component": "Controls",
                    "kebab": "controls",
                    "sqlFunctionRef": "p_controls",
                    "RestAPI": "controls",
                    "GraphQL": "controls",
                    "custom": "controls"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'ai_model',
            },
            recipeModelInverse: {
                fieldNameVariations: {
                    "frontend": "recipeModelInverse",
                    "backend": "recipe_model_Inverse",
                    "database": "ifk_recipe_model",
                    "sqlFunctionRef": "p_ifk_recipe_model",
                    "pretty": "Recipe Model Inverse",
                    "component": "RecipeModelInverse",
                    "kebab": "recipe-modelInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['aiModel'][]>,
                databaseTable: 'recipe_model',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_model',
                relatedColumn: 'ai_model',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'ai_model',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_model'
            }
        ],
    },
    arg: {
        entityNameVariations: {
            "frontend": "arg",
            "backend": "arg",
            "database": "arg",
            "pretty": "Arg",
            "component": "Arg",
            "kebab": "arg",
            "sqlFunctionRef": "p_arg",
            "RestAPI": "arg",
            "GraphQL": "arg",
            "custom": "arg"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'arg',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'arg',
            },
            required: {
                fieldNameVariations: {
                    "frontend": "required",
                    "backend": "required",
                    "database": "required",
                    "pretty": "Required",
                    "component": "Required",
                    "kebab": "required",
                    "sqlFunctionRef": "p_required",
                    "RestAPI": "required",
                    "GraphQL": "required",
                    "custom": "required"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "true" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'arg',
            },
            default: {
                fieldNameVariations: {
                    "frontend": "default",
                    "backend": "default",
                    "database": "default",
                    "pretty": "Default",
                    "component": "Default",
                    "kebab": "default",
                    "sqlFunctionRef": "p_default",
                    "RestAPI": "default",
                    "GraphQL": "default",
                    "custom": "default"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'arg',
            },
            dataType: {
                fieldNameVariations: {
                    "frontend": "dataType",
                    "backend": "data_type",
                    "database": "data_type",
                    "pretty": "Data Type",
                    "component": "DataType",
                    "kebab": "data-type",
                    "sqlFunctionRef": "p_data_type",
                    "RestAPI": "dataType",
                    "GraphQL": "dataType",
                    "custom": "dataType"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "str" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
                databaseTable: 'arg',
            },
            ready: {
                fieldNameVariations: {
                    "frontend": "ready",
                    "backend": "ready",
                    "database": "ready",
                    "pretty": "Ready",
                    "component": "Ready",
                    "kebab": "ready",
                    "sqlFunctionRef": "p_ready",
                    "RestAPI": "ready",
                    "GraphQL": "ready",
                    "custom": "ready"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'arg',
            },
            registeredFunction: {
                fieldNameVariations: {
                    "frontend": "registeredFunction",
                    "backend": "registered_function",
                    "database": "registered_function",
                    "pretty": "Registered Function",
                    "component": "RegisteredFunction",
                    "kebab": "registered-function",
                    "sqlFunctionRef": "p_registered_function",
                    "RestAPI": "registeredFunction",
                    "GraphQL": "registeredFunction",
                    "custom": "registeredFunction"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'arg',
            },
            registeredFunctionReference: {
                fieldNameVariations: {
                    "frontend": "registeredFunctionReference",
                    "backend": "registered_function_reference",
                    "database": "ref_registered_function",
                    "sqlFunctionRef": "p_ref_registered_function",
                    "pretty": "Registered Function Reference",
                    "component": "RegisteredFunctionReference",
                    "kebab": "registered-functionReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['arg'][]>,
                databaseTable: 'registered_function',
            },
        },
        defaultFetchStrategy: 'fk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'registered_function',
                relatedTable: 'registered_function',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    automationBoundaryBroker: {
        entityNameVariations: {
            "frontend": "automationBoundaryBroker",
            "backend": "automation_boundary_broker",
            "database": "automation_boundary_broker",
            "pretty": "Automation Boundary Broker",
            "component": "AutomationBoundaryBroker",
            "kebab": "automation-boundary-broker",
            "sqlFunctionRef": "p_automation_boundary_broker",
            "RestAPI": "automationBoundaryBroker",
            "GraphQL": "automationBoundaryBroker",
            "custom": "automationBoundaryBroker"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_boundary_broker',
            },
            matrix: {
                fieldNameVariations: {
                    "frontend": "matrix",
                    "backend": "matrix",
                    "database": "matrix",
                    "pretty": "Matrix",
                    "component": "Matrix",
                    "kebab": "matrix",
                    "sqlFunctionRef": "p_matrix",
                    "RestAPI": "matrix",
                    "GraphQL": "matrix",
                    "custom": "matrix"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_boundary_broker',
            },
            broker: {
                fieldNameVariations: {
                    "frontend": "broker",
                    "backend": "broker",
                    "database": "broker",
                    "pretty": "Broker",
                    "component": "Broker",
                    "kebab": "broker",
                    "sqlFunctionRef": "p_broker",
                    "RestAPI": "broker",
                    "GraphQL": "broker",
                    "custom": "broker"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_boundary_broker',
            },
            sparkSource: {
                fieldNameVariations: {
                    "frontend": "sparkSource",
                    "backend": "spark_source",
                    "database": "spark_source",
                    "pretty": "Spark Source",
                    "component": "SparkSource",
                    "kebab": "spark-source",
                    "sqlFunctionRef": "p_spark_source",
                    "RestAPI": "sparkSource",
                    "GraphQL": "sparkSource",
                    "custom": "sparkSource"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"api" | "chance" | "database" | "environment" | "file" | "function" | "generated_data" | "none" | "user_input" | undefined>,
                databaseTable: 'automation_boundary_broker',
            },
            beaconDestination: {
                fieldNameVariations: {
                    "frontend": "beaconDestination",
                    "backend": "beacon_destination",
                    "database": "beacon_destination",
                    "pretty": "Beacon Destination",
                    "component": "BeaconDestination",
                    "kebab": "beacon-destination",
                    "sqlFunctionRef": "p_beacon_destination",
                    "RestAPI": "beaconDestination",
                    "GraphQL": "beaconDestination",
                    "custom": "beaconDestination"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"api_response" | "database" | "file" | "function" | "user_output" | undefined>,
                databaseTable: 'automation_boundary_broker',
            },
            brokerReference: {
                fieldNameVariations: {
                    "frontend": "brokerReference",
                    "backend": "broker_reference",
                    "database": "ref_broker",
                    "sqlFunctionRef": "p_ref_broker",
                    "pretty": "Broker Reference",
                    "component": "BrokerReference",
                    "kebab": "brokerReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['automationBoundaryBroker'][]>,
                databaseTable: 'broker',
            },
            automationMatrixReference: {
                fieldNameVariations: {
                    "frontend": "automationMatrixReference",
                    "backend": "automation_matrix_reference",
                    "database": "ref_automation_matrix",
                    "sqlFunctionRef": "p_ref_automation_matrix",
                    "pretty": "Automation Matrix Reference",
                    "component": "AutomationMatrixReference",
                    "kebab": "automation-matrixReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['automationBoundaryBroker'][]>,
                databaseTable: 'automation_matrix',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'broker',
                relatedTable: 'broker',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'matrix',
                relatedTable: 'automation_matrix',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    automationMatrix: {
        entityNameVariations: {
            "frontend": "automationMatrix",
            "backend": "automation_matrix",
            "database": "automation_matrix",
            "pretty": "Automation Matrix",
            "component": "AutomationMatrix",
            "kebab": "automation-matrix",
            "sqlFunctionRef": "p_automation_matrix",
            "RestAPI": "automationMatrix",
            "GraphQL": "automationMatrix",
            "custom": "automationMatrix"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_matrix',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_matrix',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'automation_matrix',
            },
            averageSeconds: {
                fieldNameVariations: {
                    "frontend": "averageSeconds",
                    "backend": "average_seconds",
                    "database": "average_seconds",
                    "pretty": "Average Seconds",
                    "component": "AverageSeconds",
                    "kebab": "average-seconds",
                    "sqlFunctionRef": "p_average_seconds",
                    "RestAPI": "averageSeconds",
                    "GraphQL": "averageSeconds",
                    "custom": "averageSeconds"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'automation_matrix',
            },
            isAutomated: {
                fieldNameVariations: {
                    "frontend": "isAutomated",
                    "backend": "is_automated",
                    "database": "is_automated",
                    "pretty": "Is Automated",
                    "component": "IsAutomated",
                    "kebab": "is-automated",
                    "sqlFunctionRef": "p_is_automated",
                    "RestAPI": "isAutomated",
                    "GraphQL": "isAutomated",
                    "custom": "isAutomated"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'automation_matrix',
            },
            cognitionMatrices: {
                fieldNameVariations: {
                    "frontend": "cognitionMatrices",
                    "backend": "cognition_matrices",
                    "database": "cognition_matrices",
                    "pretty": "Cognition Matrices",
                    "component": "CognitionMatrices",
                    "kebab": "cognition-matrices",
                    "sqlFunctionRef": "p_cognition_matrices",
                    "RestAPI": "cognitionMatrices",
                    "GraphQL": "cognitionMatrices",
                    "custom": "cognitionMatrices"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"agent_crew" | "agent_mixture" | "conductor" | "hypercluster" | "knowledge_matrix" | "monte_carlo" | "the_matrix" | "workflow" | undefined>,
                databaseTable: 'automation_matrix',
            },
            actionInverse: {
                fieldNameVariations: {
                    "frontend": "actionInverse",
                    "backend": "action_Inverse",
                    "database": "ifk_action",
                    "sqlFunctionRef": "p_ifk_action",
                    "pretty": "Action Inverse",
                    "component": "ActionInverse",
                    "kebab": "actionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['automationMatrix'][]>,
                databaseTable: 'action',
            },
            automationBoundaryBrokerInverse: {
                fieldNameVariations: {
                    "frontend": "automationBoundaryBrokerInverse",
                    "backend": "automation_boundary_broker_Inverse",
                    "database": "ifk_automation_boundary_broker",
                    "sqlFunctionRef": "p_ifk_automation_boundary_broker",
                    "pretty": "Automation Boundary Broker Inverse",
                    "component": "AutomationBoundaryBrokerInverse",
                    "kebab": "automation-boundary-brokerInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['automationMatrix'][]>,
                databaseTable: 'automation_boundary_broker',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'action',
                relatedColumn: 'matrix',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'automation_boundary_broker',
                relatedColumn: 'matrix',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'matrix',
                relatedTable: 'transformer',
                relatedColumn: 'transformer',
                junctionTable: 'action'
            },
            {
                relationshipType: 'manyToMany',
                column: 'matrix',
                relatedTable: 'broker',
                relatedColumn: 'broker',
                junctionTable: 'automation_boundary_broker'
            }
        ],
    },
    broker: {
        entityNameVariations: {
            "frontend": "broker",
            "backend": "broker",
            "database": "broker",
            "pretty": "Broker",
            "component": "Broker",
            "kebab": "broker",
            "sqlFunctionRef": "p_broker",
            "RestAPI": "broker",
            "GraphQL": "broker",
            "custom": "broker"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            value: {
                fieldNameVariations: {
                    "frontend": "value",
                    "backend": "value",
                    "database": "value",
                    "pretty": "Value",
                    "component": "Value",
                    "kebab": "value",
                    "sqlFunctionRef": "p_value",
                    "RestAPI": "value",
                    "GraphQL": "value",
                    "custom": "value"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'broker',
            },
            dataType: {
                fieldNameVariations: {
                    "frontend": "dataType",
                    "backend": "data_type",
                    "database": "data_type",
                    "pretty": "Data Type",
                    "component": "DataType",
                    "kebab": "data-type",
                    "sqlFunctionRef": "p_data_type",
                    "RestAPI": "dataType",
                    "GraphQL": "dataType",
                    "custom": "dataType"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "str" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
                databaseTable: 'broker',
            },
            ready: {
                fieldNameVariations: {
                    "frontend": "ready",
                    "backend": "ready",
                    "database": "ready",
                    "pretty": "Ready",
                    "component": "Ready",
                    "kebab": "ready",
                    "sqlFunctionRef": "p_ready",
                    "RestAPI": "ready",
                    "GraphQL": "ready",
                    "custom": "ready"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'broker',
            },
            defaultSource: {
                fieldNameVariations: {
                    "frontend": "defaultSource",
                    "backend": "default_source",
                    "database": "default_source",
                    "pretty": "Default Source",
                    "component": "DefaultSource",
                    "kebab": "default-source",
                    "sqlFunctionRef": "p_default_source",
                    "RestAPI": "defaultSource",
                    "GraphQL": "defaultSource",
                    "custom": "defaultSource"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "none" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"api" | "chance" | "database" | "environment" | "file" | "function" | "generated_data" | "none" | "user_input" | undefined>,
                databaseTable: 'broker',
            },
            displayName: {
                fieldNameVariations: {
                    "frontend": "displayName",
                    "backend": "display_name",
                    "database": "display_name",
                    "pretty": "Display Name",
                    "component": "DisplayName",
                    "kebab": "display-name",
                    "sqlFunctionRef": "p_display_name",
                    "RestAPI": "displayName",
                    "GraphQL": "displayName",
                    "custom": "displayName"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            tooltip: {
                fieldNameVariations: {
                    "frontend": "tooltip",
                    "backend": "tooltip",
                    "database": "tooltip",
                    "pretty": "Tooltip",
                    "component": "Tooltip",
                    "kebab": "tooltip",
                    "sqlFunctionRef": "p_tooltip",
                    "RestAPI": "tooltip",
                    "GraphQL": "tooltip",
                    "custom": "tooltip"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            validationRules: {
                fieldNameVariations: {
                    "frontend": "validationRules",
                    "backend": "validation_rules",
                    "database": "validation_rules",
                    "pretty": "Validation Rules",
                    "component": "ValidationRules",
                    "kebab": "validation-rules",
                    "sqlFunctionRef": "p_validation_rules",
                    "RestAPI": "validationRules",
                    "GraphQL": "validationRules",
                    "custom": "validationRules"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'broker',
            },
            sampleEntries: {
                fieldNameVariations: {
                    "frontend": "sampleEntries",
                    "backend": "sample_entries",
                    "database": "sample_entries",
                    "pretty": "Sample Entries",
                    "component": "SampleEntries",
                    "kebab": "sample-entries",
                    "sqlFunctionRef": "p_sample_entries",
                    "RestAPI": "sampleEntries",
                    "GraphQL": "sampleEntries",
                    "custom": "sampleEntries"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            customSourceComponent: {
                fieldNameVariations: {
                    "frontend": "customSourceComponent",
                    "backend": "custom_source_component",
                    "database": "custom_source_component",
                    "pretty": "Custom Source Component",
                    "component": "CustomSourceComponent",
                    "kebab": "custom-source-component",
                    "sqlFunctionRef": "p_custom_source_component",
                    "RestAPI": "customSourceComponent",
                    "GraphQL": "customSourceComponent",
                    "custom": "customSourceComponent"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'broker',
            },
            additionalParams: {
                fieldNameVariations: {
                    "frontend": "additionalParams",
                    "backend": "additional_params",
                    "database": "additional_params",
                    "pretty": "Additional Params",
                    "component": "AdditionalParams",
                    "kebab": "additional-params",
                    "sqlFunctionRef": "p_additional_params",
                    "RestAPI": "additionalParams",
                    "GraphQL": "additionalParams",
                    "custom": "additionalParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'broker',
            },
            otherSourceParams: {
                fieldNameVariations: {
                    "frontend": "otherSourceParams",
                    "backend": "other_source_params",
                    "database": "other_source_params",
                    "pretty": "Other Source Params",
                    "component": "OtherSourceParams",
                    "kebab": "other-source-params",
                    "sqlFunctionRef": "p_other_source_params",
                    "RestAPI": "otherSourceParams",
                    "GraphQL": "otherSourceParams",
                    "custom": "otherSourceParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'broker',
            },
            defaultDestination: {
                fieldNameVariations: {
                    "frontend": "defaultDestination",
                    "backend": "default_destination",
                    "database": "default_destination",
                    "pretty": "Default Destination",
                    "component": "DefaultDestination",
                    "kebab": "default-destination",
                    "sqlFunctionRef": "p_default_destination",
                    "RestAPI": "defaultDestination",
                    "GraphQL": "defaultDestination",
                    "custom": "defaultDestination"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"api_response" | "database" | "file" | "function" | "user_output" | undefined>,
                databaseTable: 'broker',
            },
            outputComponent: {
                fieldNameVariations: {
                    "frontend": "outputComponent",
                    "backend": "output_component",
                    "database": "output_component",
                    "pretty": "Output Component",
                    "component": "OutputComponent",
                    "kebab": "output-component",
                    "sqlFunctionRef": "p_output_component",
                    "RestAPI": "outputComponent",
                    "GraphQL": "outputComponent",
                    "custom": "outputComponent"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"3DModelViewer" | "AudioOutput" | "BucketList" | "BudgetVisualizer" | "Calendar" | "Carousel" | "Checklist" | "Clock" | "CodeView" | "ComplexMulti" | "DataFlowDiagram" | "DecisionTree" | "DiffViewer" | "FileOutput" | "FitnessTracker" | "Flowchart" | "Form" | "GanttChart" | "GeographicMap" | "GlossaryView" | "Heatmap" | "HorizontalList" | "ImageView" | "InteractiveChart" | "JsonViewer" | "KanbanBoard" | "LaTeXRenderer" | "LiveTraffic" | "LocalEvents" | "MarkdownViewer" | "MealPlanner" | "MindMap" | "NeedNewOption" | "NetworkGraph" | "NewsAggregator" | "PDFViewer" | "PivotTable" | "PlainText" | "Presentation" | "PublicLiveCam" | "RichTextEditor" | "RunCodeBack" | "RunCodeFront" | "SVGEditor" | "SankeyDiagram" | "SatelliteView" | "SocialMediaInfo" | "SpectrumAnalyzer" | "Spreadsheet" | "Table" | "TaskPrioritization" | "Textarea" | "Thermometer" | "Timeline" | "TravelPlanner" | "TreeView" | "UMLDiagram" | "VerticalList" | "VoiceSentimentAnalysis" | "WeatherDashboard" | "WeatherMap" | "WordHighlighter" | "WordMap" | "chatResponse" | "none" | "video" | undefined>,
                databaseTable: 'broker',
            },
            tags: {
                fieldNameVariations: {
                    "frontend": "tags",
                    "backend": "tags",
                    "database": "tags",
                    "pretty": "Tags",
                    "component": "Tags",
                    "kebab": "tags",
                    "sqlFunctionRef": "p_tags",
                    "RestAPI": "tags",
                    "GraphQL": "tags",
                    "custom": "tags"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "[]" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'broker',
            },
            dataInputComponentReference: {
                fieldNameVariations: {
                    "frontend": "dataInputComponentReference",
                    "backend": "data_input_component_reference",
                    "database": "ref_data_input_component",
                    "sqlFunctionRef": "p_ref_data_input_component",
                    "pretty": "Data Input Component Reference",
                    "component": "DataInputComponentReference",
                    "kebab": "data-input-componentReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
                databaseTable: 'data_input_component',
            },
            recipeBrokerInverse: {
                fieldNameVariations: {
                    "frontend": "recipeBrokerInverse",
                    "backend": "recipe_broker_Inverse",
                    "database": "ifk_recipe_broker",
                    "sqlFunctionRef": "p_ifk_recipe_broker",
                    "pretty": "Recipe Broker Inverse",
                    "component": "RecipeBrokerInverse",
                    "kebab": "recipe-brokerInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
                databaseTable: 'recipe_broker',
            },
            registeredFunctionInverse: {
                fieldNameVariations: {
                    "frontend": "registeredFunctionInverse",
                    "backend": "registered_function_Inverse",
                    "database": "ifk_registered_function",
                    "sqlFunctionRef": "p_ifk_registered_function",
                    "pretty": "Registered Function Inverse",
                    "component": "RegisteredFunctionInverse",
                    "kebab": "registered-functionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
                databaseTable: 'registered_function',
            },
            automationBoundaryBrokerInverse: {
                fieldNameVariations: {
                    "frontend": "automationBoundaryBrokerInverse",
                    "backend": "automation_boundary_broker_Inverse",
                    "database": "ifk_automation_boundary_broker",
                    "sqlFunctionRef": "p_ifk_automation_boundary_broker",
                    "pretty": "Automation Boundary Broker Inverse",
                    "component": "AutomationBoundaryBrokerInverse",
                    "kebab": "automation-boundary-brokerInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['broker'][]>,
                databaseTable: 'automation_boundary_broker',
            },
        },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'custom_source_component',
                relatedTable: 'data_input_component',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_broker',
                relatedColumn: 'broker',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'registered_function',
                relatedColumn: 'return_broker',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'automation_boundary_broker',
                relatedColumn: 'broker',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'broker',
                relatedTable: 'automation_matrix',
                relatedColumn: 'matrix',
                junctionTable: 'automation_boundary_broker'
            },
            {
                relationshipType: 'manyToMany',
                column: 'broker',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_broker'
            }
        ],
    },
    dataInputComponent: {
        entityNameVariations: {
            "frontend": "dataInputComponent",
            "backend": "data_input_component",
            "database": "data_input_component",
            "pretty": "Data Input Component",
            "component": "DataInputComponent",
            "kebab": "data-input-component",
            "sqlFunctionRef": "p_data_input_component",
            "RestAPI": "dataInputComponent",
            "GraphQL": "dataInputComponent",
            "custom": "dataInputComponent"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'data_input_component',
            },
            options: {
                fieldNameVariations: {
                    "frontend": "options",
                    "backend": "options",
                    "database": "options",
                    "pretty": "Options",
                    "component": "Options",
                    "kebab": "options",
                    "sqlFunctionRef": "p_options",
                    "RestAPI": "options",
                    "GraphQL": "options",
                    "custom": "options"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_input_component',
            },
            includeOther: {
                fieldNameVariations: {
                    "frontend": "includeOther",
                    "backend": "include_other",
                    "database": "include_other",
                    "pretty": "Include Other",
                    "component": "IncludeOther",
                    "kebab": "include-other",
                    "sqlFunctionRef": "p_include_other",
                    "RestAPI": "includeOther",
                    "GraphQL": "includeOther",
                    "custom": "includeOther"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'data_input_component',
            },
            min: {
                fieldNameVariations: {
                    "frontend": "min",
                    "backend": "min",
                    "database": "min",
                    "pretty": "Min",
                    "component": "Min",
                    "kebab": "min",
                    "sqlFunctionRef": "p_min",
                    "RestAPI": "min",
                    "GraphQL": "min",
                    "custom": "min"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:float' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'data_input_component',
            },
            max: {
                fieldNameVariations: {
                    "frontend": "max",
                    "backend": "max",
                    "database": "max",
                    "pretty": "Max",
                    "component": "Max",
                    "kebab": "max",
                    "sqlFunctionRef": "p_max",
                    "RestAPI": "max",
                    "GraphQL": "max",
                    "custom": "max"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:float' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'data_input_component',
            },
            step: {
                fieldNameVariations: {
                    "frontend": "step",
                    "backend": "step",
                    "database": "step",
                    "pretty": "Step",
                    "component": "Step",
                    "kebab": "step",
                    "sqlFunctionRef": "p_step",
                    "RestAPI": "step",
                    "GraphQL": "step",
                    "custom": "step"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'data_input_component',
            },
            minRows: {
                fieldNameVariations: {
                    "frontend": "minRows",
                    "backend": "min_rows",
                    "database": "min_rows",
                    "pretty": "Min Rows",
                    "component": "MinRows",
                    "kebab": "min-rows",
                    "sqlFunctionRef": "p_min_rows",
                    "RestAPI": "minRows",
                    "GraphQL": "minRows",
                    "custom": "minRows"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'data_input_component',
            },
            maxRows: {
                fieldNameVariations: {
                    "frontend": "maxRows",
                    "backend": "max_rows",
                    "database": "max_rows",
                    "pretty": "Max Rows",
                    "component": "MaxRows",
                    "kebab": "max-rows",
                    "sqlFunctionRef": "p_max_rows",
                    "RestAPI": "maxRows",
                    "GraphQL": "maxRows",
                    "custom": "maxRows"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'data_input_component',
            },
            acceptableFiletypes: {
                fieldNameVariations: {
                    "frontend": "acceptableFiletypes",
                    "backend": "acceptable_filetypes",
                    "database": "acceptable_filetypes",
                    "pretty": "Acceptable Filetypes",
                    "component": "AcceptableFiletypes",
                    "kebab": "acceptable-filetypes",
                    "sqlFunctionRef": "p_acceptable_filetypes",
                    "RestAPI": "acceptableFiletypes",
                    "GraphQL": "acceptableFiletypes",
                    "custom": "acceptableFiletypes"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_input_component',
            },
            src: {
                fieldNameVariations: {
                    "frontend": "src",
                    "backend": "src",
                    "database": "src",
                    "pretty": "Src",
                    "component": "Src",
                    "kebab": "src",
                    "sqlFunctionRef": "p_src",
                    "RestAPI": "src",
                    "GraphQL": "src",
                    "custom": "src"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'data_input_component',
            },
            classes: {
                fieldNameVariations: {
                    "frontend": "classes",
                    "backend": "classes",
                    "database": "classes",
                    "pretty": "Classes",
                    "component": "Classes",
                    "kebab": "classes",
                    "sqlFunctionRef": "p_classes",
                    "RestAPI": "classes",
                    "GraphQL": "classes",
                    "custom": "classes"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'data_input_component',
            },
            colorOverrides: {
                fieldNameVariations: {
                    "frontend": "colorOverrides",
                    "backend": "color_overrides",
                    "database": "color_overrides",
                    "pretty": "Color Overrides",
                    "component": "ColorOverrides",
                    "kebab": "color-overrides",
                    "sqlFunctionRef": "p_color_overrides",
                    "RestAPI": "colorOverrides",
                    "GraphQL": "colorOverrides",
                    "custom": "colorOverrides"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_input_component',
            },
            additionalParams: {
                fieldNameVariations: {
                    "frontend": "additionalParams",
                    "backend": "additional_params",
                    "database": "additional_params",
                    "pretty": "Additional Params",
                    "component": "AdditionalParams",
                    "kebab": "additional-params",
                    "sqlFunctionRef": "p_additional_params",
                    "RestAPI": "additionalParams",
                    "GraphQL": "additionalParams",
                    "custom": "additionalParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_input_component',
            },
            brokerInverse: {
                fieldNameVariations: {
                    "frontend": "brokerInverse",
                    "backend": "broker_Inverse",
                    "database": "ifk_broker",
                    "sqlFunctionRef": "p_ifk_broker",
                    "pretty": "Broker Inverse",
                    "component": "BrokerInverse",
                    "kebab": "brokerInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['dataInputComponent'][]>,
                databaseTable: 'broker',
            },
        },
        defaultFetchStrategy: 'ifk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'broker',
                relatedColumn: 'custom_source_component',
                junctionTable: null
            }
        ],
    },
    dataOutputComponent: {
        entityNameVariations: {
            "frontend": "dataOutputComponent",
            "backend": "data_output_component",
            "database": "data_output_component",
            "pretty": "Data Output Component",
            "component": "DataOutputComponent",
            "kebab": "data-output-component",
            "sqlFunctionRef": "p_data_output_component",
            "RestAPI": "dataOutputComponent",
            "GraphQL": "dataOutputComponent",
            "custom": "dataOutputComponent"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'data_output_component',
            },
            componentType: {
                fieldNameVariations: {
                    "frontend": "componentType",
                    "backend": "component_type",
                    "database": "component_type",
                    "pretty": "Component Type",
                    "component": "ComponentType",
                    "kebab": "component-type",
                    "sqlFunctionRef": "p_component_type",
                    "RestAPI": "componentType",
                    "GraphQL": "componentType",
                    "custom": "componentType"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"3DModelViewer" | "AudioOutput" | "BucketList" | "BudgetVisualizer" | "Calendar" | "Carousel" | "Checklist" | "Clock" | "CodeView" | "ComplexMulti" | "DataFlowDiagram" | "DecisionTree" | "DiffViewer" | "FileOutput" | "FitnessTracker" | "Flowchart" | "Form" | "GanttChart" | "GeographicMap" | "GlossaryView" | "Heatmap" | "HorizontalList" | "ImageView" | "InteractiveChart" | "JsonViewer" | "KanbanBoard" | "LaTeXRenderer" | "LiveTraffic" | "LocalEvents" | "MarkdownViewer" | "MealPlanner" | "MindMap" | "NeedNewOption" | "NetworkGraph" | "NewsAggregator" | "PDFViewer" | "PivotTable" | "PlainText" | "Presentation" | "PublicLiveCam" | "RichTextEditor" | "RunCodeBack" | "RunCodeFront" | "SVGEditor" | "SankeyDiagram" | "SatelliteView" | "SocialMediaInfo" | "SpectrumAnalyzer" | "Spreadsheet" | "Table" | "TaskPrioritization" | "Textarea" | "Thermometer" | "Timeline" | "TravelPlanner" | "TreeView" | "UMLDiagram" | "VerticalList" | "VoiceSentimentAnalysis" | "WeatherDashboard" | "WeatherMap" | "WordHighlighter" | "WordMap" | "chatResponse" | "none" | "video" | undefined>,
                databaseTable: 'data_output_component',
            },
            uiComponent: {
                fieldNameVariations: {
                    "frontend": "uiComponent",
                    "backend": "ui_component",
                    "database": "ui_component",
                    "pretty": "Ui Component",
                    "component": "UiComponent",
                    "kebab": "ui-component",
                    "sqlFunctionRef": "p_ui_component",
                    "RestAPI": "uiComponent",
                    "GraphQL": "uiComponent",
                    "custom": "uiComponent"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'data_output_component',
            },
            props: {
                fieldNameVariations: {
                    "frontend": "props",
                    "backend": "props",
                    "database": "props",
                    "pretty": "Props",
                    "component": "Props",
                    "kebab": "props",
                    "sqlFunctionRef": "p_props",
                    "RestAPI": "props",
                    "GraphQL": "props",
                    "custom": "props"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_output_component',
            },
            additionalParams: {
                fieldNameVariations: {
                    "frontend": "additionalParams",
                    "backend": "additional_params",
                    "database": "additional_params",
                    "pretty": "Additional Params",
                    "component": "AdditionalParams",
                    "kebab": "additional-params",
                    "sqlFunctionRef": "p_additional_params",
                    "RestAPI": "additionalParams",
                    "GraphQL": "additionalParams",
                    "custom": "additionalParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'data_output_component',
            },
        },
        defaultFetchStrategy: 'simple',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [],
    },
    displayOption: {
        entityNameVariations: {
            "frontend": "displayOption",
            "backend": "display_option",
            "database": "display_option",
            "pretty": "Display Option",
            "component": "DisplayOption",
            "kebab": "display-option",
            "sqlFunctionRef": "p_display_option",
            "RestAPI": "displayOption",
            "GraphQL": "displayOption",
            "custom": "displayOption"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'display_option',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'display_option',
            },
            defaultParams: {
                fieldNameVariations: {
                    "frontend": "defaultParams",
                    "backend": "default_params",
                    "database": "default_params",
                    "pretty": "Default Params",
                    "component": "DefaultParams",
                    "kebab": "default-params",
                    "sqlFunctionRef": "p_default_params",
                    "RestAPI": "defaultParams",
                    "GraphQL": "defaultParams",
                    "custom": "defaultParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'display_option',
            },
            customizableParams: {
                fieldNameVariations: {
                    "frontend": "customizableParams",
                    "backend": "customizable_params",
                    "database": "customizable_params",
                    "pretty": "Customizable Params",
                    "component": "CustomizableParams",
                    "kebab": "customizable-params",
                    "sqlFunctionRef": "p_customizable_params",
                    "RestAPI": "customizableParams",
                    "GraphQL": "customizableParams",
                    "custom": "customizableParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'display_option',
            },
            additionalParams: {
                fieldNameVariations: {
                    "frontend": "additionalParams",
                    "backend": "additional_params",
                    "database": "additional_params",
                    "pretty": "Additional Params",
                    "component": "AdditionalParams",
                    "kebab": "additional-params",
                    "sqlFunctionRef": "p_additional_params",
                    "RestAPI": "additionalParams",
                    "GraphQL": "additionalParams",
                    "custom": "additionalParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'display_option',
            },
            recipeDisplayInverse: {
                fieldNameVariations: {
                    "frontend": "recipeDisplayInverse",
                    "backend": "recipe_display_Inverse",
                    "database": "ifk_recipe_display",
                    "sqlFunctionRef": "p_ifk_recipe_display",
                    "pretty": "Recipe Display Inverse",
                    "component": "RecipeDisplayInverse",
                    "kebab": "recipe-displayInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['displayOption'][]>,
                databaseTable: 'recipe_display',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_display',
                relatedColumn: 'display',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'display',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_display'
            }
        ],
    },
    emails: {
        entityNameVariations: {
            "frontend": "emails",
            "backend": "emails",
            "database": "emails",
            "pretty": "Emails",
            "component": "Emails",
            "kebab": "emails",
            "sqlFunctionRef": "p_emails",
            "RestAPI": "emails",
            "GraphQL": "emails",
            "custom": "emails"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'emails',
            },
            sender: {
                fieldNameVariations: {
                    "frontend": "sender",
                    "backend": "sender",
                    "database": "sender",
                    "pretty": "Sender",
                    "component": "Sender",
                    "kebab": "sender",
                    "sqlFunctionRef": "p_sender",
                    "RestAPI": "sender",
                    "GraphQL": "sender",
                    "custom": "sender"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'emails',
            },
            recipient: {
                fieldNameVariations: {
                    "frontend": "recipient",
                    "backend": "recipient",
                    "database": "recipient",
                    "pretty": "Recipient",
                    "component": "Recipient",
                    "kebab": "recipient",
                    "sqlFunctionRef": "p_recipient",
                    "RestAPI": "recipient",
                    "GraphQL": "recipient",
                    "custom": "recipient"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'emails',
            },
            subject: {
                fieldNameVariations: {
                    "frontend": "subject",
                    "backend": "subject",
                    "database": "subject",
                    "pretty": "Subject",
                    "component": "Subject",
                    "kebab": "subject",
                    "sqlFunctionRef": "p_subject",
                    "RestAPI": "subject",
                    "GraphQL": "subject",
                    "custom": "subject"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'emails',
            },
            body: {
                fieldNameVariations: {
                    "frontend": "body",
                    "backend": "body",
                    "database": "body",
                    "pretty": "Body",
                    "component": "Body",
                    "kebab": "body",
                    "sqlFunctionRef": "p_body",
                    "RestAPI": "body",
                    "GraphQL": "body",
                    "custom": "body"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'emails',
            },
            timestamp: {
                fieldNameVariations: {
                    "frontend": "timestamp",
                    "backend": "timestamp",
                    "database": "timestamp",
                    "pretty": "Timestamp",
                    "component": "Timestamp",
                    "kebab": "timestamp",
                    "sqlFunctionRef": "p_timestamp",
                    "RestAPI": "timestamp",
                    "GraphQL": "timestamp",
                    "custom": "timestamp"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'emails',
            },
            isRead: {
                fieldNameVariations: {
                    "frontend": "isRead",
                    "backend": "is_read",
                    "database": "is_read",
                    "pretty": "Is Read",
                    "component": "IsRead",
                    "kebab": "is-read",
                    "sqlFunctionRef": "p_is_read",
                    "RestAPI": "isRead",
                    "GraphQL": "isRead",
                    "custom": "isRead"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'emails',
            },
        },
        defaultFetchStrategy: 'simple',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [],
    },
    extractor: {
        entityNameVariations: {
            "frontend": "extractor",
            "backend": "extractor",
            "database": "extractor",
            "pretty": "Extractor",
            "component": "Extractor",
            "kebab": "extractor",
            "sqlFunctionRef": "p_extractor",
            "RestAPI": "extractor",
            "GraphQL": "extractor",
            "custom": "extractor"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'extractor',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'extractor',
            },
            outputType: {
                fieldNameVariations: {
                    "frontend": "outputType",
                    "backend": "output_type",
                    "database": "output_type",
                    "pretty": "Output Type",
                    "component": "OutputType",
                    "kebab": "output-type",
                    "sqlFunctionRef": "p_output_type",
                    "RestAPI": "outputType",
                    "GraphQL": "outputType",
                    "custom": "outputType"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"bool" | "dict" | "float" | "int" | "list" | "str" | "url" | undefined>,
                databaseTable: 'extractor',
            },
            defaultIdentifier: {
                fieldNameVariations: {
                    "frontend": "defaultIdentifier",
                    "backend": "default_identifier",
                    "database": "default_identifier",
                    "pretty": "Default Identifier",
                    "component": "DefaultIdentifier",
                    "kebab": "default-identifier",
                    "sqlFunctionRef": "p_default_identifier",
                    "RestAPI": "defaultIdentifier",
                    "GraphQL": "defaultIdentifier",
                    "custom": "defaultIdentifier"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'extractor',
            },
            defaultIndex: {
                fieldNameVariations: {
                    "frontend": "defaultIndex",
                    "backend": "default_index",
                    "database": "default_index",
                    "pretty": "Default Index",
                    "component": "DefaultIndex",
                    "kebab": "default-index",
                    "sqlFunctionRef": "p_default_index",
                    "RestAPI": "defaultIndex",
                    "GraphQL": "defaultIndex",
                    "custom": "defaultIndex"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'extractor',
            },
        },
        defaultFetchStrategy: 'simple',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [],
    },
    flashcardData: {
        entityNameVariations: {
            "frontend": "flashcardData",
            "backend": "flashcard_data",
            "database": "flashcard_data",
            "pretty": "Flashcard Data",
            "component": "FlashcardData",
            "kebab": "flashcard-data",
            "sqlFunctionRef": "p_flashcard_data",
            "RestAPI": "flashcardData",
            "GraphQL": "flashcardData",
            "custom": "flashcardData"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            userId: {
                fieldNameVariations: {
                    "frontend": "userId",
                    "backend": "user_id",
                    "database": "user_id",
                    "pretty": "User Id",
                    "component": "UserId",
                    "kebab": "user-id",
                    "sqlFunctionRef": "p_user_id",
                    "RestAPI": "userId",
                    "GraphQL": "userId",
                    "custom": "userId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            topic: {
                fieldNameVariations: {
                    "frontend": "topic",
                    "backend": "topic",
                    "database": "topic",
                    "pretty": "Topic",
                    "component": "Topic",
                    "kebab": "topic",
                    "sqlFunctionRef": "p_topic",
                    "RestAPI": "topic",
                    "GraphQL": "topic",
                    "custom": "topic"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            lesson: {
                fieldNameVariations: {
                    "frontend": "lesson",
                    "backend": "lesson",
                    "database": "lesson",
                    "pretty": "Lesson",
                    "component": "Lesson",
                    "kebab": "lesson",
                    "sqlFunctionRef": "p_lesson",
                    "RestAPI": "lesson",
                    "GraphQL": "lesson",
                    "custom": "lesson"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            difficulty: {
                fieldNameVariations: {
                    "frontend": "difficulty",
                    "backend": "difficulty",
                    "database": "difficulty",
                    "pretty": "Difficulty",
                    "component": "Difficulty",
                    "kebab": "difficulty",
                    "sqlFunctionRef": "p_difficulty",
                    "RestAPI": "difficulty",
                    "GraphQL": "difficulty",
                    "custom": "difficulty"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            front: {
                fieldNameVariations: {
                    "frontend": "front",
                    "backend": "front",
                    "database": "front",
                    "pretty": "Front",
                    "component": "Front",
                    "kebab": "front",
                    "sqlFunctionRef": "p_front",
                    "RestAPI": "front",
                    "GraphQL": "front",
                    "custom": "front"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            back: {
                fieldNameVariations: {
                    "frontend": "back",
                    "backend": "back",
                    "database": "back",
                    "pretty": "Back",
                    "component": "Back",
                    "kebab": "back",
                    "sqlFunctionRef": "p_back",
                    "RestAPI": "back",
                    "GraphQL": "back",
                    "custom": "back"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            example: {
                fieldNameVariations: {
                    "frontend": "example",
                    "backend": "example",
                    "database": "example",
                    "pretty": "Example",
                    "component": "Example",
                    "kebab": "example",
                    "sqlFunctionRef": "p_example",
                    "RestAPI": "example",
                    "GraphQL": "example",
                    "custom": "example"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            detailedExplanation: {
                fieldNameVariations: {
                    "frontend": "detailedExplanation",
                    "backend": "detailed_explanation",
                    "database": "detailed_explanation",
                    "pretty": "Detailed Explanation",
                    "component": "DetailedExplanation",
                    "kebab": "detailed-explanation",
                    "sqlFunctionRef": "p_detailed_explanation",
                    "RestAPI": "detailedExplanation",
                    "GraphQL": "detailedExplanation",
                    "custom": "detailedExplanation"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            audioExplanation: {
                fieldNameVariations: {
                    "frontend": "audioExplanation",
                    "backend": "audio_explanation",
                    "database": "audio_explanation",
                    "pretty": "Audio Explanation",
                    "component": "AudioExplanation",
                    "kebab": "audio-explanation",
                    "sqlFunctionRef": "p_audio_explanation",
                    "RestAPI": "audioExplanation",
                    "GraphQL": "audioExplanation",
                    "custom": "audioExplanation"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            personalNotes: {
                fieldNameVariations: {
                    "frontend": "personalNotes",
                    "backend": "personal_notes",
                    "database": "personal_notes",
                    "pretty": "Personal Notes",
                    "component": "PersonalNotes",
                    "kebab": "personal-notes",
                    "sqlFunctionRef": "p_personal_notes",
                    "RestAPI": "personalNotes",
                    "GraphQL": "personalNotes",
                    "custom": "personalNotes"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_data',
            },
            isDeleted: {
                fieldNameVariations: {
                    "frontend": "isDeleted",
                    "backend": "is_deleted",
                    "database": "is_deleted",
                    "pretty": "Is Deleted",
                    "component": "IsDeleted",
                    "kebab": "is-deleted",
                    "sqlFunctionRef": "p_is_deleted",
                    "RestAPI": "isDeleted",
                    "GraphQL": "isDeleted",
                    "custom": "isDeleted"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'flashcard_data',
            },
            public: {
                fieldNameVariations: {
                    "frontend": "public",
                    "backend": "public",
                    "database": "public",
                    "pretty": "Public",
                    "component": "Public",
                    "kebab": "public",
                    "sqlFunctionRef": "p_public",
                    "RestAPI": "public",
                    "GraphQL": "public",
                    "custom": "public"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'flashcard_data',
            },
            sharedWith: {
                fieldNameVariations: {
                    "frontend": "sharedWith",
                    "backend": "shared_with",
                    "database": "shared_with",
                    "pretty": "Shared With",
                    "component": "SharedWith",
                    "kebab": "shared-with",
                    "sqlFunctionRef": "p_shared_with",
                    "RestAPI": "sharedWith",
                    "GraphQL": "sharedWith",
                    "custom": "sharedWith"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'multi-select:uuid' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string[]>,
                databaseTable: 'flashcard_data',
            },
            createdAt: {
                fieldNameVariations: {
                    "frontend": "createdAt",
                    "backend": "created_at",
                    "database": "created_at",
                    "pretty": "Created At",
                    "component": "CreatedAt",
                    "kebab": "created-at",
                    "sqlFunctionRef": "p_created_at",
                    "RestAPI": "createdAt",
                    "GraphQL": "createdAt",
                    "custom": "createdAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_data',
            },
            updatedAt: {
                fieldNameVariations: {
                    "frontend": "updatedAt",
                    "backend": "updated_at",
                    "database": "updated_at",
                    "pretty": "Updated At",
                    "component": "UpdatedAt",
                    "kebab": "updated-at",
                    "sqlFunctionRef": "p_updated_at",
                    "RestAPI": "updatedAt",
                    "GraphQL": "updatedAt",
                    "custom": "updatedAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_data',
            },
            flashcardHistoryInverse: {
                fieldNameVariations: {
                    "frontend": "flashcardHistoryInverse",
                    "backend": "flashcard_history_Inverse",
                    "database": "ifk_flashcard_history",
                    "sqlFunctionRef": "p_ifk_flashcard_history",
                    "pretty": "Flashcard History Inverse",
                    "component": "FlashcardHistoryInverse",
                    "kebab": "flashcard-historyInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
                databaseTable: 'flashcard_history',
            },
            flashcardSetRelationsInverse: {
                fieldNameVariations: {
                    "frontend": "flashcardSetRelationsInverse",
                    "backend": "flashcard_set_relations_Inverse",
                    "database": "ifk_flashcard_set_relations",
                    "sqlFunctionRef": "p_ifk_flashcard_set_relations",
                    "pretty": "Flashcard Set Relations Inverse",
                    "component": "FlashcardSetRelationsInverse",
                    "kebab": "flashcard-set-relationsInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
                databaseTable: 'flashcard_set_relations',
            },
            flashcardImagesInverse: {
                fieldNameVariations: {
                    "frontend": "flashcardImagesInverse",
                    "backend": "flashcard_images_Inverse",
                    "database": "ifk_flashcard_images",
                    "sqlFunctionRef": "p_ifk_flashcard_images",
                    "pretty": "Flashcard Images Inverse",
                    "component": "FlashcardImagesInverse",
                    "kebab": "flashcard-imagesInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardData'][]>,
                databaseTable: 'flashcard_images',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'flashcard_history',
                relatedColumn: 'flashcard_id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'flashcard_set_relations',
                relatedColumn: 'flashcard_id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'flashcard_images',
                relatedColumn: 'flashcard_id',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'flashcard_id',
                relatedTable: 'flashcard_sets',
                relatedColumn: 'set_id',
                junctionTable: 'flashcard_set_relations'
            }
        ],
    },
    flashcardHistory: {
        entityNameVariations: {
            "frontend": "flashcardHistory",
            "backend": "flashcard_history",
            "database": "flashcard_history",
            "pretty": "Flashcard History",
            "component": "FlashcardHistory",
            "kebab": "flashcard-history",
            "sqlFunctionRef": "p_flashcard_history",
            "RestAPI": "flashcardHistory",
            "GraphQL": "flashcardHistory",
            "custom": "flashcardHistory"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_history',
            },
            flashcardId: {
                fieldNameVariations: {
                    "frontend": "flashcardId",
                    "backend": "flashcard_id",
                    "database": "flashcard_id",
                    "pretty": "Flashcard Id",
                    "component": "FlashcardId",
                    "kebab": "flashcard-id",
                    "sqlFunctionRef": "p_flashcard_id",
                    "RestAPI": "flashcardId",
                    "GraphQL": "flashcardId",
                    "custom": "flashcardId"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_history',
            },
            userId: {
                fieldNameVariations: {
                    "frontend": "userId",
                    "backend": "user_id",
                    "database": "user_id",
                    "pretty": "User Id",
                    "component": "UserId",
                    "kebab": "user-id",
                    "sqlFunctionRef": "p_user_id",
                    "RestAPI": "userId",
                    "GraphQL": "userId",
                    "custom": "userId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_history',
            },
            reviewCount: {
                fieldNameVariations: {
                    "frontend": "reviewCount",
                    "backend": "review_count",
                    "database": "review_count",
                    "pretty": "Review Count",
                    "component": "ReviewCount",
                    "kebab": "review-count",
                    "sqlFunctionRef": "p_review_count",
                    "RestAPI": "reviewCount",
                    "GraphQL": "reviewCount",
                    "custom": "reviewCount"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "0" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'flashcard_history',
            },
            correctCount: {
                fieldNameVariations: {
                    "frontend": "correctCount",
                    "backend": "correct_count",
                    "database": "correct_count",
                    "pretty": "Correct Count",
                    "component": "CorrectCount",
                    "kebab": "correct-count",
                    "sqlFunctionRef": "p_correct_count",
                    "RestAPI": "correctCount",
                    "GraphQL": "correctCount",
                    "custom": "correctCount"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "0" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'flashcard_history',
            },
            incorrectCount: {
                fieldNameVariations: {
                    "frontend": "incorrectCount",
                    "backend": "incorrect_count",
                    "database": "incorrect_count",
                    "pretty": "Incorrect Count",
                    "component": "IncorrectCount",
                    "kebab": "incorrect-count",
                    "sqlFunctionRef": "p_incorrect_count",
                    "RestAPI": "incorrectCount",
                    "GraphQL": "incorrectCount",
                    "custom": "incorrectCount"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "0" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'flashcard_history',
            },
            createdAt: {
                fieldNameVariations: {
                    "frontend": "createdAt",
                    "backend": "created_at",
                    "database": "created_at",
                    "pretty": "Created At",
                    "component": "CreatedAt",
                    "kebab": "created-at",
                    "sqlFunctionRef": "p_created_at",
                    "RestAPI": "createdAt",
                    "GraphQL": "createdAt",
                    "custom": "createdAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_history',
            },
            updatedAt: {
                fieldNameVariations: {
                    "frontend": "updatedAt",
                    "backend": "updated_at",
                    "database": "updated_at",
                    "pretty": "Updated At",
                    "component": "UpdatedAt",
                    "kebab": "updated-at",
                    "sqlFunctionRef": "p_updated_at",
                    "RestAPI": "updatedAt",
                    "GraphQL": "updatedAt",
                    "custom": "updatedAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_history',
            },
            flashcardDataReference: {
                fieldNameVariations: {
                    "frontend": "flashcardDataReference",
                    "backend": "flashcard_data_reference",
                    "database": "ref_flashcard_data",
                    "sqlFunctionRef": "p_ref_flashcard_data",
                    "pretty": "Flashcard Data Reference",
                    "component": "FlashcardDataReference",
                    "kebab": "flashcard-dataReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardHistory'][]>,
                databaseTable: 'flashcard_data',
            },
        },
        defaultFetchStrategy: 'fk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'flashcard_id',
                relatedTable: 'flashcard_data',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    flashcardImages: {
        entityNameVariations: {
            "frontend": "flashcardImages",
            "backend": "flashcard_images",
            "database": "flashcard_images",
            "pretty": "Flashcard Images",
            "component": "FlashcardImages",
            "kebab": "flashcard-images",
            "sqlFunctionRef": "p_flashcard_images",
            "RestAPI": "flashcardImages",
            "GraphQL": "flashcardImages",
            "custom": "flashcardImages"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_images',
            },
            flashcardId: {
                fieldNameVariations: {
                    "frontend": "flashcardId",
                    "backend": "flashcard_id",
                    "database": "flashcard_id",
                    "pretty": "Flashcard Id",
                    "component": "FlashcardId",
                    "kebab": "flashcard-id",
                    "sqlFunctionRef": "p_flashcard_id",
                    "RestAPI": "flashcardId",
                    "GraphQL": "flashcardId",
                    "custom": "flashcardId"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_images',
            },
            filePath: {
                fieldNameVariations: {
                    "frontend": "filePath",
                    "backend": "file_path",
                    "database": "file_path",
                    "pretty": "File Path",
                    "component": "FilePath",
                    "kebab": "file-path",
                    "sqlFunctionRef": "p_file_path",
                    "RestAPI": "filePath",
                    "GraphQL": "filePath",
                    "custom": "filePath"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_images',
            },
            fileName: {
                fieldNameVariations: {
                    "frontend": "fileName",
                    "backend": "file_name",
                    "database": "file_name",
                    "pretty": "File Name",
                    "component": "FileName",
                    "kebab": "file-name",
                    "sqlFunctionRef": "p_file_name",
                    "RestAPI": "fileName",
                    "GraphQL": "fileName",
                    "custom": "fileName"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_images',
            },
            mimeType: {
                fieldNameVariations: {
                    "frontend": "mimeType",
                    "backend": "mime_type",
                    "database": "mime_type",
                    "pretty": "Mime Type",
                    "component": "MimeType",
                    "kebab": "mime-type",
                    "sqlFunctionRef": "p_mime_type",
                    "RestAPI": "mimeType",
                    "GraphQL": "mimeType",
                    "custom": "mimeType"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_images',
            },
            size: {
                fieldNameVariations: {
                    "frontend": "size",
                    "backend": "size",
                    "database": "size",
                    "pretty": "Size",
                    "component": "Size",
                    "kebab": "size",
                    "sqlFunctionRef": "p_size",
                    "RestAPI": "size",
                    "GraphQL": "size",
                    "custom": "size"
                } as const,
                dataType: 'number' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'flashcard_images',
            },
            createdAt: {
                fieldNameVariations: {
                    "frontend": "createdAt",
                    "backend": "created_at",
                    "database": "created_at",
                    "pretty": "Created At",
                    "component": "CreatedAt",
                    "kebab": "created-at",
                    "sqlFunctionRef": "p_created_at",
                    "RestAPI": "createdAt",
                    "GraphQL": "createdAt",
                    "custom": "createdAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_images',
            },
            flashcardDataReference: {
                fieldNameVariations: {
                    "frontend": "flashcardDataReference",
                    "backend": "flashcard_data_reference",
                    "database": "ref_flashcard_data",
                    "sqlFunctionRef": "p_ref_flashcard_data",
                    "pretty": "Flashcard Data Reference",
                    "component": "FlashcardDataReference",
                    "kebab": "flashcard-dataReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardImages'][]>,
                databaseTable: 'flashcard_data',
            },
        },
        defaultFetchStrategy: 'fk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'flashcard_id',
                relatedTable: 'flashcard_data',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    flashcardSetRelations: {
        entityNameVariations: {
            "frontend": "flashcardSetRelations",
            "backend": "flashcard_set_relations",
            "database": "flashcard_set_relations",
            "pretty": "Flashcard Set Relations",
            "component": "FlashcardSetRelations",
            "kebab": "flashcard-set-relations",
            "sqlFunctionRef": "p_flashcard_set_relations",
            "RestAPI": "flashcardSetRelations",
            "GraphQL": "flashcardSetRelations",
            "custom": "flashcardSetRelations"
        },
        schemaType: 'table' as const,
        entityFields: {
            flashcardId: {
                fieldNameVariations: {
                    "frontend": "flashcardId",
                    "backend": "flashcard_id",
                    "database": "flashcard_id",
                    "pretty": "Flashcard Id",
                    "component": "FlashcardId",
                    "kebab": "flashcard-id",
                    "sqlFunctionRef": "p_flashcard_id",
                    "RestAPI": "flashcardId",
                    "GraphQL": "flashcardId",
                    "custom": "flashcardId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_set_relations',
            },
            setId: {
                fieldNameVariations: {
                    "frontend": "setId",
                    "backend": "set_id",
                    "database": "set_id",
                    "pretty": "Set Id",
                    "component": "SetId",
                    "kebab": "set-id",
                    "sqlFunctionRef": "p_set_id",
                    "RestAPI": "setId",
                    "GraphQL": "setId",
                    "custom": "setId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_set_relations',
            },
            order: {
                fieldNameVariations: {
                    "frontend": "order",
                    "backend": "order",
                    "database": "order",
                    "pretty": "Order",
                    "component": "Order",
                    "kebab": "order",
                    "sqlFunctionRef": "p_order",
                    "RestAPI": "order",
                    "GraphQL": "order",
                    "custom": "order"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:int' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'flashcard_set_relations',
            },
            flashcardDataReference: {
                fieldNameVariations: {
                    "frontend": "flashcardDataReference",
                    "backend": "flashcard_data_reference",
                    "database": "ref_flashcard_data",
                    "sqlFunctionRef": "p_ref_flashcard_data",
                    "pretty": "Flashcard Data Reference",
                    "component": "FlashcardDataReference",
                    "kebab": "flashcard-dataReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSetRelations'][]>,
                databaseTable: 'flashcard_data',
            },
            flashcardSetsReference: {
                fieldNameVariations: {
                    "frontend": "flashcardSetsReference",
                    "backend": "flashcard_sets_reference",
                    "database": "ref_flashcard_sets",
                    "sqlFunctionRef": "p_ref_flashcard_sets",
                    "pretty": "Flashcard Sets Reference",
                    "component": "FlashcardSetsReference",
                    "kebab": "flashcard-setsReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSetRelations'][]>,
                databaseTable: 'flashcard_sets',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'flashcard_id',
                relatedTable: 'flashcard_data',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'set_id',
                relatedTable: 'flashcard_sets',
                relatedColumn: 'set_id',
                junctionTable: null
            }
        ],
    },
    flashcardSets: {
        entityNameVariations: {
            "frontend": "flashcardSets",
            "backend": "flashcard_sets",
            "database": "flashcard_sets",
            "pretty": "Flashcard Sets",
            "component": "FlashcardSets",
            "kebab": "flashcard-sets",
            "sqlFunctionRef": "p_flashcard_sets",
            "RestAPI": "flashcardSets",
            "GraphQL": "flashcardSets",
            "custom": "flashcardSets"
        },
        schemaType: 'table' as const,
        entityFields: {
            setId: {
                fieldNameVariations: {
                    "frontend": "setId",
                    "backend": "set_id",
                    "database": "set_id",
                    "pretty": "Set Id",
                    "component": "SetId",
                    "kebab": "set-id",
                    "sqlFunctionRef": "p_set_id",
                    "RestAPI": "setId",
                    "GraphQL": "setId",
                    "custom": "setId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            userId: {
                fieldNameVariations: {
                    "frontend": "userId",
                    "backend": "user_id",
                    "database": "user_id",
                    "pretty": "User Id",
                    "component": "UserId",
                    "kebab": "user-id",
                    "sqlFunctionRef": "p_user_id",
                    "RestAPI": "userId",
                    "GraphQL": "userId",
                    "custom": "userId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            createdAt: {
                fieldNameVariations: {
                    "frontend": "createdAt",
                    "backend": "created_at",
                    "database": "created_at",
                    "pretty": "Created At",
                    "component": "CreatedAt",
                    "kebab": "created-at",
                    "sqlFunctionRef": "p_created_at",
                    "RestAPI": "createdAt",
                    "GraphQL": "createdAt",
                    "custom": "createdAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_sets',
            },
            updatedAt: {
                fieldNameVariations: {
                    "frontend": "updatedAt",
                    "backend": "updated_at",
                    "database": "updated_at",
                    "pretty": "Updated At",
                    "component": "UpdatedAt",
                    "kebab": "updated-at",
                    "sqlFunctionRef": "p_updated_at",
                    "RestAPI": "updatedAt",
                    "GraphQL": "updatedAt",
                    "custom": "updatedAt"
                } as const,
                dataType: 'date' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'flashcard_sets',
            },
            sharedWith: {
                fieldNameVariations: {
                    "frontend": "sharedWith",
                    "backend": "shared_with",
                    "database": "shared_with",
                    "pretty": "Shared With",
                    "component": "SharedWith",
                    "kebab": "shared-with",
                    "sqlFunctionRef": "p_shared_with",
                    "RestAPI": "sharedWith",
                    "GraphQL": "sharedWith",
                    "custom": "sharedWith"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'multi-select:uuid' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string[]>,
                databaseTable: 'flashcard_sets',
            },
            public: {
                fieldNameVariations: {
                    "frontend": "public",
                    "backend": "public",
                    "database": "public",
                    "pretty": "Public",
                    "component": "Public",
                    "kebab": "public",
                    "sqlFunctionRef": "p_public",
                    "RestAPI": "public",
                    "GraphQL": "public",
                    "custom": "public"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "false" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'flashcard_sets',
            },
            topic: {
                fieldNameVariations: {
                    "frontend": "topic",
                    "backend": "topic",
                    "database": "topic",
                    "pretty": "Topic",
                    "component": "Topic",
                    "kebab": "topic",
                    "sqlFunctionRef": "p_topic",
                    "RestAPI": "topic",
                    "GraphQL": "topic",
                    "custom": "topic"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            lesson: {
                fieldNameVariations: {
                    "frontend": "lesson",
                    "backend": "lesson",
                    "database": "lesson",
                    "pretty": "Lesson",
                    "component": "Lesson",
                    "kebab": "lesson",
                    "sqlFunctionRef": "p_lesson",
                    "RestAPI": "lesson",
                    "GraphQL": "lesson",
                    "custom": "lesson"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            difficulty: {
                fieldNameVariations: {
                    "frontend": "difficulty",
                    "backend": "difficulty",
                    "database": "difficulty",
                    "pretty": "Difficulty",
                    "component": "Difficulty",
                    "kebab": "difficulty",
                    "sqlFunctionRef": "p_difficulty",
                    "RestAPI": "difficulty",
                    "GraphQL": "difficulty",
                    "custom": "difficulty"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            audioOverview: {
                fieldNameVariations: {
                    "frontend": "audioOverview",
                    "backend": "audio_overview",
                    "database": "audio_overview",
                    "pretty": "Audio Overview",
                    "component": "AudioOverview",
                    "kebab": "audio-overview",
                    "sqlFunctionRef": "p_audio_overview",
                    "RestAPI": "audioOverview",
                    "GraphQL": "audioOverview",
                    "custom": "audioOverview"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'flashcard_sets',
            },
            flashcardSetRelationsInverse: {
                fieldNameVariations: {
                    "frontend": "flashcardSetRelationsInverse",
                    "backend": "flashcard_set_relations_Inverse",
                    "database": "ifk_flashcard_set_relations",
                    "sqlFunctionRef": "p_ifk_flashcard_set_relations",
                    "pretty": "Flashcard Set Relations Inverse",
                    "component": "FlashcardSetRelationsInverse",
                    "kebab": "flashcard-set-relationsInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['flashcardSets'][]>,
                databaseTable: 'flashcard_set_relations',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'set_id',
                relatedTable: 'flashcard_set_relations',
                relatedColumn: 'set_id',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'set_id',
                relatedTable: 'flashcard_data',
                relatedColumn: 'flashcard_id',
                junctionTable: 'flashcard_set_relations'
            }
        ],
    },
    processor: {
        entityNameVariations: {
            "frontend": "processor",
            "backend": "processor",
            "database": "processor",
            "pretty": "Processor",
            "component": "Processor",
            "kebab": "processor",
            "sqlFunctionRef": "p_processor",
            "RestAPI": "processor",
            "GraphQL": "processor",
            "custom": "processor"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'processor',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'processor',
            },
            dependsDefault: {
                fieldNameVariations: {
                    "frontend": "dependsDefault",
                    "backend": "depends_default",
                    "database": "depends_default",
                    "pretty": "Depends Default",
                    "component": "DependsDefault",
                    "kebab": "depends-default",
                    "sqlFunctionRef": "p_depends_default",
                    "RestAPI": "dependsDefault",
                    "GraphQL": "dependsDefault",
                    "custom": "dependsDefault"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'processor',
            },
            defaultExtractors: {
                fieldNameVariations: {
                    "frontend": "defaultExtractors",
                    "backend": "default_extractors",
                    "database": "default_extractors",
                    "pretty": "Default Extractors",
                    "component": "DefaultExtractors",
                    "kebab": "default-extractors",
                    "sqlFunctionRef": "p_default_extractors",
                    "RestAPI": "defaultExtractors",
                    "GraphQL": "defaultExtractors",
                    "custom": "defaultExtractors"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'processor',
            },
            params: {
                fieldNameVariations: {
                    "frontend": "params",
                    "backend": "params",
                    "database": "params",
                    "pretty": "Params",
                    "component": "Params",
                    "kebab": "params",
                    "sqlFunctionRef": "p_params",
                    "RestAPI": "params",
                    "GraphQL": "params",
                    "custom": "params"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'processor',
            },
            processorReference: {
                fieldNameVariations: {
                    "frontend": "processorReference",
                    "backend": "processor_reference",
                    "database": "ref_processor",
                    "sqlFunctionRef": "p_ref_processor",
                    "pretty": "Processor Reference",
                    "component": "ProcessorReference",
                    "kebab": "processorReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['processor'][]>,
                databaseTable: 'processor',
            },
            recipeProcessorInverse: {
                fieldNameVariations: {
                    "frontend": "recipeProcessorInverse",
                    "backend": "recipe_processor_Inverse",
                    "database": "ifk_recipe_processor",
                    "sqlFunctionRef": "p_ifk_recipe_processor",
                    "pretty": "Recipe Processor Inverse",
                    "component": "RecipeProcessorInverse",
                    "kebab": "recipe-processorInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['processor'][]>,
                databaseTable: 'recipe_processor',
            },
        },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'depends_default',
                relatedTable: 'self_reference',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_processor',
                relatedColumn: 'processor',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'processor',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_processor'
            }
        ],
    },
    recipe: {
        entityNameVariations: {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe',
            },
            tags: {
                fieldNameVariations: {
                    "frontend": "tags",
                    "backend": "tags",
                    "database": "tags",
                    "pretty": "Tags",
                    "component": "Tags",
                    "kebab": "tags",
                    "sqlFunctionRef": "p_tags",
                    "RestAPI": "tags",
                    "GraphQL": "tags",
                    "custom": "tags"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe',
            },
            sampleOutput: {
                fieldNameVariations: {
                    "frontend": "sampleOutput",
                    "backend": "sample_output",
                    "database": "sample_output",
                    "pretty": "Sample Output",
                    "component": "SampleOutput",
                    "kebab": "sample-output",
                    "sqlFunctionRef": "p_sample_output",
                    "RestAPI": "sampleOutput",
                    "GraphQL": "sampleOutput",
                    "custom": "sampleOutput"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe',
            },
            isPublic: {
                fieldNameVariations: {
                    "frontend": "isPublic",
                    "backend": "is_public",
                    "database": "is_public",
                    "pretty": "Is Public",
                    "component": "IsPublic",
                    "kebab": "is-public",
                    "sqlFunctionRef": "p_is_public",
                    "RestAPI": "isPublic",
                    "GraphQL": "isPublic",
                    "custom": "isPublic"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'recipe',
            },
            status: {
                fieldNameVariations: {
                    "frontend": "status",
                    "backend": "status",
                    "database": "status",
                    "pretty": "Status",
                    "component": "Status",
                    "kebab": "status",
                    "sqlFunctionRef": "p_status",
                    "RestAPI": "status",
                    "GraphQL": "status",
                    "custom": "status"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "draft" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"active_testing" | "archived" | "draft" | "in_review" | "live" | "other" | undefined>,
                databaseTable: 'recipe',
            },
            version: {
                fieldNameVariations: {
                    "frontend": "version",
                    "backend": "version",
                    "database": "version",
                    "pretty": "Version",
                    "component": "Version",
                    "kebab": "version",
                    "sqlFunctionRef": "p_version",
                    "RestAPI": "version",
                    "GraphQL": "version",
                    "custom": "version"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "1" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'recipe',
            },
            messages: {
                fieldNameVariations: {
                    "frontend": "messages",
                    "backend": "messages",
                    "database": "messages",
                    "pretty": "Messages",
                    "component": "Messages",
                    "kebab": "messages",
                    "sqlFunctionRef": "p_messages",
                    "RestAPI": "messages",
                    "GraphQL": "messages",
                    "custom": "messages"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-array:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>[]>,
                databaseTable: 'recipe',
            },
            postResultOptions: {
                fieldNameVariations: {
                    "frontend": "postResultOptions",
                    "backend": "post_result_options",
                    "database": "post_result_options",
                    "pretty": "Post Result Options",
                    "component": "PostResultOptions",
                    "kebab": "post-result-options",
                    "sqlFunctionRef": "p_post_result_options",
                    "RestAPI": "postResultOptions",
                    "GraphQL": "postResultOptions",
                    "custom": "postResultOptions"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe',
            },
            recipeBrokerInverse: {
                fieldNameVariations: {
                    "frontend": "recipeBrokerInverse",
                    "backend": "recipe_broker_Inverse",
                    "database": "ifk_recipe_broker",
                    "sqlFunctionRef": "p_ifk_recipe_broker",
                    "pretty": "Recipe Broker Inverse",
                    "component": "RecipeBrokerInverse",
                    "kebab": "recipe-brokerInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_broker',
            },
            recipeProcessorInverse: {
                fieldNameVariations: {
                    "frontend": "recipeProcessorInverse",
                    "backend": "recipe_processor_Inverse",
                    "database": "ifk_recipe_processor",
                    "sqlFunctionRef": "p_ifk_recipe_processor",
                    "pretty": "Recipe Processor Inverse",
                    "component": "RecipeProcessorInverse",
                    "kebab": "recipe-processorInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_processor',
            },
            recipeModelInverse: {
                fieldNameVariations: {
                    "frontend": "recipeModelInverse",
                    "backend": "recipe_model_Inverse",
                    "database": "ifk_recipe_model",
                    "sqlFunctionRef": "p_ifk_recipe_model",
                    "pretty": "Recipe Model Inverse",
                    "component": "RecipeModelInverse",
                    "kebab": "recipe-modelInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_model',
            },
            recipeDisplayInverse: {
                fieldNameVariations: {
                    "frontend": "recipeDisplayInverse",
                    "backend": "recipe_display_Inverse",
                    "database": "ifk_recipe_display",
                    "sqlFunctionRef": "p_ifk_recipe_display",
                    "pretty": "Recipe Display Inverse",
                    "component": "RecipeDisplayInverse",
                    "kebab": "recipe-displayInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_display',
            },
            recipeFunctionInverse: {
                fieldNameVariations: {
                    "frontend": "recipeFunctionInverse",
                    "backend": "recipe_function_Inverse",
                    "database": "ifk_recipe_function",
                    "sqlFunctionRef": "p_ifk_recipe_function",
                    "pretty": "Recipe Function Inverse",
                    "component": "RecipeFunctionInverse",
                    "kebab": "recipe-functionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_function',
            },
            recipeToolInverse: {
                fieldNameVariations: {
                    "frontend": "recipeToolInverse",
                    "backend": "recipe_tool_Inverse",
                    "database": "ifk_recipe_tool",
                    "sqlFunctionRef": "p_ifk_recipe_tool",
                    "pretty": "Recipe Tool Inverse",
                    "component": "RecipeToolInverse",
                    "kebab": "recipe-toolInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipe'][]>,
                databaseTable: 'recipe_tool',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_broker',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_processor',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_model',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_display',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_function',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_tool',
                relatedColumn: 'recipe',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'broker',
                relatedColumn: 'broker',
                junctionTable: 'recipe_broker'
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'display_option',
                relatedColumn: 'display',
                junctionTable: 'recipe_display'
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'system_function',
                relatedColumn: 'function',
                junctionTable: 'recipe_function'
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'ai_model',
                relatedColumn: 'ai_model',
                junctionTable: 'recipe_model'
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'processor',
                relatedColumn: 'processor',
                junctionTable: 'recipe_processor'
            },
            {
                relationshipType: 'manyToMany',
                column: 'recipe',
                relatedTable: 'tool',
                relatedColumn: 'tool',
                junctionTable: 'recipe_tool'
            }
        ],
    },
    recipeBroker: {
        entityNameVariations: {
            "frontend": "recipeBroker",
            "backend": "recipe_broker",
            "database": "recipe_broker",
            "pretty": "Recipe Broker",
            "component": "RecipeBroker",
            "kebab": "recipe-broker",
            "sqlFunctionRef": "p_recipe_broker",
            "RestAPI": "recipeBroker",
            "GraphQL": "recipeBroker",
            "custom": "recipeBroker"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_broker',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_broker',
            },
            broker: {
                fieldNameVariations: {
                    "frontend": "broker",
                    "backend": "broker",
                    "database": "broker",
                    "pretty": "Broker",
                    "component": "Broker",
                    "kebab": "broker",
                    "sqlFunctionRef": "p_broker",
                    "RestAPI": "broker",
                    "GraphQL": "broker",
                    "custom": "broker"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_broker',
            },
            brokerRole: {
                fieldNameVariations: {
                    "frontend": "brokerRole",
                    "backend": "broker_role",
                    "database": "broker_role",
                    "pretty": "Broker Role",
                    "component": "BrokerRole",
                    "kebab": "broker-role",
                    "sqlFunctionRef": "p_broker_role",
                    "RestAPI": "brokerRole",
                    "GraphQL": "brokerRole",
                    "custom": "brokerRole"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"input_broker" | "output_broker" | undefined>,
                databaseTable: 'recipe_broker',
            },
            required: {
                fieldNameVariations: {
                    "frontend": "required",
                    "backend": "required",
                    "database": "required",
                    "pretty": "Required",
                    "component": "Required",
                    "kebab": "required",
                    "sqlFunctionRef": "p_required",
                    "RestAPI": "required",
                    "GraphQL": "required",
                    "custom": "required"
                } as const,
                dataType: 'boolean' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "true" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'switch' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<boolean>,
                databaseTable: 'recipe_broker',
            },
            brokerReference: {
                fieldNameVariations: {
                    "frontend": "brokerReference",
                    "backend": "broker_reference",
                    "database": "ref_broker",
                    "sqlFunctionRef": "p_ref_broker",
                    "pretty": "Broker Reference",
                    "component": "BrokerReference",
                    "kebab": "brokerReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeBroker'][]>,
                databaseTable: 'broker',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeBroker'][]>,
                databaseTable: 'recipe',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'broker',
                relatedTable: 'broker',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    recipeDisplay: {
        entityNameVariations: {
            "frontend": "recipeDisplay",
            "backend": "recipe_display",
            "database": "recipe_display",
            "pretty": "Recipe Display",
            "component": "RecipeDisplay",
            "kebab": "recipe-display",
            "sqlFunctionRef": "p_recipe_display",
            "RestAPI": "recipeDisplay",
            "GraphQL": "recipeDisplay",
            "custom": "recipeDisplay"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_display',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_display',
            },
            display: {
                fieldNameVariations: {
                    "frontend": "display",
                    "backend": "display",
                    "database": "display",
                    "pretty": "Display",
                    "component": "Display",
                    "kebab": "display",
                    "sqlFunctionRef": "p_display",
                    "RestAPI": "display",
                    "GraphQL": "display",
                    "custom": "display"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_display',
            },
            priority: {
                fieldNameVariations: {
                    "frontend": "priority",
                    "backend": "priority",
                    "database": "priority",
                    "pretty": "Priority",
                    "component": "Priority",
                    "kebab": "priority",
                    "sqlFunctionRef": "p_priority",
                    "RestAPI": "priority",
                    "GraphQL": "priority",
                    "custom": "priority"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "1" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'recipe_display',
            },
            displaySettings: {
                fieldNameVariations: {
                    "frontend": "displaySettings",
                    "backend": "display_settings",
                    "database": "display_settings",
                    "pretty": "Display Settings",
                    "component": "DisplaySettings",
                    "kebab": "display-settings",
                    "sqlFunctionRef": "p_display_settings",
                    "RestAPI": "displaySettings",
                    "GraphQL": "displaySettings",
                    "custom": "displaySettings"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe_display',
            },
            displayOptionReference: {
                fieldNameVariations: {
                    "frontend": "displayOptionReference",
                    "backend": "display_option_reference",
                    "database": "ref_display_option",
                    "sqlFunctionRef": "p_ref_display_option",
                    "pretty": "Display Option Reference",
                    "component": "DisplayOptionReference",
                    "kebab": "display-optionReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeDisplay'][]>,
                databaseTable: 'display_option',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeDisplay'][]>,
                databaseTable: 'recipe',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'display',
                relatedTable: 'display_option',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    recipeFunction: {
        entityNameVariations: {
            "frontend": "recipeFunction",
            "backend": "recipe_function",
            "database": "recipe_function",
            "pretty": "Recipe Function",
            "component": "RecipeFunction",
            "kebab": "recipe-function",
            "sqlFunctionRef": "p_recipe_function",
            "RestAPI": "recipeFunction",
            "GraphQL": "recipeFunction",
            "custom": "recipeFunction"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_function',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_function',
            },
            function: {
                fieldNameVariations: {
                    "frontend": "function",
                    "backend": "function",
                    "database": "function",
                    "pretty": "Function",
                    "component": "Function",
                    "kebab": "function",
                    "sqlFunctionRef": "p_function",
                    "RestAPI": "function",
                    "GraphQL": "function",
                    "custom": "function"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_function',
            },
            role: {
                fieldNameVariations: {
                    "frontend": "role",
                    "backend": "role",
                    "database": "role",
                    "pretty": "Role",
                    "component": "Role",
                    "kebab": "role",
                    "sqlFunctionRef": "p_role",
                    "RestAPI": "role",
                    "GraphQL": "role",
                    "custom": "role"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"comparison" | "decision" | "other" | "post_processing" | "pre-Processing" | "rating" | "save_data" | "validation" | undefined>,
                databaseTable: 'recipe_function',
            },
            params: {
                fieldNameVariations: {
                    "frontend": "params",
                    "backend": "params",
                    "database": "params",
                    "pretty": "Params",
                    "component": "Params",
                    "kebab": "params",
                    "sqlFunctionRef": "p_params",
                    "RestAPI": "params",
                    "GraphQL": "params",
                    "custom": "params"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe_function',
            },
            systemFunctionReference: {
                fieldNameVariations: {
                    "frontend": "systemFunctionReference",
                    "backend": "system_function_reference",
                    "database": "ref_system_function",
                    "sqlFunctionRef": "p_ref_system_function",
                    "pretty": "System Function Reference",
                    "component": "SystemFunctionReference",
                    "kebab": "system-functionReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeFunction'][]>,
                databaseTable: 'system_function',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeFunction'][]>,
                databaseTable: 'recipe',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'function',
                relatedTable: 'system_function',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    recipeModel: {
        entityNameVariations: {
            "frontend": "recipeModel",
            "backend": "recipe_model",
            "database": "recipe_model",
            "pretty": "Recipe Model",
            "component": "RecipeModel",
            "kebab": "recipe-model",
            "sqlFunctionRef": "p_recipe_model",
            "RestAPI": "recipeModel",
            "GraphQL": "recipeModel",
            "custom": "recipeModel"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_model',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_model',
            },
            aiModel: {
                fieldNameVariations: {
                    "frontend": "aiModel",
                    "backend": "ai_model",
                    "database": "ai_model",
                    "pretty": "Ai Model",
                    "component": "AiModel",
                    "kebab": "ai-model",
                    "sqlFunctionRef": "p_ai_model",
                    "RestAPI": "aiModel",
                    "GraphQL": "aiModel",
                    "custom": "aiModel"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_model',
            },
            role: {
                fieldNameVariations: {
                    "frontend": "role",
                    "backend": "role",
                    "database": "role",
                    "pretty": "Role",
                    "component": "Role",
                    "kebab": "role",
                    "sqlFunctionRef": "p_role",
                    "RestAPI": "role",
                    "GraphQL": "role",
                    "custom": "role"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "primary_model" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'select:enum' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<"primary_model" | "trial_model" | "verified_model" | undefined>,
                databaseTable: 'recipe_model',
            },
            priority: {
                fieldNameVariations: {
                    "frontend": "priority",
                    "backend": "priority",
                    "database": "priority",
                    "pretty": "Priority",
                    "component": "Priority",
                    "kebab": "priority",
                    "sqlFunctionRef": "p_priority",
                    "RestAPI": "priority",
                    "GraphQL": "priority",
                    "custom": "priority"
                } as const,
                dataType: 'number' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "1" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'number:smallint' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<number>,
                databaseTable: 'recipe_model',
            },
            aiModelReference: {
                fieldNameVariations: {
                    "frontend": "aiModelReference",
                    "backend": "ai_model_reference",
                    "database": "ref_ai_model",
                    "sqlFunctionRef": "p_ref_ai_model",
                    "pretty": "Ai Model Reference",
                    "component": "AiModelReference",
                    "kebab": "ai-modelReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeModel'][]>,
                databaseTable: 'ai_model',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeModel'][]>,
                databaseTable: 'recipe',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'ai_model',
                relatedTable: 'ai_model',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    recipeProcessor: {
        entityNameVariations: {
            "frontend": "recipeProcessor",
            "backend": "recipe_processor",
            "database": "recipe_processor",
            "pretty": "Recipe Processor",
            "component": "RecipeProcessor",
            "kebab": "recipe-processor",
            "sqlFunctionRef": "p_recipe_processor",
            "RestAPI": "recipeProcessor",
            "GraphQL": "recipeProcessor",
            "custom": "recipeProcessor"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_processor',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_processor',
            },
            processor: {
                fieldNameVariations: {
                    "frontend": "processor",
                    "backend": "processor",
                    "database": "processor",
                    "pretty": "Processor",
                    "component": "Processor",
                    "kebab": "processor",
                    "sqlFunctionRef": "p_processor",
                    "RestAPI": "processor",
                    "GraphQL": "processor",
                    "custom": "processor"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_processor',
            },
            params: {
                fieldNameVariations: {
                    "frontend": "params",
                    "backend": "params",
                    "database": "params",
                    "pretty": "Params",
                    "component": "Params",
                    "kebab": "params",
                    "sqlFunctionRef": "p_params",
                    "RestAPI": "params",
                    "GraphQL": "params",
                    "custom": "params"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe_processor',
            },
            processorReference: {
                fieldNameVariations: {
                    "frontend": "processorReference",
                    "backend": "processor_reference",
                    "database": "ref_processor",
                    "sqlFunctionRef": "p_ref_processor",
                    "pretty": "Processor Reference",
                    "component": "ProcessorReference",
                    "kebab": "processorReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeProcessor'][]>,
                databaseTable: 'processor',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeProcessor'][]>,
                databaseTable: 'recipe',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'processor',
                relatedTable: 'processor',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    recipeTool: {
        entityNameVariations: {
            "frontend": "recipeTool",
            "backend": "recipe_tool",
            "database": "recipe_tool",
            "pretty": "Recipe Tool",
            "component": "RecipeTool",
            "kebab": "recipe-tool",
            "sqlFunctionRef": "p_recipe_tool",
            "RestAPI": "recipeTool",
            "GraphQL": "recipeTool",
            "custom": "recipeTool"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_tool',
            },
            recipe: {
                fieldNameVariations: {
                    "frontend": "recipe",
                    "backend": "recipe",
                    "database": "recipe",
                    "pretty": "Recipe",
                    "component": "Recipe",
                    "kebab": "recipe",
                    "sqlFunctionRef": "p_recipe",
                    "RestAPI": "recipe",
                    "GraphQL": "recipe",
                    "custom": "recipe"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_tool',
            },
            tool: {
                fieldNameVariations: {
                    "frontend": "tool",
                    "backend": "tool",
                    "database": "tool",
                    "pretty": "Tool",
                    "component": "Tool",
                    "kebab": "tool",
                    "sqlFunctionRef": "p_tool",
                    "RestAPI": "tool",
                    "GraphQL": "tool",
                    "custom": "tool"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'recipe_tool',
            },
            params: {
                fieldNameVariations: {
                    "frontend": "params",
                    "backend": "params",
                    "database": "params",
                    "pretty": "Params",
                    "component": "Params",
                    "kebab": "params",
                    "sqlFunctionRef": "p_params",
                    "RestAPI": "params",
                    "GraphQL": "params",
                    "custom": "params"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'recipe_tool',
            },
            recipeReference: {
                fieldNameVariations: {
                    "frontend": "recipeReference",
                    "backend": "recipe_reference",
                    "database": "ref_recipe",
                    "sqlFunctionRef": "p_ref_recipe",
                    "pretty": "Recipe Reference",
                    "component": "RecipeReference",
                    "kebab": "recipeReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeTool'][]>,
                databaseTable: 'recipe',
            },
            toolReference: {
                fieldNameVariations: {
                    "frontend": "toolReference",
                    "backend": "tool_reference",
                    "database": "ref_tool",
                    "sqlFunctionRef": "p_ref_tool",
                    "pretty": "Tool Reference",
                    "component": "ToolReference",
                    "kebab": "toolReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['recipeTool'][]>,
                databaseTable: 'tool',
            },
        },
        defaultFetchStrategy: 'm2mAndFk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'recipe',
                relatedTable: 'recipe',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'foreignKey',
                column: 'tool',
                relatedTable: 'tool',
                relatedColumn: 'id',
                junctionTable: null
            }
        ],
    },
    registeredFunction: {
        entityNameVariations: {
            "frontend": "registeredFunction",
            "backend": "registered_function",
            "database": "registered_function",
            "pretty": "Registered Function",
            "component": "RegisteredFunction",
            "kebab": "registered-function",
            "sqlFunctionRef": "p_registered_function",
            "RestAPI": "registeredFunction",
            "GraphQL": "registeredFunction",
            "custom": "registeredFunction"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            modulePath: {
                fieldNameVariations: {
                    "frontend": "modulePath",
                    "backend": "module_path",
                    "database": "module_path",
                    "pretty": "Module Path",
                    "component": "ModulePath",
                    "kebab": "module-path",
                    "sqlFunctionRef": "p_module_path",
                    "RestAPI": "modulePath",
                    "GraphQL": "modulePath",
                    "custom": "modulePath"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            className: {
                fieldNameVariations: {
                    "frontend": "className",
                    "backend": "class_name",
                    "database": "class_name",
                    "pretty": "Class Name",
                    "component": "ClassName",
                    "kebab": "class-name",
                    "sqlFunctionRef": "p_class_name",
                    "RestAPI": "className",
                    "GraphQL": "className",
                    "custom": "className"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            returnBroker: {
                fieldNameVariations: {
                    "frontend": "returnBroker",
                    "backend": "return_broker",
                    "database": "return_broker",
                    "pretty": "Return Broker",
                    "component": "ReturnBroker",
                    "kebab": "return-broker",
                    "sqlFunctionRef": "p_return_broker",
                    "RestAPI": "returnBroker",
                    "GraphQL": "returnBroker",
                    "custom": "returnBroker"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'registered_function',
            },
            brokerReference: {
                fieldNameVariations: {
                    "frontend": "brokerReference",
                    "backend": "broker_reference",
                    "database": "ref_broker",
                    "sqlFunctionRef": "p_ref_broker",
                    "pretty": "Broker Reference",
                    "component": "BrokerReference",
                    "kebab": "brokerReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
                databaseTable: 'broker',
            },
            systemFunctionInverse: {
                fieldNameVariations: {
                    "frontend": "systemFunctionInverse",
                    "backend": "system_function_Inverse",
                    "database": "ifk_system_function",
                    "sqlFunctionRef": "p_ifk_system_function",
                    "pretty": "System Function Inverse",
                    "component": "SystemFunctionInverse",
                    "kebab": "system-functionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
                databaseTable: 'system_function',
            },
            argInverse: {
                fieldNameVariations: {
                    "frontend": "argInverse",
                    "backend": "arg_Inverse",
                    "database": "ifk_arg",
                    "sqlFunctionRef": "p_ifk_arg",
                    "pretty": "Arg Inverse",
                    "component": "ArgInverse",
                    "kebab": "argInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['registeredFunction'][]>,
                databaseTable: 'arg',
            },
        },
        defaultFetchStrategy: 'fkAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'return_broker',
                relatedTable: 'broker',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'system_function',
                relatedColumn: 'rf_id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'arg',
                relatedColumn: 'registered_function',
                junctionTable: null
            }
        ],
    },
    systemFunction: {
        entityNameVariations: {
            "frontend": "systemFunction",
            "backend": "system_function",
            "database": "system_function",
            "pretty": "System Function",
            "component": "SystemFunction",
            "kebab": "system-function",
            "sqlFunctionRef": "p_system_function",
            "RestAPI": "systemFunction",
            "GraphQL": "systemFunction",
            "custom": "systemFunction"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'system_function',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'system_function',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'system_function',
            },
            sample: {
                fieldNameVariations: {
                    "frontend": "sample",
                    "backend": "sample",
                    "database": "sample",
                    "pretty": "Sample",
                    "component": "Sample",
                    "kebab": "sample",
                    "sqlFunctionRef": "p_sample",
                    "RestAPI": "sample",
                    "GraphQL": "sample",
                    "custom": "sample"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'system_function',
            },
            inputParams: {
                fieldNameVariations: {
                    "frontend": "inputParams",
                    "backend": "input_params",
                    "database": "input_params",
                    "pretty": "Input Params",
                    "component": "InputParams",
                    "kebab": "input-params",
                    "sqlFunctionRef": "p_input_params",
                    "RestAPI": "inputParams",
                    "GraphQL": "inputParams",
                    "custom": "inputParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'system_function',
            },
            outputOptions: {
                fieldNameVariations: {
                    "frontend": "outputOptions",
                    "backend": "output_options",
                    "database": "output_options",
                    "pretty": "Output Options",
                    "component": "OutputOptions",
                    "kebab": "output-options",
                    "sqlFunctionRef": "p_output_options",
                    "RestAPI": "outputOptions",
                    "GraphQL": "outputOptions",
                    "custom": "outputOptions"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'system_function',
            },
            rfId: {
                fieldNameVariations: {
                    "frontend": "rfId",
                    "backend": "rf_id",
                    "database": "rf_id",
                    "pretty": "Rf Id",
                    "component": "RfId",
                    "kebab": "rf-id",
                    "sqlFunctionRef": "p_rf_id",
                    "RestAPI": "rfId",
                    "GraphQL": "rfId",
                    "custom": "rfId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'system_function',
            },
            registeredFunctionReference: {
                fieldNameVariations: {
                    "frontend": "registeredFunctionReference",
                    "backend": "registered_function_reference",
                    "database": "ref_registered_function",
                    "sqlFunctionRef": "p_ref_registered_function",
                    "pretty": "Registered Function Reference",
                    "component": "RegisteredFunctionReference",
                    "kebab": "registered-functionReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
                databaseTable: 'registered_function',
            },
            toolInverse: {
                fieldNameVariations: {
                    "frontend": "toolInverse",
                    "backend": "tool_Inverse",
                    "database": "ifk_tool",
                    "sqlFunctionRef": "p_ifk_tool",
                    "pretty": "Tool Inverse",
                    "component": "ToolInverse",
                    "kebab": "toolInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
                databaseTable: 'tool',
            },
            recipeFunctionInverse: {
                fieldNameVariations: {
                    "frontend": "recipeFunctionInverse",
                    "backend": "recipe_function_Inverse",
                    "database": "ifk_recipe_function",
                    "sqlFunctionRef": "p_ifk_recipe_function",
                    "pretty": "Recipe Function Inverse",
                    "component": "RecipeFunctionInverse",
                    "kebab": "recipe-functionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['systemFunction'][]>,
                databaseTable: 'recipe_function',
            },
        },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'rf_id',
                relatedTable: 'registered_function',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'tool',
                relatedColumn: 'system_function',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_function',
                relatedColumn: 'function',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'function',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_function'
            }
        ],
    },
    tool: {
        entityNameVariations: {
            "frontend": "tool",
            "backend": "tool",
            "database": "tool",
            "pretty": "Tool",
            "component": "Tool",
            "kebab": "tool",
            "sqlFunctionRef": "p_tool",
            "RestAPI": "tool",
            "GraphQL": "tool",
            "custom": "tool"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'tool',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'tool',
            },
            source: {
                fieldNameVariations: {
                    "frontend": "source",
                    "backend": "source",
                    "database": "source",
                    "pretty": "Source",
                    "component": "Source",
                    "kebab": "source",
                    "sqlFunctionRef": "p_source",
                    "RestAPI": "source",
                    "GraphQL": "source",
                    "custom": "source"
                } as const,
                dataType: 'object' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "{'host': 'ame'}" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'tool',
            },
            description: {
                fieldNameVariations: {
                    "frontend": "description",
                    "backend": "description",
                    "database": "description",
                    "pretty": "Description",
                    "component": "Description",
                    "kebab": "description",
                    "sqlFunctionRef": "p_description",
                    "RestAPI": "description",
                    "GraphQL": "description",
                    "custom": "description"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'tool',
            },
            parameters: {
                fieldNameVariations: {
                    "frontend": "parameters",
                    "backend": "parameters",
                    "database": "parameters",
                    "pretty": "Parameters",
                    "component": "Parameters",
                    "kebab": "parameters",
                    "sqlFunctionRef": "p_parameters",
                    "RestAPI": "parameters",
                    "GraphQL": "parameters",
                    "custom": "parameters"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'tool',
            },
            requiredArgs: {
                fieldNameVariations: {
                    "frontend": "requiredArgs",
                    "backend": "required_args",
                    "database": "required_args",
                    "pretty": "Required Args",
                    "component": "RequiredArgs",
                    "kebab": "required-args",
                    "sqlFunctionRef": "p_required_args",
                    "RestAPI": "requiredArgs",
                    "GraphQL": "requiredArgs",
                    "custom": "requiredArgs"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'tool',
            },
            systemFunction: {
                fieldNameVariations: {
                    "frontend": "systemFunction",
                    "backend": "system_function",
                    "database": "system_function",
                    "pretty": "System Function",
                    "component": "SystemFunction",
                    "kebab": "system-function",
                    "sqlFunctionRef": "p_system_function",
                    "RestAPI": "systemFunction",
                    "GraphQL": "systemFunction",
                    "custom": "systemFunction"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'tool',
            },
            additionalParams: {
                fieldNameVariations: {
                    "frontend": "additionalParams",
                    "backend": "additional_params",
                    "database": "additional_params",
                    "pretty": "Additional Params",
                    "component": "AdditionalParams",
                    "kebab": "additional-params",
                    "sqlFunctionRef": "p_additional_params",
                    "RestAPI": "additionalParams",
                    "GraphQL": "additionalParams",
                    "custom": "additionalParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'tool',
            },
            systemFunctionReference: {
                fieldNameVariations: {
                    "frontend": "systemFunctionReference",
                    "backend": "system_function_reference",
                    "database": "ref_system_function",
                    "sqlFunctionRef": "p_ref_system_function",
                    "pretty": "System Function Reference",
                    "component": "SystemFunctionReference",
                    "kebab": "system-functionReference"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['tool'][]>,
                databaseTable: 'system_function',
            },
            recipeToolInverse: {
                fieldNameVariations: {
                    "frontend": "recipeToolInverse",
                    "backend": "recipe_tool_Inverse",
                    "database": "ifk_recipe_tool",
                    "sqlFunctionRef": "p_ifk_recipe_tool",
                    "pretty": "Recipe Tool Inverse",
                    "component": "RecipeToolInverse",
                    "kebab": "recipe-toolInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['tool'][]>,
                databaseTable: 'recipe_tool',
            },
        },
        defaultFetchStrategy: 'fkIfkAndM2M',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'foreignKey',
                column: 'system_function',
                relatedTable: 'system_function',
                relatedColumn: 'id',
                junctionTable: null
            },
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'recipe_tool',
                relatedColumn: 'tool',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'tool',
                relatedTable: 'recipe',
                relatedColumn: 'recipe',
                junctionTable: 'recipe_tool'
            }
        ],
    },
    transformer: {
        entityNameVariations: {
            "frontend": "transformer",
            "backend": "transformer",
            "database": "transformer",
            "pretty": "Transformer",
            "component": "Transformer",
            "kebab": "transformer",
            "sqlFunctionRef": "p_transformer",
            "RestAPI": "transformer",
            "GraphQL": "transformer",
            "custom": "transformer"
        },
        schemaType: 'table' as const,
        entityFields: {
            id: {
                fieldNameVariations: {
                    "frontend": "id",
                    "backend": "id",
                    "database": "id",
                    "pretty": "Id",
                    "component": "Id",
                    "kebab": "id",
                    "sqlFunctionRef": "p_id",
                    "RestAPI": "id",
                    "GraphQL": "id",
                    "custom": "id"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'transformer',
            },
            name: {
                fieldNameVariations: {
                    "frontend": "name",
                    "backend": "name",
                    "database": "name",
                    "pretty": "Name",
                    "component": "Name",
                    "kebab": "name",
                    "sqlFunctionRef": "p_name",
                    "RestAPI": "name",
                    "GraphQL": "name",
                    "custom": "name"
                } as const,
                dataType: 'string' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'textarea:5' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'transformer',
            },
            inputParams: {
                fieldNameVariations: {
                    "frontend": "inputParams",
                    "backend": "input_params",
                    "database": "input_params",
                    "pretty": "Input Params",
                    "component": "InputParams",
                    "kebab": "input-params",
                    "sqlFunctionRef": "p_input_params",
                    "RestAPI": "inputParams",
                    "GraphQL": "inputParams",
                    "custom": "inputParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'transformer',
            },
            outputParams: {
                fieldNameVariations: {
                    "frontend": "outputParams",
                    "backend": "output_params",
                    "database": "output_params",
                    "pretty": "Output Params",
                    "component": "OutputParams",
                    "kebab": "output-params",
                    "sqlFunctionRef": "p_output_params",
                    "RestAPI": "outputParams",
                    "GraphQL": "outputParams",
                    "custom": "outputParams"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'transformer',
            },
            actionInverse: {
                fieldNameVariations: {
                    "frontend": "actionInverse",
                    "backend": "action_Inverse",
                    "database": "ifk_action",
                    "sqlFunctionRef": "p_ifk_action",
                    "pretty": "Action Inverse",
                    "component": "ActionInverse",
                    "kebab": "actionInverse"
                } as const,
                dataType: 'object' as const,
                isRequired: false,
                maxLength: null,
                isArray: true,
                defaultValue: [],
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: ['notCoreField'],
                defaultComponent: 'inline-form:1' as const,
                structure: 'foreignKey' as const,
                isNative: false,
                typeReference: {} as TypeBrand<TableSchemaStructure['transformer'][]>,
                databaseTable: 'action',
            },
        },
        defaultFetchStrategy: 'm2mAndIfk',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [
            {
                relationshipType: 'inverseForeignKey',
                column: 'id',
                relatedTable: 'action',
                relatedColumn: 'transformer',
                junctionTable: null
            },
            {
                relationshipType: 'manyToMany',
                column: 'transformer',
                relatedTable: 'automation_matrix',
                relatedColumn: 'matrix',
                junctionTable: 'action'
            }
        ],
    },
    userPreferences: {
        entityNameVariations: {
            "frontend": "userPreferences",
            "backend": "user_preferences",
            "database": "user_preferences",
            "pretty": "User Preferences",
            "component": "UserPreferences",
            "kebab": "user-preferences",
            "sqlFunctionRef": "p_user_preferences",
            "RestAPI": "userPreferences",
            "GraphQL": "userPreferences",
            "custom": "userPreferences"
        },
        schemaType: 'table' as const,
        entityFields: {
            userId: {
                fieldNameVariations: {
                    "frontend": "userId",
                    "backend": "user_id",
                    "database": "user_id",
                    "pretty": "User Id",
                    "component": "UserId",
                    "kebab": "user-id",
                    "sqlFunctionRef": "p_user_id",
                    "RestAPI": "userId",
                    "GraphQL": "userId",
                    "custom": "userId"
                } as const,
                dataType: 'string' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: true,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'input' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<string>,
                databaseTable: 'user_preferences',
            },
            preferences: {
                fieldNameVariations: {
                    "frontend": "preferences",
                    "backend": "preferences",
                    "database": "preferences",
                    "pretty": "Preferences",
                    "component": "Preferences",
                    "kebab": "preferences",
                    "sqlFunctionRef": "p_preferences",
                    "RestAPI": "preferences",
                    "GraphQL": "preferences",
                    "custom": "preferences"
                } as const,
                dataType: 'object' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'json-editor:200' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Record<string, unknown>>,
                databaseTable: 'user_preferences',
            },
            createdAt: {
                fieldNameVariations: {
                    "frontend": "createdAt",
                    "backend": "created_at",
                    "database": "created_at",
                    "pretty": "Created At",
                    "component": "CreatedAt",
                    "kebab": "created-at",
                    "sqlFunctionRef": "p_created_at",
                    "RestAPI": "createdAt",
                    "GraphQL": "createdAt",
                    "custom": "createdAt"
                } as const,
                dataType: 'date' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'user_preferences',
            },
            updatedAt: {
                fieldNameVariations: {
                    "frontend": "updatedAt",
                    "backend": "updated_at",
                    "database": "updated_at",
                    "pretty": "Updated At",
                    "component": "UpdatedAt",
                    "kebab": "updated-at",
                    "sqlFunctionRef": "p_updated_at",
                    "RestAPI": "updatedAt",
                    "GraphQL": "updatedAt",
                    "custom": "updatedAt"
                } as const,
                dataType: 'date' as const,
                isRequired: true,
                maxLength: null,
                isArray: false,
                defaultValue: "" as const,
                isPrimaryKey: false,
                defaultGeneratorFunction: null,
                validationFunctions: [],
                exclusionRules: [],
                defaultComponent: 'datetime' as const,
                componentProps: {
                    "variant": "default",
                    "size": "default",
                    "animation": "default",
                    "fullWidthValue": "default",
                    "fullWidth": "default",
                    "disabled": "default",
                    "className": "default",
                    "type": "default",
                    "onChange": "default"
                },
                structure: 'single' as const,
                isNative: true,
                typeReference: {} as TypeBrand<Date>,
                databaseTable: 'user_preferences',
            },
        },
        defaultFetchStrategy: 'simple',
        componentProps: {
            "variant": "default",
            "size": "default",
            "animation": "default",
            "fullWidthValue": "default",
            "fullWidth": "default",
            "disabled": "default",
            "className": "default",
            "type": "default",
            "onChange": "default"
        },
        relationships: [],
    }
} as const;

export type TypeBrand<DataType> = { _typeBrand: DataType };
export type EnumValues<T> = T extends TypeBrand<infer U> ? U : never;
export type ExtractType<T> = T extends TypeBrand<infer U> ? U : T;

export type InitialTableSchema = {
    schemaType: 'table';
    entityNameVariations: {
        [key in NameFormat]?: string;
    };
    entityFields: {
        [fieldName: string]: {
            fieldNameVariations: {
                [key in NameFormat]?: string;
            };
            dataType: FieldDataType;
            isArray: boolean;
            structure: DataStructure;
            isNative: boolean;
            typeReference: TypeBrand<any>;
            defaultComponent?: string;
            componentProps?: Record<string, unknown>;
            isRequired: boolean;
            maxLength: number | null;
            defaultValue: any;
            isPrimaryKey: boolean;
            isDisplayField?: boolean;
            defaultGeneratorFunction: string | null;
            validationFunctions: readonly string[];
            exclusionRules: readonly string[];
            databaseTable: string;
        };
    };
    defaultFetchStrategy: FetchStrategy;
    componentProps: Record<string, any>;
    relationships: Array<{
        relationshipType: 'foreignKey' | 'inverseForeignKey' | 'manyToMany';
        column: string;
        relatedTable: string;
        relatedColumn: string;
        junctionTable: string | null;
    }>;
};

export type TableSchemaStructure = {
    [entityName in AutomationTableName]: InitialTableSchema;
};


