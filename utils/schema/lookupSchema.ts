// Type definitions for lookups (without changing the objects themselves)
import {AutomationTableName, SchemaEntityKeys} from "@/types/AutomationSchemaTypes";
import {
    FieldNameLookupType, ReverseFieldLookupType, ReverseTableLookupType, TableNameLookupType
} from "@/types/automationTableTypes";


export const tableNameLookup: TableNameLookupType = {
    action: "action",
    Action: "action",
    p_action: "action",
    aiEndpoint: "aiEndpoint",
    "ai-endpoint": "aiEndpoint",
    ai_endpoint: "aiEndpoint",
    "Ai Endpoint": "aiEndpoint",
    p_ai_endpoint: "aiEndpoint",
    AiEndpoint: "aiEndpoint",
    "Ai Model": "aiModel",
    aiModel: "aiModel",
    ai_model: "aiModel",
    AiModel: "aiModel",
    p_ai_model: "aiModel",
    "ai-model": "aiModel",
    Arg: "arg",
    p_arg: "arg",
    arg: "arg",
    p_automation_boundary_broker: "automationBoundaryBroker",
    "automation-boundary-broker": "automationBoundaryBroker",
    automationBoundaryBroker: "automationBoundaryBroker",
    AutomationBoundaryBroker: "automationBoundaryBroker",
    automation_boundary_broker: "automationBoundaryBroker",
    "Automation Boundary Broker": "automationBoundaryBroker",
    automation_matrix: "automationMatrix",
    "Automation Matrix": "automationMatrix",
    p_automation_matrix: "automationMatrix",
    AutomationMatrix: "automationMatrix",
    automationMatrix: "automationMatrix",
    "automation-matrix": "automationMatrix",
    Broker: "broker",
    p_broker: "broker",
    broker: "broker",
    "data-input-component": "dataInputComponent",
    DataInputComponent: "dataInputComponent",
    data_input_component: "dataInputComponent",
    p_data_input_component: "dataInputComponent",
    dataInputComponent: "dataInputComponent",
    "Data Input Component": "dataInputComponent",
    data_output_component: "dataOutputComponent",
    dataOutputComponent: "dataOutputComponent",
    "Data Output Component": "dataOutputComponent",
    p_data_output_component: "dataOutputComponent",
    DataOutputComponent: "dataOutputComponent",
    "data-output-component": "dataOutputComponent",
    displayOption: "displayOption",
    "display-option": "displayOption",
    "Display Option": "displayOption",
    p_display_option: "displayOption",
    DisplayOption: "displayOption",
    display_option: "displayOption",
    p_emails: "emails",
    Emails: "emails",
    emails: "emails",
    p_extractor: "extractor",
    extractor: "extractor",
    Extractor: "extractor",
    "flashcard-data": "flashcardData",
    "Flashcard Data": "flashcardData",
    p_flashcard_data: "flashcardData",
    flashcardData: "flashcardData",
    flashcard_data: "flashcardData",
    FlashcardData: "flashcardData",
    FlashcardHistory: "flashcardHistory",
    "Flashcard History": "flashcardHistory",
    flashcardHistory: "flashcardHistory",
    p_flashcard_history: "flashcardHistory",
    flashcard_history: "flashcardHistory",
    "flashcard-history": "flashcardHistory",
    p_flashcard_images: "flashcardImages",
    flashcard_images: "flashcardImages",
    "Flashcard Images": "flashcardImages",
    flashcardImages: "flashcardImages",
    "flashcard-images": "flashcardImages",
    FlashcardImages: "flashcardImages",
    "Flashcard Set Relations": "flashcardSetRelations",
    "flashcard-set-relations": "flashcardSetRelations",
    flashcard_set_relations: "flashcardSetRelations",
    flashcardSetRelations: "flashcardSetRelations",
    FlashcardSetRelations: "flashcardSetRelations",
    p_flashcard_set_relations: "flashcardSetRelations",
    p_flashcard_sets: "flashcardSets",
    FlashcardSets: "flashcardSets",
    flashcardSets: "flashcardSets",
    flashcard_sets: "flashcardSets",
    "flashcard-sets": "flashcardSets",
    "Flashcard Sets": "flashcardSets",
    Processor: "processor",
    p_processor: "processor",
    processor: "processor",
    recipe: "recipe",
    Recipe: "recipe",
    p_recipe: "recipe",
    "Recipe Broker": "recipeBroker",
    recipe_broker: "recipeBroker",
    recipeBroker: "recipeBroker",
    p_recipe_broker: "recipeBroker",
    "recipe-broker": "recipeBroker",
    RecipeBroker: "recipeBroker",
    RecipeDisplay: "recipeDisplay",
    recipeDisplay: "recipeDisplay",
    recipe_display: "recipeDisplay",
    p_recipe_display: "recipeDisplay",
    "Recipe Display": "recipeDisplay",
    "recipe-display": "recipeDisplay",
    recipeFunction: "recipeFunction",
    RecipeFunction: "recipeFunction",
    p_recipe_function: "recipeFunction",
    "recipe-function": "recipeFunction",
    recipe_function: "recipeFunction",
    "Recipe Function": "recipeFunction",
    "Recipe Model": "recipeModel",
    RecipeModel: "recipeModel",
    "recipe-model": "recipeModel",
    recipeModel: "recipeModel",
    recipe_model: "recipeModel",
    p_recipe_model: "recipeModel",
    "Recipe Processor": "recipeProcessor",
    "recipe-processor": "recipeProcessor",
    RecipeProcessor: "recipeProcessor",
    recipe_processor: "recipeProcessor",
    p_recipe_processor: "recipeProcessor",
    recipeProcessor: "recipeProcessor",
    RecipeTool: "recipeTool",
    recipe_tool: "recipeTool",
    "recipe-tool": "recipeTool",
    p_recipe_tool: "recipeTool",
    "Recipe Tool": "recipeTool",
    recipeTool: "recipeTool",
    "Registered Function": "registeredFunction",
    "registered-function": "registeredFunction",
    RegisteredFunction: "registeredFunction",
    registeredFunction: "registeredFunction",
    p_registered_function: "registeredFunction",
    registered_function: "registeredFunction",
    p_system_function: "systemFunction",
    "System Function": "systemFunction",
    systemFunction: "systemFunction",
    SystemFunction: "systemFunction",
    system_function: "systemFunction",
    "system-function": "systemFunction",
    p_tool: "tool",
    Tool: "tool",
    tool: "tool",
    transformer: "transformer",
    p_transformer: "transformer",
    Transformer: "transformer",
    userPreferences: "userPreferences",
    user_preferences: "userPreferences",
    "user-preferences": "userPreferences",
    p_user_preferences: "userPreferences",
    UserPreferences: "userPreferences",
    "User Preferences": "userPreferences",
};

export const viewNameLookup: Record<string, string> = {
    viewRegisteredFunction: "viewRegisteredFunction",
    "view-registered-function": "viewRegisteredFunction",
    ViewRegisteredFunction: "viewRegisteredFunction",
    p_view_registered_function: "viewRegisteredFunction",
    "View Registered Function": "viewRegisteredFunction",
    view_registered_function: "viewRegisteredFunction",
    p_view_registered_function_all_rels: "viewRegisteredFunctionAllRels",
    viewRegisteredFunctionAllRels: "viewRegisteredFunctionAllRels",
    "view-registered-function-all-rels": "viewRegisteredFunctionAllRels",
    "View Registered Function All Rels": "viewRegisteredFunctionAllRels",
    view_registered_function_all_rels: "viewRegisteredFunctionAllRels",
    ViewRegisteredFunctionAllRels: "viewRegisteredFunctionAllRels",
};

export const fieldNameLookup: FieldNameLookupType = {
    action: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        matrix: "matrix",
        Matrix: "matrix",
        p_matrix: "matrix",
        transformer: "transformer",
        p_transformer: "transformer",
        Transformer: "transformer",
        "Node Type": "nodeType",
        NodeType: "nodeType",
        node_type: "nodeType",
        p_node_type: "nodeType",
        "node-type": "nodeType",
        nodeType: "nodeType",
        referenceId: "referenceId",
        "Reference Id": "referenceId",
        ReferenceId: "referenceId",
        "reference-id": "referenceId",
        reference_id: "referenceId",
        p_reference_id: "referenceId"
    },
    aiEndpoint: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        provider: "provider",
        p_provider: "provider",
        Provider: "provider",
        p_description: "description",
        Description: "description",
        description: "description",
        AdditionalCost: "additionalCost",
        additionalCost: "additionalCost",
        p_additional_cost: "additionalCost",
        additional_cost: "additionalCost",
        "Additional Cost": "additionalCost",
        "additional-cost": "additionalCost",
        cost_details: "costDetails",
        p_cost_details: "costDetails",
        costDetails: "costDetails",
        "Cost Details": "costDetails",
        CostDetails: "costDetails",
        "cost-details": "costDetails",
        Params: "params",
        params: "params",
        p_params: "params"
    },
    aiModel: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        "Common Name": "commonName",
        common_name: "commonName",
        commonName: "commonName",
        "common-name": "commonName",
        CommonName: "commonName",
        p_common_name: "commonName",
        modelClass: "modelClass",
        "Model Class": "modelClass",
        model_class: "modelClass",
        "model-class": "modelClass",
        p_model_class: "modelClass",
        ModelClass: "modelClass",
        provider: "provider",
        p_provider: "provider",
        Provider: "provider",
        p_endpoints: "endpoints",
        Endpoints: "endpoints",
        endpoints: "endpoints",
        contextWindow: "contextWindow",
        p_context_window: "contextWindow",
        context_window: "contextWindow",
        ContextWindow: "contextWindow",
        "context-window": "contextWindow",
        "Context Window": "contextWindow",
        maxTokens: "maxTokens",
        max_tokens: "maxTokens",
        "Max Tokens": "maxTokens",
        MaxTokens: "maxTokens",
        "max-tokens": "maxTokens",
        p_max_tokens: "maxTokens",
        p_capabilities: "capabilities",
        capabilities: "capabilities",
        Capabilities: "capabilities",
        controls: "controls",
        p_controls: "controls",
        Controls: "controls"
    },
    arg: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_required: "required",
        Required: "required",
        required: "required",
        default: "default",
        p_default: "default",
        Default: "default",
        data_type: "dataType",
        DataType: "dataType",
        "Data Type": "dataType",
        p_data_type: "dataType",
        dataType: "dataType",
        "data-type": "dataType",
        ready: "ready",
        p_ready: "ready",
        Ready: "ready",
        registeredFunction: "registeredFunction",
        p_registered_function: "registeredFunction",
        registered_function: "registeredFunction",
        "Registered Function": "registeredFunction",
        "registered-function": "registeredFunction",
        RegisteredFunction: "registeredFunction"
    },
    automationBoundaryBroker: {
        p_id: "id",
        Id: "id",
        id: "id",
        matrix: "matrix",
        Matrix: "matrix",
        p_matrix: "matrix",
        Broker: "broker",
        p_broker: "broker",
        broker: "broker",
        spark_source: "sparkSource",
        "Spark Source": "sparkSource",
        sparkSource: "sparkSource",
        p_spark_source: "sparkSource",
        "spark-source": "sparkSource",
        SparkSource: "sparkSource",
        beaconDestination: "beaconDestination",
        "beacon-destination": "beaconDestination",
        beacon_destination: "beaconDestination",
        p_beacon_destination: "beaconDestination",
        BeaconDestination: "beaconDestination",
        "Beacon Destination": "beaconDestination"
    },
    automationMatrix: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_description: "description",
        Description: "description",
        description: "description",
        "Average Seconds": "averageSeconds",
        "average-seconds": "averageSeconds",
        AverageSeconds: "averageSeconds",
        averageSeconds: "averageSeconds",
        average_seconds: "averageSeconds",
        p_average_seconds: "averageSeconds",
        p_is_automated: "isAutomated",
        "is-automated": "isAutomated",
        "Is Automated": "isAutomated",
        IsAutomated: "isAutomated",
        is_automated: "isAutomated",
        isAutomated: "isAutomated",
        "cognition-matrices": "cognitionMatrices",
        cognitionMatrices: "cognitionMatrices",
        CognitionMatrices: "cognitionMatrices",
        p_cognition_matrices: "cognitionMatrices",
        "Cognition Matrices": "cognitionMatrices",
        cognition_matrices: "cognitionMatrices"
    },
    broker: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        Value: "value",
        p_value: "value",
        value: "value",
        data_type: "dataType",
        DataType: "dataType",
        "Data Type": "dataType",
        p_data_type: "dataType",
        dataType: "dataType",
        "data-type": "dataType",
        ready: "ready",
        p_ready: "ready",
        Ready: "ready",
        "default-source": "defaultSource",
        default_source: "defaultSource",
        defaultSource: "defaultSource",
        DefaultSource: "defaultSource",
        "Default Source": "defaultSource",
        p_default_source: "defaultSource",
        DisplayName: "displayName",
        displayName: "displayName",
        "display-name": "displayName",
        p_display_name: "displayName",
        display_name: "displayName",
        "Display Name": "displayName",
        p_description: "description",
        Description: "description",
        description: "description",
        tooltip: "tooltip",
        Tooltip: "tooltip",
        p_tooltip: "tooltip",
        ValidationRules: "validationRules",
        "validation-rules": "validationRules",
        validationRules: "validationRules",
        p_validation_rules: "validationRules",
        validation_rules: "validationRules",
        "Validation Rules": "validationRules",
        sampleEntries: "sampleEntries",
        sample_entries: "sampleEntries",
        "sample-entries": "sampleEntries",
        "Sample Entries": "sampleEntries",
        SampleEntries: "sampleEntries",
        p_sample_entries: "sampleEntries",
        customSourceComponent: "customSourceComponent",
        p_custom_source_component: "customSourceComponent",
        CustomSourceComponent: "customSourceComponent",
        custom_source_component: "customSourceComponent",
        "custom-source-component": "customSourceComponent",
        "Custom Source Component": "customSourceComponent",
        "additional-params": "additionalParams",
        additionalParams: "additionalParams",
        AdditionalParams: "additionalParams",
        "Additional Params": "additionalParams",
        additional_params: "additionalParams",
        p_additional_params: "additionalParams",
        other_source_params: "otherSourceParams",
        "Other Source Params": "otherSourceParams",
        OtherSourceParams: "otherSourceParams",
        p_other_source_params: "otherSourceParams",
        "other-source-params": "otherSourceParams",
        otherSourceParams: "otherSourceParams",
        default_destination: "defaultDestination",
        defaultDestination: "defaultDestination",
        DefaultDestination: "defaultDestination",
        "default-destination": "defaultDestination",
        "Default Destination": "defaultDestination",
        p_default_destination: "defaultDestination",
        "Output Component": "outputComponent",
        OutputComponent: "outputComponent",
        p_output_component: "outputComponent",
        outputComponent: "outputComponent",
        output_component: "outputComponent",
        "output-component": "outputComponent",
        tags: "tags",
        p_tags: "tags",
        Tags: "tags"
    },
    dataInputComponent: {
        p_id: "id",
        Id: "id",
        id: "id",
        p_options: "options",
        Options: "options",
        options: "options",
        "Include Other": "includeOther",
        IncludeOther: "includeOther",
        p_include_other: "includeOther",
        include_other: "includeOther",
        "include-other": "includeOther",
        includeOther: "includeOther",
        Min: "min",
        p_min: "min",
        min: "min",
        max: "max",
        p_max: "max",
        Max: "max",
        Step: "step",
        p_step: "step",
        step: "step",
        minRows: "minRows",
        "Min Rows": "minRows",
        "min-rows": "minRows",
        p_min_rows: "minRows",
        min_rows: "minRows",
        MinRows: "minRows",
        maxRows: "maxRows",
        "Max Rows": "maxRows",
        MaxRows: "maxRows",
        "max-rows": "maxRows",
        max_rows: "maxRows",
        p_max_rows: "maxRows",
        "acceptable-filetypes": "acceptableFiletypes",
        "Acceptable Filetypes": "acceptableFiletypes",
        acceptable_filetypes: "acceptableFiletypes",
        acceptableFiletypes: "acceptableFiletypes",
        p_acceptable_filetypes: "acceptableFiletypes",
        AcceptableFiletypes: "acceptableFiletypes",
        p_src: "src",
        Src: "src",
        src: "src",
        Classes: "classes",
        p_classes: "classes",
        classes: "classes",
        p_color_overrides: "colorOverrides",
        color_overrides: "colorOverrides",
        colorOverrides: "colorOverrides",
        ColorOverrides: "colorOverrides",
        "Color Overrides": "colorOverrides",
        "color-overrides": "colorOverrides",
        "additional-params": "additionalParams",
        additionalParams: "additionalParams",
        AdditionalParams: "additionalParams",
        "Additional Params": "additionalParams",
        additional_params: "additionalParams",
        p_additional_params: "additionalParams"
    },
    dataOutputComponent: {
        p_id: "id",
        Id: "id",
        id: "id",
        "Component Type": "componentType",
        ComponentType: "componentType",
        component_type: "componentType",
        "component-type": "componentType",
        p_component_type: "componentType",
        componentType: "componentType",
        "ui-component": "uiComponent",
        UiComponent: "uiComponent",
        "Ui Component": "uiComponent",
        p_ui_component: "uiComponent",
        uiComponent: "uiComponent",
        ui_component: "uiComponent",
        props: "props",
        Props: "props",
        p_props: "props",
        "additional-params": "additionalParams",
        additionalParams: "additionalParams",
        AdditionalParams: "additionalParams",
        "Additional Params": "additionalParams",
        additional_params: "additionalParams",
        p_additional_params: "additionalParams"
    },
    displayOption: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_default_params: "defaultParams",
        DefaultParams: "defaultParams",
        defaultParams: "defaultParams",
        default_params: "defaultParams",
        "Default Params": "defaultParams",
        "default-params": "defaultParams",
        "customizable-params": "customizableParams",
        customizableParams: "customizableParams",
        CustomizableParams: "customizableParams",
        customizable_params: "customizableParams",
        "Customizable Params": "customizableParams",
        p_customizable_params: "customizableParams",
        "additional-params": "additionalParams",
        additionalParams: "additionalParams",
        AdditionalParams: "additionalParams",
        "Additional Params": "additionalParams",
        additional_params: "additionalParams",
        p_additional_params: "additionalParams"
    },
    emails: {
        p_id: "id",
        Id: "id",
        id: "id",
        Sender: "sender",
        sender: "sender",
        p_sender: "sender",
        Recipient: "recipient",
        recipient: "recipient",
        p_recipient: "recipient",
        p_subject: "subject",
        subject: "subject",
        Subject: "subject",
        p_body: "body",
        Body: "body",
        body: "body",
        Timestamp: "timestamp",
        timestamp: "timestamp",
        p_timestamp: "timestamp",
        p_is_read: "isRead",
        "is-read": "isRead",
        IsRead: "isRead",
        "Is Read": "isRead",
        is_read: "isRead",
        isRead: "isRead"
    },
    extractor: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        "output-type": "outputType",
        OutputType: "outputType",
        "Output Type": "outputType",
        p_output_type: "outputType",
        output_type: "outputType",
        outputType: "outputType",
        "default-identifier": "defaultIdentifier",
        DefaultIdentifier: "defaultIdentifier",
        "Default Identifier": "defaultIdentifier",
        default_identifier: "defaultIdentifier",
        defaultIdentifier: "defaultIdentifier",
        p_default_identifier: "defaultIdentifier",
        p_default_index: "defaultIndex",
        default_index: "defaultIndex",
        defaultIndex: "defaultIndex",
        DefaultIndex: "defaultIndex",
        "default-index": "defaultIndex",
        "Default Index": "defaultIndex"
    },
    flashcardData: {
        p_id: "id",
        Id: "id",
        id: "id",
        "User Id": "userId",
        user_id: "userId",
        userId: "userId",
        "user-id": "userId",
        UserId: "userId",
        p_user_id: "userId",
        topic: "topic",
        p_topic: "topic",
        Topic: "topic",
        Lesson: "lesson",
        p_lesson: "lesson",
        lesson: "lesson",
        p_difficulty: "difficulty",
        Difficulty: "difficulty",
        difficulty: "difficulty",
        front: "front",
        Front: "front",
        p_front: "front",
        back: "back",
        p_back: "back",
        Back: "back",
        Example: "example",
        p_example: "example",
        example: "example",
        p_detailed_explanation: "detailedExplanation",
        detailed_explanation: "detailedExplanation",
        "detailed-explanation": "detailedExplanation",
        detailedExplanation: "detailedExplanation",
        DetailedExplanation: "detailedExplanation",
        "Detailed Explanation": "detailedExplanation",
        AudioExplanation: "audioExplanation",
        audioExplanation: "audioExplanation",
        "audio-explanation": "audioExplanation",
        "Audio Explanation": "audioExplanation",
        audio_explanation: "audioExplanation",
        p_audio_explanation: "audioExplanation",
        personalNotes: "personalNotes",
        "personal-notes": "personalNotes",
        "Personal Notes": "personalNotes",
        p_personal_notes: "personalNotes",
        personal_notes: "personalNotes",
        PersonalNotes: "personalNotes",
        "is-deleted": "isDeleted",
        "Is Deleted": "isDeleted",
        IsDeleted: "isDeleted",
        is_deleted: "isDeleted",
        p_is_deleted: "isDeleted",
        isDeleted: "isDeleted",
        p_public: "public",
        public: "public",
        Public: "public",
        "Shared With": "sharedWith",
        sharedWith: "sharedWith",
        shared_with: "sharedWith",
        SharedWith: "sharedWith",
        "shared-with": "sharedWith",
        p_shared_with: "sharedWith",
        createdAt: "createdAt",
        "created-at": "createdAt",
        "Created At": "createdAt",
        CreatedAt: "createdAt",
        created_at: "createdAt",
        p_created_at: "createdAt",
        updatedAt: "updatedAt",
        UpdatedAt: "updatedAt",
        updated_at: "updatedAt",
        "updated-at": "updatedAt",
        "Updated At": "updatedAt",
        p_updated_at: "updatedAt"
    },
    flashcardHistory: {
        p_id: "id",
        Id: "id",
        id: "id",
        "flashcard-id": "flashcardId",
        flashcardId: "flashcardId",
        p_flashcard_id: "flashcardId",
        FlashcardId: "flashcardId",
        "Flashcard Id": "flashcardId",
        flashcard_id: "flashcardId",
        "User Id": "userId",
        user_id: "userId",
        userId: "userId",
        "user-id": "userId",
        UserId: "userId",
        p_user_id: "userId",
        reviewCount: "reviewCount",
        ReviewCount: "reviewCount",
        p_review_count: "reviewCount",
        "review-count": "reviewCount",
        "Review Count": "reviewCount",
        review_count: "reviewCount",
        CorrectCount: "correctCount",
        p_correct_count: "correctCount",
        correct_count: "correctCount",
        "correct-count": "correctCount",
        correctCount: "correctCount",
        "Correct Count": "correctCount",
        "Incorrect Count": "incorrectCount",
        p_incorrect_count: "incorrectCount",
        "incorrect-count": "incorrectCount",
        IncorrectCount: "incorrectCount",
        incorrect_count: "incorrectCount",
        incorrectCount: "incorrectCount",
        createdAt: "createdAt",
        "created-at": "createdAt",
        "Created At": "createdAt",
        CreatedAt: "createdAt",
        created_at: "createdAt",
        p_created_at: "createdAt",
        updatedAt: "updatedAt",
        UpdatedAt: "updatedAt",
        updated_at: "updatedAt",
        "updated-at": "updatedAt",
        "Updated At": "updatedAt",
        p_updated_at: "updatedAt"
    },
    flashcardImages: {
        p_id: "id",
        Id: "id",
        id: "id",
        "flashcard-id": "flashcardId",
        flashcardId: "flashcardId",
        p_flashcard_id: "flashcardId",
        FlashcardId: "flashcardId",
        "Flashcard Id": "flashcardId",
        flashcard_id: "flashcardId",
        p_file_path: "filePath",
        "file-path": "filePath",
        FilePath: "filePath",
        "File Path": "filePath",
        file_path: "filePath",
        filePath: "filePath",
        FileName: "fileName",
        p_file_name: "fileName",
        file_name: "fileName",
        "File Name": "fileName",
        fileName: "fileName",
        "file-name": "fileName",
        mimeType: "mimeType",
        MimeType: "mimeType",
        p_mime_type: "mimeType",
        "mime-type": "mimeType",
        "Mime Type": "mimeType",
        mime_type: "mimeType",
        Size: "size",
        p_size: "size",
        size: "size",
        createdAt: "createdAt",
        "created-at": "createdAt",
        "Created At": "createdAt",
        CreatedAt: "createdAt",
        created_at: "createdAt",
        p_created_at: "createdAt"
    },
    flashcardSetRelations: {
        "flashcard-id": "flashcardId",
        flashcardId: "flashcardId",
        p_flashcard_id: "flashcardId",
        FlashcardId: "flashcardId",
        "Flashcard Id": "flashcardId",
        flashcard_id: "flashcardId",
        setId: "setId",
        set_id: "setId",
        SetId: "setId",
        p_set_id: "setId",
        "set-id": "setId",
        "Set Id": "setId",
        p_order: "order",
        Order: "order",
        order: "order"
    },
    flashcardSets: {
        setId: "setId",
        set_id: "setId",
        SetId: "setId",
        p_set_id: "setId",
        "set-id": "setId",
        "Set Id": "setId",
        "User Id": "userId",
        user_id: "userId",
        userId: "userId",
        "user-id": "userId",
        UserId: "userId",
        p_user_id: "userId",
        Name: "name",
        name: "name",
        p_name: "name",
        createdAt: "createdAt",
        "created-at": "createdAt",
        "Created At": "createdAt",
        CreatedAt: "createdAt",
        created_at: "createdAt",
        p_created_at: "createdAt",
        updatedAt: "updatedAt",
        UpdatedAt: "updatedAt",
        updated_at: "updatedAt",
        "updated-at": "updatedAt",
        "Updated At": "updatedAt",
        p_updated_at: "updatedAt",
        "Shared With": "sharedWith",
        sharedWith: "sharedWith",
        shared_with: "sharedWith",
        SharedWith: "sharedWith",
        "shared-with": "sharedWith",
        p_shared_with: "sharedWith",
        p_public: "public",
        public: "public",
        Public: "public",
        topic: "topic",
        p_topic: "topic",
        Topic: "topic",
        Lesson: "lesson",
        p_lesson: "lesson",
        lesson: "lesson",
        p_difficulty: "difficulty",
        Difficulty: "difficulty",
        difficulty: "difficulty",
        AudioOverview: "audioOverview",
        audioOverview: "audioOverview",
        audio_overview: "audioOverview",
        p_audio_overview: "audioOverview",
        "Audio Overview": "audioOverview",
        "audio-overview": "audioOverview"
    },
    processor: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        depends_default: "dependsDefault",
        p_depends_default: "dependsDefault",
        DependsDefault: "dependsDefault",
        "Depends Default": "dependsDefault",
        dependsDefault: "dependsDefault",
        "depends-default": "dependsDefault",
        "default-extractors": "defaultExtractors",
        defaultExtractors: "defaultExtractors",
        DefaultExtractors: "defaultExtractors",
        default_extractors: "defaultExtractors",
        "Default Extractors": "defaultExtractors",
        p_default_extractors: "defaultExtractors",
        Params: "params",
        params: "params",
        p_params: "params"
    },
    recipe: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_description: "description",
        Description: "description",
        description: "description",
        tags: "tags",
        p_tags: "tags",
        Tags: "tags",
        p_sample_output: "sampleOutput",
        sample_output: "sampleOutput",
        "Sample Output": "sampleOutput",
        SampleOutput: "sampleOutput",
        sampleOutput: "sampleOutput",
        "sample-output": "sampleOutput",
        p_is_public: "isPublic",
        "Is Public": "isPublic",
        isPublic: "isPublic",
        is_public: "isPublic",
        IsPublic: "isPublic",
        "is-public": "isPublic",
        p_status: "status",
        Status: "status",
        status: "status",
        p_version: "version",
        Version: "version",
        version: "version",
        Messages: "messages",
        p_messages: "messages",
        messages: "messages",
        "post-result-options": "postResultOptions",
        post_result_options: "postResultOptions",
        postResultOptions: "postResultOptions",
        "Post Result Options": "postResultOptions",
        p_post_result_options: "postResultOptions",
        PostResultOptions: "postResultOptions"
    },
    recipeBroker: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        Broker: "broker",
        p_broker: "broker",
        broker: "broker",
        p_broker_role: "brokerRole",
        BrokerRole: "brokerRole",
        "Broker Role": "brokerRole",
        brokerRole: "brokerRole",
        "broker-role": "brokerRole",
        broker_role: "brokerRole",
        p_required: "required",
        Required: "required",
        required: "required"
    },
    recipeDisplay: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        display: "display",
        Display: "display",
        p_display: "display",
        p_priority: "priority",
        priority: "priority",
        Priority: "priority",
        p_display_settings: "displaySettings",
        displaySettings: "displaySettings",
        DisplaySettings: "displaySettings",
        display_settings: "displaySettings",
        "display-settings": "displaySettings",
        "Display Settings": "displaySettings"
    },
    recipeFunction: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        p_function: "function",
        Function: "function",
        function: "function",
        p_role: "role",
        Role: "role",
        role: "role",
        Params: "params",
        params: "params",
        p_params: "params"
    },
    recipeModel: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        aiModel: "aiModel",
        ai_model: "aiModel",
        AiModel: "aiModel",
        p_ai_model: "aiModel",
        "Ai Model": "aiModel",
        "ai-model": "aiModel",
        p_role: "role",
        Role: "role",
        role: "role",
        p_priority: "priority",
        priority: "priority",
        Priority: "priority"
    },
    recipeProcessor: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        Processor: "processor",
        p_processor: "processor",
        processor: "processor",
        Params: "params",
        params: "params",
        p_params: "params"
    },
    recipeTool: {
        p_id: "id",
        Id: "id",
        id: "id",
        recipe: "recipe",
        Recipe: "recipe",
        p_recipe: "recipe",
        p_tool: "tool",
        Tool: "tool",
        tool: "tool",
        Params: "params",
        params: "params",
        p_params: "params"
    },
    registeredFunction: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_module_path: "modulePath",
        "Module Path": "modulePath",
        "module-path": "modulePath",
        ModulePath: "modulePath",
        module_path: "modulePath",
        modulePath: "modulePath",
        className: "className",
        "class-name": "className",
        p_class_name: "className",
        "Class Name": "className",
        ClassName: "className",
        class_name: "className",
        p_description: "description",
        Description: "description",
        description: "description",
        returnBroker: "returnBroker",
        "Return Broker": "returnBroker",
        return_broker: "returnBroker",
        ReturnBroker: "returnBroker",
        p_return_broker: "returnBroker",
        "return-broker": "returnBroker"
    },
    systemFunction: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        p_description: "description",
        Description: "description",
        description: "description",
        Sample: "sample",
        p_sample: "sample",
        sample: "sample",
        InputParams: "inputParams",
        "input-params": "inputParams",
        inputParams: "inputParams",
        p_input_params: "inputParams",
        input_params: "inputParams",
        "Input Params": "inputParams",
        "Output Options": "outputOptions",
        "output-options": "outputOptions",
        outputOptions: "outputOptions",
        OutputOptions: "outputOptions",
        p_output_options: "outputOptions",
        output_options: "outputOptions",
        RfId: "rfId",
        rfId: "rfId",
        rf_id: "rfId",
        "Rf Id": "rfId",
        "rf-id": "rfId",
        p_rf_id: "rfId"
    },
    tool: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        Source: "source",
        source: "source",
        p_source: "source",
        p_description: "description",
        Description: "description",
        description: "description",
        Parameters: "parameters",
        p_parameters: "parameters",
        parameters: "parameters",
        RequiredArgs: "requiredArgs",
        "Required Args": "requiredArgs",
        p_required_args: "requiredArgs",
        requiredArgs: "requiredArgs",
        required_args: "requiredArgs",
        "required-args": "requiredArgs",
        p_system_function: "systemFunction",
        SystemFunction: "systemFunction",
        system_function: "systemFunction",
        "System Function": "systemFunction",
        "system-function": "systemFunction",
        systemFunction: "systemFunction",
        "additional-params": "additionalParams",
        additionalParams: "additionalParams",
        AdditionalParams: "additionalParams",
        "Additional Params": "additionalParams",
        additional_params: "additionalParams",
        p_additional_params: "additionalParams"
    },
    transformer: {
        p_id: "id",
        Id: "id",
        id: "id",
        Name: "name",
        name: "name",
        p_name: "name",
        InputParams: "inputParams",
        "input-params": "inputParams",
        inputParams: "inputParams",
        p_input_params: "inputParams",
        input_params: "inputParams",
        "Input Params": "inputParams",
        output_params: "outputParams",
        p_output_params: "outputParams",
        "output-params": "outputParams",
        "Output Params": "outputParams",
        outputParams: "outputParams",
        OutputParams: "outputParams"
    },
    userPreferences: {
        "User Id": "userId",
        user_id: "userId",
        userId: "userId",
        "user-id": "userId",
        UserId: "userId",
        p_user_id: "userId",
        Preferences: "preferences",
        p_preferences: "preferences",
        preferences: "preferences",
        createdAt: "createdAt",
        "created-at": "createdAt",
        "Created At": "createdAt",
        CreatedAt: "createdAt",
        created_at: "createdAt",
        p_created_at: "createdAt",
        updatedAt: "updatedAt",
        UpdatedAt: "updatedAt",
        updated_at: "updatedAt",
        "updated-at": "updatedAt",
        "Updated At": "updatedAt",
        p_updated_at: "updatedAt"
    },
};

export const reverseTableNameLookup: ReverseTableLookupType = {
    action: {
        "frontend": "action",
        "backend": "action",
        "database": "action",
        "pretty": "Action",
        "component": "Action",
        "kebab": "action",
        "sqlFunctionRef": "p_action",
        "RestAPI": "action",
        "GraphQL": "action",
        "custom": "action"
    },
    aiEndpoint: {
        "frontend": "aiEndpoint",
        "backend": "ai_endpoint",
        "database": "ai_endpoint",
        "pretty": "Ai Endpoint",
        "component": "AiEndpoint",
        "kebab": "ai-endpoint",
        "sqlFunctionRef": "p_ai_endpoint",
        "RestAPI": "aiEndpoint",
        "GraphQL": "aiEndpoint",
        "custom": "aiEndpoint"
    },
    aiModel: {
        "frontend": "aiModel",
        "backend": "ai_model",
        "database": "ai_model",
        "pretty": "Ai Model",
        "component": "AiModel",
        "kebab": "ai-model",
        "sqlFunctionRef": "p_ai_model",
        "RestAPI": "aiModel",
        "GraphQL": "aiModel",
        "custom": "aiModel"
    },
    arg: {
        "frontend": "arg",
        "backend": "arg",
        "database": "arg",
        "pretty": "Arg",
        "component": "Arg",
        "kebab": "arg",
        "sqlFunctionRef": "p_arg",
        "RestAPI": "arg",
        "GraphQL": "arg",
        "custom": "arg"
    },
    automationBoundaryBroker: {
        "frontend": "automationBoundaryBroker",
        "backend": "automation_boundary_broker",
        "database": "automation_boundary_broker",
        "pretty": "Automation Boundary Broker",
        "component": "AutomationBoundaryBroker",
        "kebab": "automation-boundary-broker",
        "sqlFunctionRef": "p_automation_boundary_broker",
        "RestAPI": "automationBoundaryBroker",
        "GraphQL": "automationBoundaryBroker",
        "custom": "automationBoundaryBroker"
    },
    automationMatrix: {
        "frontend": "automationMatrix",
        "backend": "automation_matrix",
        "database": "automation_matrix",
        "pretty": "Automation Matrix",
        "component": "AutomationMatrix",
        "kebab": "automation-matrix",
        "sqlFunctionRef": "p_automation_matrix",
        "RestAPI": "automationMatrix",
        "GraphQL": "automationMatrix",
        "custom": "automationMatrix"
    },
    broker: {
        "frontend": "broker",
        "backend": "broker",
        "database": "broker",
        "pretty": "Broker",
        "component": "Broker",
        "kebab": "broker",
        "sqlFunctionRef": "p_broker",
        "RestAPI": "broker",
        "GraphQL": "broker",
        "custom": "broker"
    },
    dataInputComponent: {
        "frontend": "dataInputComponent",
        "backend": "data_input_component",
        "database": "data_input_component",
        "pretty": "Data Input Component",
        "component": "DataInputComponent",
        "kebab": "data-input-component",
        "sqlFunctionRef": "p_data_input_component",
        "RestAPI": "dataInputComponent",
        "GraphQL": "dataInputComponent",
        "custom": "dataInputComponent"
    },
    dataOutputComponent: {
        "frontend": "dataOutputComponent",
        "backend": "data_output_component",
        "database": "data_output_component",
        "pretty": "Data Output Component",
        "component": "DataOutputComponent",
        "kebab": "data-output-component",
        "sqlFunctionRef": "p_data_output_component",
        "RestAPI": "dataOutputComponent",
        "GraphQL": "dataOutputComponent",
        "custom": "dataOutputComponent"
    },
    displayOption: {
        "frontend": "displayOption",
        "backend": "display_option",
        "database": "display_option",
        "pretty": "Display Option",
        "component": "DisplayOption",
        "kebab": "display-option",
        "sqlFunctionRef": "p_display_option",
        "RestAPI": "displayOption",
        "GraphQL": "displayOption",
        "custom": "displayOption"
    },
    emails: {
        "frontend": "emails",
        "backend": "emails",
        "database": "emails",
        "pretty": "Emails",
        "component": "Emails",
        "kebab": "emails",
        "sqlFunctionRef": "p_emails",
        "RestAPI": "emails",
        "GraphQL": "emails",
        "custom": "emails"
    },
    extractor: {
        "frontend": "extractor",
        "backend": "extractor",
        "database": "extractor",
        "pretty": "Extractor",
        "component": "Extractor",
        "kebab": "extractor",
        "sqlFunctionRef": "p_extractor",
        "RestAPI": "extractor",
        "GraphQL": "extractor",
        "custom": "extractor"
    },
    flashcardData: {
        "frontend": "flashcardData",
        "backend": "flashcard_data",
        "database": "flashcard_data",
        "pretty": "Flashcard Data",
        "component": "FlashcardData",
        "kebab": "flashcard-data",
        "sqlFunctionRef": "p_flashcard_data",
        "RestAPI": "flashcardData",
        "GraphQL": "flashcardData",
        "custom": "flashcardData"
    },
    flashcardHistory: {
        "frontend": "flashcardHistory",
        "backend": "flashcard_history",
        "database": "flashcard_history",
        "pretty": "Flashcard History",
        "component": "FlashcardHistory",
        "kebab": "flashcard-history",
        "sqlFunctionRef": "p_flashcard_history",
        "RestAPI": "flashcardHistory",
        "GraphQL": "flashcardHistory",
        "custom": "flashcardHistory"
    },
    flashcardImages: {
        "frontend": "flashcardImages",
        "backend": "flashcard_images",
        "database": "flashcard_images",
        "pretty": "Flashcard Images",
        "component": "FlashcardImages",
        "kebab": "flashcard-images",
        "sqlFunctionRef": "p_flashcard_images",
        "RestAPI": "flashcardImages",
        "GraphQL": "flashcardImages",
        "custom": "flashcardImages"
    },
    flashcardSetRelations: {
        "frontend": "flashcardSetRelations",
        "backend": "flashcard_set_relations",
        "database": "flashcard_set_relations",
        "pretty": "Flashcard Set Relations",
        "component": "FlashcardSetRelations",
        "kebab": "flashcard-set-relations",
        "sqlFunctionRef": "p_flashcard_set_relations",
        "RestAPI": "flashcardSetRelations",
        "GraphQL": "flashcardSetRelations",
        "custom": "flashcardSetRelations"
    },
    flashcardSets: {
        "frontend": "flashcardSets",
        "backend": "flashcard_sets",
        "database": "flashcard_sets",
        "pretty": "Flashcard Sets",
        "component": "FlashcardSets",
        "kebab": "flashcard-sets",
        "sqlFunctionRef": "p_flashcard_sets",
        "RestAPI": "flashcardSets",
        "GraphQL": "flashcardSets",
        "custom": "flashcardSets"
    },
    processor: {
        "frontend": "processor",
        "backend": "processor",
        "database": "processor",
        "pretty": "Processor",
        "component": "Processor",
        "kebab": "processor",
        "sqlFunctionRef": "p_processor",
        "RestAPI": "processor",
        "GraphQL": "processor",
        "custom": "processor"
    },
    recipe: {
        "frontend": "recipe",
        "backend": "recipe",
        "database": "recipe",
        "pretty": "Recipe",
        "component": "Recipe",
        "kebab": "recipe",
        "sqlFunctionRef": "p_recipe",
        "RestAPI": "recipe",
        "GraphQL": "recipe",
        "custom": "recipe"
    },
    recipeBroker: {
        "frontend": "recipeBroker",
        "backend": "recipe_broker",
        "database": "recipe_broker",
        "pretty": "Recipe Broker",
        "component": "RecipeBroker",
        "kebab": "recipe-broker",
        "sqlFunctionRef": "p_recipe_broker",
        "RestAPI": "recipeBroker",
        "GraphQL": "recipeBroker",
        "custom": "recipeBroker"
    },
    recipeDisplay: {
        "frontend": "recipeDisplay",
        "backend": "recipe_display",
        "database": "recipe_display",
        "pretty": "Recipe Display",
        "component": "RecipeDisplay",
        "kebab": "recipe-display",
        "sqlFunctionRef": "p_recipe_display",
        "RestAPI": "recipeDisplay",
        "GraphQL": "recipeDisplay",
        "custom": "recipeDisplay"
    },
    recipeFunction: {
        "frontend": "recipeFunction",
        "backend": "recipe_function",
        "database": "recipe_function",
        "pretty": "Recipe Function",
        "component": "RecipeFunction",
        "kebab": "recipe-function",
        "sqlFunctionRef": "p_recipe_function",
        "RestAPI": "recipeFunction",
        "GraphQL": "recipeFunction",
        "custom": "recipeFunction"
    },
    recipeModel: {
        "frontend": "recipeModel",
        "backend": "recipe_model",
        "database": "recipe_model",
        "pretty": "Recipe Model",
        "component": "RecipeModel",
        "kebab": "recipe-model",
        "sqlFunctionRef": "p_recipe_model",
        "RestAPI": "recipeModel",
        "GraphQL": "recipeModel",
        "custom": "recipeModel"
    },
    recipeProcessor: {
        "frontend": "recipeProcessor",
        "backend": "recipe_processor",
        "database": "recipe_processor",
        "pretty": "Recipe Processor",
        "component": "RecipeProcessor",
        "kebab": "recipe-processor",
        "sqlFunctionRef": "p_recipe_processor",
        "RestAPI": "recipeProcessor",
        "GraphQL": "recipeProcessor",
        "custom": "recipeProcessor"
    },
    recipeTool: {
        "frontend": "recipeTool",
        "backend": "recipe_tool",
        "database": "recipe_tool",
        "pretty": "Recipe Tool",
        "component": "RecipeTool",
        "kebab": "recipe-tool",
        "sqlFunctionRef": "p_recipe_tool",
        "RestAPI": "recipeTool",
        "GraphQL": "recipeTool",
        "custom": "recipeTool"
    },
    registeredFunction: {
        "frontend": "registeredFunction",
        "backend": "registered_function",
        "database": "registered_function",
        "pretty": "Registered Function",
        "component": "RegisteredFunction",
        "kebab": "registered-function",
        "sqlFunctionRef": "p_registered_function",
        "RestAPI": "registeredFunction",
        "GraphQL": "registeredFunction",
        "custom": "registeredFunction"
    },
    systemFunction: {
        "frontend": "systemFunction",
        "backend": "system_function",
        "database": "system_function",
        "pretty": "System Function",
        "component": "SystemFunction",
        "kebab": "system-function",
        "sqlFunctionRef": "p_system_function",
        "RestAPI": "systemFunction",
        "GraphQL": "systemFunction",
        "custom": "systemFunction"
    },
    tool: {
        "frontend": "tool",
        "backend": "tool",
        "database": "tool",
        "pretty": "Tool",
        "component": "Tool",
        "kebab": "tool",
        "sqlFunctionRef": "p_tool",
        "RestAPI": "tool",
        "GraphQL": "tool",
        "custom": "tool"
    },
    transformer: {
        "frontend": "transformer",
        "backend": "transformer",
        "database": "transformer",
        "pretty": "Transformer",
        "component": "Transformer",
        "kebab": "transformer",
        "sqlFunctionRef": "p_transformer",
        "RestAPI": "transformer",
        "GraphQL": "transformer",
        "custom": "transformer"
    },
    userPreferences: {
        "frontend": "userPreferences",
        "backend": "user_preferences",
        "database": "user_preferences",
        "pretty": "User Preferences",
        "component": "UserPreferences",
        "kebab": "user-preferences",
        "sqlFunctionRef": "p_user_preferences",
        "RestAPI": "userPreferences",
        "GraphQL": "userPreferences",
        "custom": "userPreferences"
    },
};

export const reverseFieldNameLookup: ReverseFieldLookupType = {
    action: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "matrix": {
            "frontend": "matrix",
            "backend": "matrix",
            "database": "matrix",
            "pretty": "Matrix",
            "component": "Matrix",
            "kebab": "matrix",
            "sqlFunctionRef": "p_matrix",
            "RestAPI": "matrix",
            "GraphQL": "matrix",
            "custom": "matrix"
        },
        "transformer": {
            "frontend": "transformer",
            "backend": "transformer",
            "database": "transformer",
            "pretty": "Transformer",
            "component": "Transformer",
            "kebab": "transformer",
            "sqlFunctionRef": "p_transformer",
            "RestAPI": "transformer",
            "GraphQL": "transformer",
            "custom": "transformer"
        },
        "node_type": {
            "frontend": "nodeType",
            "backend": "node_type",
            "database": "node_type",
            "pretty": "Node Type",
            "component": "NodeType",
            "kebab": "node-type",
            "sqlFunctionRef": "p_node_type",
            "RestAPI": "nodeType",
            "GraphQL": "nodeType",
            "custom": "nodeType"
        },
        "reference_id": {
            "frontend": "referenceId",
            "backend": "reference_id",
            "database": "reference_id",
            "pretty": "Reference Id",
            "component": "ReferenceId",
            "kebab": "reference-id",
            "sqlFunctionRef": "p_reference_id",
            "RestAPI": "referenceId",
            "GraphQL": "referenceId",
            "custom": "referenceId"
        }
    },
    aiEndpoint: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "provider": {
            "frontend": "provider",
            "backend": "provider",
            "database": "provider",
            "pretty": "Provider",
            "component": "Provider",
            "kebab": "provider",
            "sqlFunctionRef": "p_provider",
            "RestAPI": "provider",
            "GraphQL": "provider",
            "custom": "provider"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "additional_cost": {
            "frontend": "additionalCost",
            "backend": "additional_cost",
            "database": "additional_cost",
            "pretty": "Additional Cost",
            "component": "AdditionalCost",
            "kebab": "additional-cost",
            "sqlFunctionRef": "p_additional_cost",
            "RestAPI": "additionalCost",
            "GraphQL": "additionalCost",
            "custom": "additionalCost"
        },
        "cost_details": {
            "frontend": "costDetails",
            "backend": "cost_details",
            "database": "cost_details",
            "pretty": "Cost Details",
            "component": "CostDetails",
            "kebab": "cost-details",
            "sqlFunctionRef": "p_cost_details",
            "RestAPI": "costDetails",
            "GraphQL": "costDetails",
            "custom": "costDetails"
        },
        "params": {
            "frontend": "params",
            "backend": "params",
            "database": "params",
            "pretty": "Params",
            "component": "Params",
            "kebab": "params",
            "sqlFunctionRef": "p_params",
            "RestAPI": "params",
            "GraphQL": "params",
            "custom": "params"
        }
    },
    aiModel: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "common_name": {
            "frontend": "commonName",
            "backend": "common_name",
            "database": "common_name",
            "pretty": "Common Name",
            "component": "CommonName",
            "kebab": "common-name",
            "sqlFunctionRef": "p_common_name",
            "RestAPI": "commonName",
            "GraphQL": "commonName",
            "custom": "commonName"
        },
        "model_class": {
            "frontend": "modelClass",
            "backend": "model_class",
            "database": "model_class",
            "pretty": "Model Class",
            "component": "ModelClass",
            "kebab": "model-class",
            "sqlFunctionRef": "p_model_class",
            "RestAPI": "modelClass",
            "GraphQL": "modelClass",
            "custom": "modelClass"
        },
        "provider": {
            "frontend": "provider",
            "backend": "provider",
            "database": "provider",
            "pretty": "Provider",
            "component": "Provider",
            "kebab": "provider",
            "sqlFunctionRef": "p_provider",
            "RestAPI": "provider",
            "GraphQL": "provider",
            "custom": "provider"
        },
        "endpoints": {
            "frontend": "endpoints",
            "backend": "endpoints",
            "database": "endpoints",
            "pretty": "Endpoints",
            "component": "Endpoints",
            "kebab": "endpoints",
            "sqlFunctionRef": "p_endpoints",
            "RestAPI": "endpoints",
            "GraphQL": "endpoints",
            "custom": "endpoints"
        },
        "context_window": {
            "frontend": "contextWindow",
            "backend": "context_window",
            "database": "context_window",
            "pretty": "Context Window",
            "component": "ContextWindow",
            "kebab": "context-window",
            "sqlFunctionRef": "p_context_window",
            "RestAPI": "contextWindow",
            "GraphQL": "contextWindow",
            "custom": "contextWindow"
        },
        "max_tokens": {
            "frontend": "maxTokens",
            "backend": "max_tokens",
            "database": "max_tokens",
            "pretty": "Max Tokens",
            "component": "MaxTokens",
            "kebab": "max-tokens",
            "sqlFunctionRef": "p_max_tokens",
            "RestAPI": "maxTokens",
            "GraphQL": "maxTokens",
            "custom": "maxTokens"
        },
        "capabilities": {
            "frontend": "capabilities",
            "backend": "capabilities",
            "database": "capabilities",
            "pretty": "Capabilities",
            "component": "Capabilities",
            "kebab": "capabilities",
            "sqlFunctionRef": "p_capabilities",
            "RestAPI": "capabilities",
            "GraphQL": "capabilities",
            "custom": "capabilities"
        },
        "controls": {
            "frontend": "controls",
            "backend": "controls",
            "database": "controls",
            "pretty": "Controls",
            "component": "Controls",
            "kebab": "controls",
            "sqlFunctionRef": "p_controls",
            "RestAPI": "controls",
            "GraphQL": "controls",
            "custom": "controls"
        }
    },
    arg: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "required": {
            "frontend": "required",
            "backend": "required",
            "database": "required",
            "pretty": "Required",
            "component": "Required",
            "kebab": "required",
            "sqlFunctionRef": "p_required",
            "RestAPI": "required",
            "GraphQL": "required",
            "custom": "required"
        },
        "default": {
            "frontend": "default",
            "backend": "default",
            "database": "default",
            "pretty": "Default",
            "component": "Default",
            "kebab": "default",
            "sqlFunctionRef": "p_default",
            "RestAPI": "default",
            "GraphQL": "default",
            "custom": "default"
        },
        "data_type": {
            "frontend": "dataType",
            "backend": "data_type",
            "database": "data_type",
            "pretty": "Data Type",
            "component": "DataType",
            "kebab": "data-type",
            "sqlFunctionRef": "p_data_type",
            "RestAPI": "dataType",
            "GraphQL": "dataType",
            "custom": "dataType"
        },
        "ready": {
            "frontend": "ready",
            "backend": "ready",
            "database": "ready",
            "pretty": "Ready",
            "component": "Ready",
            "kebab": "ready",
            "sqlFunctionRef": "p_ready",
            "RestAPI": "ready",
            "GraphQL": "ready",
            "custom": "ready"
        },
        "registered_function": {
            "frontend": "registeredFunction",
            "backend": "registered_function",
            "database": "registered_function",
            "pretty": "Registered Function",
            "component": "RegisteredFunction",
            "kebab": "registered-function",
            "sqlFunctionRef": "p_registered_function",
            "RestAPI": "registeredFunction",
            "GraphQL": "registeredFunction",
            "custom": "registeredFunction"
        }
    },
    automationBoundaryBroker: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "matrix": {
            "frontend": "matrix",
            "backend": "matrix",
            "database": "matrix",
            "pretty": "Matrix",
            "component": "Matrix",
            "kebab": "matrix",
            "sqlFunctionRef": "p_matrix",
            "RestAPI": "matrix",
            "GraphQL": "matrix",
            "custom": "matrix"
        },
        "broker": {
            "frontend": "broker",
            "backend": "broker",
            "database": "broker",
            "pretty": "Broker",
            "component": "Broker",
            "kebab": "broker",
            "sqlFunctionRef": "p_broker",
            "RestAPI": "broker",
            "GraphQL": "broker",
            "custom": "broker"
        },
        "spark_source": {
            "frontend": "sparkSource",
            "backend": "spark_source",
            "database": "spark_source",
            "pretty": "Spark Source",
            "component": "SparkSource",
            "kebab": "spark-source",
            "sqlFunctionRef": "p_spark_source",
            "RestAPI": "sparkSource",
            "GraphQL": "sparkSource",
            "custom": "sparkSource"
        },
        "beacon_destination": {
            "frontend": "beaconDestination",
            "backend": "beacon_destination",
            "database": "beacon_destination",
            "pretty": "Beacon Destination",
            "component": "BeaconDestination",
            "kebab": "beacon-destination",
            "sqlFunctionRef": "p_beacon_destination",
            "RestAPI": "beaconDestination",
            "GraphQL": "beaconDestination",
            "custom": "beaconDestination"
        }
    },
    automationMatrix: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "average_seconds": {
            "frontend": "averageSeconds",
            "backend": "average_seconds",
            "database": "average_seconds",
            "pretty": "Average Seconds",
            "component": "AverageSeconds",
            "kebab": "average-seconds",
            "sqlFunctionRef": "p_average_seconds",
            "RestAPI": "averageSeconds",
            "GraphQL": "averageSeconds",
            "custom": "averageSeconds"
        },
        "is_automated": {
            "frontend": "isAutomated",
            "backend": "is_automated",
            "database": "is_automated",
            "pretty": "Is Automated",
            "component": "IsAutomated",
            "kebab": "is-automated",
            "sqlFunctionRef": "p_is_automated",
            "RestAPI": "isAutomated",
            "GraphQL": "isAutomated",
            "custom": "isAutomated"
        },
        "cognition_matrices": {
            "frontend": "cognitionMatrices",
            "backend": "cognition_matrices",
            "database": "cognition_matrices",
            "pretty": "Cognition Matrices",
            "component": "CognitionMatrices",
            "kebab": "cognition-matrices",
            "sqlFunctionRef": "p_cognition_matrices",
            "RestAPI": "cognitionMatrices",
            "GraphQL": "cognitionMatrices",
            "custom": "cognitionMatrices"
        }
    },
    broker: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "value": {
            "frontend": "value",
            "backend": "value",
            "database": "value",
            "pretty": "Value",
            "component": "Value",
            "kebab": "value",
            "sqlFunctionRef": "p_value",
            "RestAPI": "value",
            "GraphQL": "value",
            "custom": "value"
        },
        "data_type": {
            "frontend": "dataType",
            "backend": "data_type",
            "database": "data_type",
            "pretty": "Data Type",
            "component": "DataType",
            "kebab": "data-type",
            "sqlFunctionRef": "p_data_type",
            "RestAPI": "dataType",
            "GraphQL": "dataType",
            "custom": "dataType"
        },
        "ready": {
            "frontend": "ready",
            "backend": "ready",
            "database": "ready",
            "pretty": "Ready",
            "component": "Ready",
            "kebab": "ready",
            "sqlFunctionRef": "p_ready",
            "RestAPI": "ready",
            "GraphQL": "ready",
            "custom": "ready"
        },
        "default_source": {
            "frontend": "defaultSource",
            "backend": "default_source",
            "database": "default_source",
            "pretty": "Default Source",
            "component": "DefaultSource",
            "kebab": "default-source",
            "sqlFunctionRef": "p_default_source",
            "RestAPI": "defaultSource",
            "GraphQL": "defaultSource",
            "custom": "defaultSource"
        },
        "display_name": {
            "frontend": "displayName",
            "backend": "display_name",
            "database": "display_name",
            "pretty": "Display Name",
            "component": "DisplayName",
            "kebab": "display-name",
            "sqlFunctionRef": "p_display_name",
            "RestAPI": "displayName",
            "GraphQL": "displayName",
            "custom": "displayName"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "tooltip": {
            "frontend": "tooltip",
            "backend": "tooltip",
            "database": "tooltip",
            "pretty": "Tooltip",
            "component": "Tooltip",
            "kebab": "tooltip",
            "sqlFunctionRef": "p_tooltip",
            "RestAPI": "tooltip",
            "GraphQL": "tooltip",
            "custom": "tooltip"
        },
        "validation_rules": {
            "frontend": "validationRules",
            "backend": "validation_rules",
            "database": "validation_rules",
            "pretty": "Validation Rules",
            "component": "ValidationRules",
            "kebab": "validation-rules",
            "sqlFunctionRef": "p_validation_rules",
            "RestAPI": "validationRules",
            "GraphQL": "validationRules",
            "custom": "validationRules"
        },
        "sample_entries": {
            "frontend": "sampleEntries",
            "backend": "sample_entries",
            "database": "sample_entries",
            "pretty": "Sample Entries",
            "component": "SampleEntries",
            "kebab": "sample-entries",
            "sqlFunctionRef": "p_sample_entries",
            "RestAPI": "sampleEntries",
            "GraphQL": "sampleEntries",
            "custom": "sampleEntries"
        },
        "custom_source_component": {
            "frontend": "customSourceComponent",
            "backend": "custom_source_component",
            "database": "custom_source_component",
            "pretty": "Custom Source Component",
            "component": "CustomSourceComponent",
            "kebab": "custom-source-component",
            "sqlFunctionRef": "p_custom_source_component",
            "RestAPI": "customSourceComponent",
            "GraphQL": "customSourceComponent",
            "custom": "customSourceComponent"
        },
        "additional_params": {
            "frontend": "additionalParams",
            "backend": "additional_params",
            "database": "additional_params",
            "pretty": "Additional Params",
            "component": "AdditionalParams",
            "kebab": "additional-params",
            "sqlFunctionRef": "p_additional_params",
            "RestAPI": "additionalParams",
            "GraphQL": "additionalParams",
            "custom": "additionalParams"
        },
        "other_source_params": {
            "frontend": "otherSourceParams",
            "backend": "other_source_params",
            "database": "other_source_params",
            "pretty": "Other Source Params",
            "component": "OtherSourceParams",
            "kebab": "other-source-params",
            "sqlFunctionRef": "p_other_source_params",
            "RestAPI": "otherSourceParams",
            "GraphQL": "otherSourceParams",
            "custom": "otherSourceParams"
        },
        "default_destination": {
            "frontend": "defaultDestination",
            "backend": "default_destination",
            "database": "default_destination",
            "pretty": "Default Destination",
            "component": "DefaultDestination",
            "kebab": "default-destination",
            "sqlFunctionRef": "p_default_destination",
            "RestAPI": "defaultDestination",
            "GraphQL": "defaultDestination",
            "custom": "defaultDestination"
        },
        "output_component": {
            "frontend": "outputComponent",
            "backend": "output_component",
            "database": "output_component",
            "pretty": "Output Component",
            "component": "OutputComponent",
            "kebab": "output-component",
            "sqlFunctionRef": "p_output_component",
            "RestAPI": "outputComponent",
            "GraphQL": "outputComponent",
            "custom": "outputComponent"
        },
        "tags": {
            "frontend": "tags",
            "backend": "tags",
            "database": "tags",
            "pretty": "Tags",
            "component": "Tags",
            "kebab": "tags",
            "sqlFunctionRef": "p_tags",
            "RestAPI": "tags",
            "GraphQL": "tags",
            "custom": "tags"
        }
    },
    dataInputComponent: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "options": {
            "frontend": "options",
            "backend": "options",
            "database": "options",
            "pretty": "Options",
            "component": "Options",
            "kebab": "options",
            "sqlFunctionRef": "p_options",
            "RestAPI": "options",
            "GraphQL": "options",
            "custom": "options"
        },
        "include_other": {
            "frontend": "includeOther",
            "backend": "include_other",
            "database": "include_other",
            "pretty": "Include Other",
            "component": "IncludeOther",
            "kebab": "include-other",
            "sqlFunctionRef": "p_include_other",
            "RestAPI": "includeOther",
            "GraphQL": "includeOther",
            "custom": "includeOther"
        },
        "min": {
            "frontend": "min",
            "backend": "min",
            "database": "min",
            "pretty": "Min",
            "component": "Min",
            "kebab": "min",
            "sqlFunctionRef": "p_min",
            "RestAPI": "min",
            "GraphQL": "min",
            "custom": "min"
        },
        "max": {
            "frontend": "max",
            "backend": "max",
            "database": "max",
            "pretty": "Max",
            "component": "Max",
            "kebab": "max",
            "sqlFunctionRef": "p_max",
            "RestAPI": "max",
            "GraphQL": "max",
            "custom": "max"
        },
        "step": {
            "frontend": "step",
            "backend": "step",
            "database": "step",
            "pretty": "Step",
            "component": "Step",
            "kebab": "step",
            "sqlFunctionRef": "p_step",
            "RestAPI": "step",
            "GraphQL": "step",
            "custom": "step"
        },
        "min_rows": {
            "frontend": "minRows",
            "backend": "min_rows",
            "database": "min_rows",
            "pretty": "Min Rows",
            "component": "MinRows",
            "kebab": "min-rows",
            "sqlFunctionRef": "p_min_rows",
            "RestAPI": "minRows",
            "GraphQL": "minRows",
            "custom": "minRows"
        },
        "max_rows": {
            "frontend": "maxRows",
            "backend": "max_rows",
            "database": "max_rows",
            "pretty": "Max Rows",
            "component": "MaxRows",
            "kebab": "max-rows",
            "sqlFunctionRef": "p_max_rows",
            "RestAPI": "maxRows",
            "GraphQL": "maxRows",
            "custom": "maxRows"
        },
        "acceptable_filetypes": {
            "frontend": "acceptableFiletypes",
            "backend": "acceptable_filetypes",
            "database": "acceptable_filetypes",
            "pretty": "Acceptable Filetypes",
            "component": "AcceptableFiletypes",
            "kebab": "acceptable-filetypes",
            "sqlFunctionRef": "p_acceptable_filetypes",
            "RestAPI": "acceptableFiletypes",
            "GraphQL": "acceptableFiletypes",
            "custom": "acceptableFiletypes"
        },
        "src": {
            "frontend": "src",
            "backend": "src",
            "database": "src",
            "pretty": "Src",
            "component": "Src",
            "kebab": "src",
            "sqlFunctionRef": "p_src",
            "RestAPI": "src",
            "GraphQL": "src",
            "custom": "src"
        },
        "classes": {
            "frontend": "classes",
            "backend": "classes",
            "database": "classes",
            "pretty": "Classes",
            "component": "Classes",
            "kebab": "classes",
            "sqlFunctionRef": "p_classes",
            "RestAPI": "classes",
            "GraphQL": "classes",
            "custom": "classes"
        },
        "color_overrides": {
            "frontend": "colorOverrides",
            "backend": "color_overrides",
            "database": "color_overrides",
            "pretty": "Color Overrides",
            "component": "ColorOverrides",
            "kebab": "color-overrides",
            "sqlFunctionRef": "p_color_overrides",
            "RestAPI": "colorOverrides",
            "GraphQL": "colorOverrides",
            "custom": "colorOverrides"
        },
        "additional_params": {
            "frontend": "additionalParams",
            "backend": "additional_params",
            "database": "additional_params",
            "pretty": "Additional Params",
            "component": "AdditionalParams",
            "kebab": "additional-params",
            "sqlFunctionRef": "p_additional_params",
            "RestAPI": "additionalParams",
            "GraphQL": "additionalParams",
            "custom": "additionalParams"
        }
    },
    dataOutputComponent: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "component_type": {
            "frontend": "componentType",
            "backend": "component_type",
            "database": "component_type",
            "pretty": "Component Type",
            "component": "ComponentType",
            "kebab": "component-type",
            "sqlFunctionRef": "p_component_type",
            "RestAPI": "componentType",
            "GraphQL": "componentType",
            "custom": "componentType"
        },
        "ui_component": {
            "frontend": "uiComponent",
            "backend": "ui_component",
            "database": "ui_component",
            "pretty": "Ui Component",
            "component": "UiComponent",
            "kebab": "ui-component",
            "sqlFunctionRef": "p_ui_component",
            "RestAPI": "uiComponent",
            "GraphQL": "uiComponent",
            "custom": "uiComponent"
        },
        "props": {
            "frontend": "props",
            "backend": "props",
            "database": "props",
            "pretty": "Props",
            "component": "Props",
            "kebab": "props",
            "sqlFunctionRef": "p_props",
            "RestAPI": "props",
            "GraphQL": "props",
            "custom": "props"
        },
        "additional_params": {
            "frontend": "additionalParams",
            "backend": "additional_params",
            "database": "additional_params",
            "pretty": "Additional Params",
            "component": "AdditionalParams",
            "kebab": "additional-params",
            "sqlFunctionRef": "p_additional_params",
            "RestAPI": "additionalParams",
            "GraphQL": "additionalParams",
            "custom": "additionalParams"
        }
    },
    displayOption: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "default_params": {
            "frontend": "defaultParams",
            "backend": "default_params",
            "database": "default_params",
            "pretty": "Default Params",
            "component": "DefaultParams",
            "kebab": "default-params",
            "sqlFunctionRef": "p_default_params",
            "RestAPI": "defaultParams",
            "GraphQL": "defaultParams",
            "custom": "defaultParams"
        },
        "customizable_params": {
            "frontend": "customizableParams",
            "backend": "customizable_params",
            "database": "customizable_params",
            "pretty": "Customizable Params",
            "component": "CustomizableParams",
            "kebab": "customizable-params",
            "sqlFunctionRef": "p_customizable_params",
            "RestAPI": "customizableParams",
            "GraphQL": "customizableParams",
            "custom": "customizableParams"
        },
        "additional_params": {
            "frontend": "additionalParams",
            "backend": "additional_params",
            "database": "additional_params",
            "pretty": "Additional Params",
            "component": "AdditionalParams",
            "kebab": "additional-params",
            "sqlFunctionRef": "p_additional_params",
            "RestAPI": "additionalParams",
            "GraphQL": "additionalParams",
            "custom": "additionalParams"
        }
    },
    emails: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "sender": {
            "frontend": "sender",
            "backend": "sender",
            "database": "sender",
            "pretty": "Sender",
            "component": "Sender",
            "kebab": "sender",
            "sqlFunctionRef": "p_sender",
            "RestAPI": "sender",
            "GraphQL": "sender",
            "custom": "sender"
        },
        "recipient": {
            "frontend": "recipient",
            "backend": "recipient",
            "database": "recipient",
            "pretty": "Recipient",
            "component": "Recipient",
            "kebab": "recipient",
            "sqlFunctionRef": "p_recipient",
            "RestAPI": "recipient",
            "GraphQL": "recipient",
            "custom": "recipient"
        },
        "subject": {
            "frontend": "subject",
            "backend": "subject",
            "database": "subject",
            "pretty": "Subject",
            "component": "Subject",
            "kebab": "subject",
            "sqlFunctionRef": "p_subject",
            "RestAPI": "subject",
            "GraphQL": "subject",
            "custom": "subject"
        },
        "body": {
            "frontend": "body",
            "backend": "body",
            "database": "body",
            "pretty": "Body",
            "component": "Body",
            "kebab": "body",
            "sqlFunctionRef": "p_body",
            "RestAPI": "body",
            "GraphQL": "body",
            "custom": "body"
        },
        "timestamp": {
            "frontend": "timestamp",
            "backend": "timestamp",
            "database": "timestamp",
            "pretty": "Timestamp",
            "component": "Timestamp",
            "kebab": "timestamp",
            "sqlFunctionRef": "p_timestamp",
            "RestAPI": "timestamp",
            "GraphQL": "timestamp",
            "custom": "timestamp"
        },
        "is_read": {
            "frontend": "isRead",
            "backend": "is_read",
            "database": "is_read",
            "pretty": "Is Read",
            "component": "IsRead",
            "kebab": "is-read",
            "sqlFunctionRef": "p_is_read",
            "RestAPI": "isRead",
            "GraphQL": "isRead",
            "custom": "isRead"
        }
    },
    extractor: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "output_type": {
            "frontend": "outputType",
            "backend": "output_type",
            "database": "output_type",
            "pretty": "Output Type",
            "component": "OutputType",
            "kebab": "output-type",
            "sqlFunctionRef": "p_output_type",
            "RestAPI": "outputType",
            "GraphQL": "outputType",
            "custom": "outputType"
        },
        "default_identifier": {
            "frontend": "defaultIdentifier",
            "backend": "default_identifier",
            "database": "default_identifier",
            "pretty": "Default Identifier",
            "component": "DefaultIdentifier",
            "kebab": "default-identifier",
            "sqlFunctionRef": "p_default_identifier",
            "RestAPI": "defaultIdentifier",
            "GraphQL": "defaultIdentifier",
            "custom": "defaultIdentifier"
        },
        "default_index": {
            "frontend": "defaultIndex",
            "backend": "default_index",
            "database": "default_index",
            "pretty": "Default Index",
            "component": "DefaultIndex",
            "kebab": "default-index",
            "sqlFunctionRef": "p_default_index",
            "RestAPI": "defaultIndex",
            "GraphQL": "defaultIndex",
            "custom": "defaultIndex"
        }
    },
    flashcardData: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "user_id": {
            "frontend": "userId",
            "backend": "user_id",
            "database": "user_id",
            "pretty": "User Id",
            "component": "UserId",
            "kebab": "user-id",
            "sqlFunctionRef": "p_user_id",
            "RestAPI": "userId",
            "GraphQL": "userId",
            "custom": "userId"
        },
        "topic": {
            "frontend": "topic",
            "backend": "topic",
            "database": "topic",
            "pretty": "Topic",
            "component": "Topic",
            "kebab": "topic",
            "sqlFunctionRef": "p_topic",
            "RestAPI": "topic",
            "GraphQL": "topic",
            "custom": "topic"
        },
        "lesson": {
            "frontend": "lesson",
            "backend": "lesson",
            "database": "lesson",
            "pretty": "Lesson",
            "component": "Lesson",
            "kebab": "lesson",
            "sqlFunctionRef": "p_lesson",
            "RestAPI": "lesson",
            "GraphQL": "lesson",
            "custom": "lesson"
        },
        "difficulty": {
            "frontend": "difficulty",
            "backend": "difficulty",
            "database": "difficulty",
            "pretty": "Difficulty",
            "component": "Difficulty",
            "kebab": "difficulty",
            "sqlFunctionRef": "p_difficulty",
            "RestAPI": "difficulty",
            "GraphQL": "difficulty",
            "custom": "difficulty"
        },
        "front": {
            "frontend": "front",
            "backend": "front",
            "database": "front",
            "pretty": "Front",
            "component": "Front",
            "kebab": "front",
            "sqlFunctionRef": "p_front",
            "RestAPI": "front",
            "GraphQL": "front",
            "custom": "front"
        },
        "back": {
            "frontend": "back",
            "backend": "back",
            "database": "back",
            "pretty": "Back",
            "component": "Back",
            "kebab": "back",
            "sqlFunctionRef": "p_back",
            "RestAPI": "back",
            "GraphQL": "back",
            "custom": "back"
        },
        "example": {
            "frontend": "example",
            "backend": "example",
            "database": "example",
            "pretty": "Example",
            "component": "Example",
            "kebab": "example",
            "sqlFunctionRef": "p_example",
            "RestAPI": "example",
            "GraphQL": "example",
            "custom": "example"
        },
        "detailed_explanation": {
            "frontend": "detailedExplanation",
            "backend": "detailed_explanation",
            "database": "detailed_explanation",
            "pretty": "Detailed Explanation",
            "component": "DetailedExplanation",
            "kebab": "detailed-explanation",
            "sqlFunctionRef": "p_detailed_explanation",
            "RestAPI": "detailedExplanation",
            "GraphQL": "detailedExplanation",
            "custom": "detailedExplanation"
        },
        "audio_explanation": {
            "frontend": "audioExplanation",
            "backend": "audio_explanation",
            "database": "audio_explanation",
            "pretty": "Audio Explanation",
            "component": "AudioExplanation",
            "kebab": "audio-explanation",
            "sqlFunctionRef": "p_audio_explanation",
            "RestAPI": "audioExplanation",
            "GraphQL": "audioExplanation",
            "custom": "audioExplanation"
        },
        "personal_notes": {
            "frontend": "personalNotes",
            "backend": "personal_notes",
            "database": "personal_notes",
            "pretty": "Personal Notes",
            "component": "PersonalNotes",
            "kebab": "personal-notes",
            "sqlFunctionRef": "p_personal_notes",
            "RestAPI": "personalNotes",
            "GraphQL": "personalNotes",
            "custom": "personalNotes"
        },
        "is_deleted": {
            "frontend": "isDeleted",
            "backend": "is_deleted",
            "database": "is_deleted",
            "pretty": "Is Deleted",
            "component": "IsDeleted",
            "kebab": "is-deleted",
            "sqlFunctionRef": "p_is_deleted",
            "RestAPI": "isDeleted",
            "GraphQL": "isDeleted",
            "custom": "isDeleted"
        },
        "public": {
            "frontend": "public",
            "backend": "public",
            "database": "public",
            "pretty": "Public",
            "component": "Public",
            "kebab": "public",
            "sqlFunctionRef": "p_public",
            "RestAPI": "public",
            "GraphQL": "public",
            "custom": "public"
        },
        "shared_with": {
            "frontend": "sharedWith",
            "backend": "shared_with",
            "database": "shared_with",
            "pretty": "Shared With",
            "component": "SharedWith",
            "kebab": "shared-with",
            "sqlFunctionRef": "p_shared_with",
            "RestAPI": "sharedWith",
            "GraphQL": "sharedWith",
            "custom": "sharedWith"
        },
        "created_at": {
            "frontend": "createdAt",
            "backend": "created_at",
            "database": "created_at",
            "pretty": "Created At",
            "component": "CreatedAt",
            "kebab": "created-at",
            "sqlFunctionRef": "p_created_at",
            "RestAPI": "createdAt",
            "GraphQL": "createdAt",
            "custom": "createdAt"
        },
        "updated_at": {
            "frontend": "updatedAt",
            "backend": "updated_at",
            "database": "updated_at",
            "pretty": "Updated At",
            "component": "UpdatedAt",
            "kebab": "updated-at",
            "sqlFunctionRef": "p_updated_at",
            "RestAPI": "updatedAt",
            "GraphQL": "updatedAt",
            "custom": "updatedAt"
        }
    },
    flashcardHistory: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "flashcard_id": {
            "frontend": "flashcardId",
            "backend": "flashcard_id",
            "database": "flashcard_id",
            "pretty": "Flashcard Id",
            "component": "FlashcardId",
            "kebab": "flashcard-id",
            "sqlFunctionRef": "p_flashcard_id",
            "RestAPI": "flashcardId",
            "GraphQL": "flashcardId",
            "custom": "flashcardId"
        },
        "user_id": {
            "frontend": "userId",
            "backend": "user_id",
            "database": "user_id",
            "pretty": "User Id",
            "component": "UserId",
            "kebab": "user-id",
            "sqlFunctionRef": "p_user_id",
            "RestAPI": "userId",
            "GraphQL": "userId",
            "custom": "userId"
        },
        "review_count": {
            "frontend": "reviewCount",
            "backend": "review_count",
            "database": "review_count",
            "pretty": "Review Count",
            "component": "ReviewCount",
            "kebab": "review-count",
            "sqlFunctionRef": "p_review_count",
            "RestAPI": "reviewCount",
            "GraphQL": "reviewCount",
            "custom": "reviewCount"
        },
        "correct_count": {
            "frontend": "correctCount",
            "backend": "correct_count",
            "database": "correct_count",
            "pretty": "Correct Count",
            "component": "CorrectCount",
            "kebab": "correct-count",
            "sqlFunctionRef": "p_correct_count",
            "RestAPI": "correctCount",
            "GraphQL": "correctCount",
            "custom": "correctCount"
        },
        "incorrect_count": {
            "frontend": "incorrectCount",
            "backend": "incorrect_count",
            "database": "incorrect_count",
            "pretty": "Incorrect Count",
            "component": "IncorrectCount",
            "kebab": "incorrect-count",
            "sqlFunctionRef": "p_incorrect_count",
            "RestAPI": "incorrectCount",
            "GraphQL": "incorrectCount",
            "custom": "incorrectCount"
        },
        "created_at": {
            "frontend": "createdAt",
            "backend": "created_at",
            "database": "created_at",
            "pretty": "Created At",
            "component": "CreatedAt",
            "kebab": "created-at",
            "sqlFunctionRef": "p_created_at",
            "RestAPI": "createdAt",
            "GraphQL": "createdAt",
            "custom": "createdAt"
        },
        "updated_at": {
            "frontend": "updatedAt",
            "backend": "updated_at",
            "database": "updated_at",
            "pretty": "Updated At",
            "component": "UpdatedAt",
            "kebab": "updated-at",
            "sqlFunctionRef": "p_updated_at",
            "RestAPI": "updatedAt",
            "GraphQL": "updatedAt",
            "custom": "updatedAt"
        }
    },
    flashcardImages: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "flashcard_id": {
            "frontend": "flashcardId",
            "backend": "flashcard_id",
            "database": "flashcard_id",
            "pretty": "Flashcard Id",
            "component": "FlashcardId",
            "kebab": "flashcard-id",
            "sqlFunctionRef": "p_flashcard_id",
            "RestAPI": "flashcardId",
            "GraphQL": "flashcardId",
            "custom": "flashcardId"
        },
        "file_path": {
            "frontend": "filePath",
            "backend": "file_path",
            "database": "file_path",
            "pretty": "File Path",
            "component": "FilePath",
            "kebab": "file-path",
            "sqlFunctionRef": "p_file_path",
            "RestAPI": "filePath",
            "GraphQL": "filePath",
            "custom": "filePath"
        },
        "file_name": {
            "frontend": "fileName",
            "backend": "file_name",
            "database": "file_name",
            "pretty": "File Name",
            "component": "FileName",
            "kebab": "file-name",
            "sqlFunctionRef": "p_file_name",
            "RestAPI": "fileName",
            "GraphQL": "fileName",
            "custom": "fileName"
        },
        "mime_type": {
            "frontend": "mimeType",
            "backend": "mime_type",
            "database": "mime_type",
            "pretty": "Mime Type",
            "component": "MimeType",
            "kebab": "mime-type",
            "sqlFunctionRef": "p_mime_type",
            "RestAPI": "mimeType",
            "GraphQL": "mimeType",
            "custom": "mimeType"
        },
        "size": {
            "frontend": "size",
            "backend": "size",
            "database": "size",
            "pretty": "Size",
            "component": "Size",
            "kebab": "size",
            "sqlFunctionRef": "p_size",
            "RestAPI": "size",
            "GraphQL": "size",
            "custom": "size"
        },
        "created_at": {
            "frontend": "createdAt",
            "backend": "created_at",
            "database": "created_at",
            "pretty": "Created At",
            "component": "CreatedAt",
            "kebab": "created-at",
            "sqlFunctionRef": "p_created_at",
            "RestAPI": "createdAt",
            "GraphQL": "createdAt",
            "custom": "createdAt"
        }
    },
    flashcardSetRelations: {
        "flashcard_id": {
            "frontend": "flashcardId",
            "backend": "flashcard_id",
            "database": "flashcard_id",
            "pretty": "Flashcard Id",
            "component": "FlashcardId",
            "kebab": "flashcard-id",
            "sqlFunctionRef": "p_flashcard_id",
            "RestAPI": "flashcardId",
            "GraphQL": "flashcardId",
            "custom": "flashcardId"
        },
        "set_id": {
            "frontend": "setId",
            "backend": "set_id",
            "database": "set_id",
            "pretty": "Set Id",
            "component": "SetId",
            "kebab": "set-id",
            "sqlFunctionRef": "p_set_id",
            "RestAPI": "setId",
            "GraphQL": "setId",
            "custom": "setId"
        },
        "order": {
            "frontend": "order",
            "backend": "order",
            "database": "order",
            "pretty": "Order",
            "component": "Order",
            "kebab": "order",
            "sqlFunctionRef": "p_order",
            "RestAPI": "order",
            "GraphQL": "order",
            "custom": "order"
        }
    },
    flashcardSets: {
        "set_id": {
            "frontend": "setId",
            "backend": "set_id",
            "database": "set_id",
            "pretty": "Set Id",
            "component": "SetId",
            "kebab": "set-id",
            "sqlFunctionRef": "p_set_id",
            "RestAPI": "setId",
            "GraphQL": "setId",
            "custom": "setId"
        },
        "user_id": {
            "frontend": "userId",
            "backend": "user_id",
            "database": "user_id",
            "pretty": "User Id",
            "component": "UserId",
            "kebab": "user-id",
            "sqlFunctionRef": "p_user_id",
            "RestAPI": "userId",
            "GraphQL": "userId",
            "custom": "userId"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "created_at": {
            "frontend": "createdAt",
            "backend": "created_at",
            "database": "created_at",
            "pretty": "Created At",
            "component": "CreatedAt",
            "kebab": "created-at",
            "sqlFunctionRef": "p_created_at",
            "RestAPI": "createdAt",
            "GraphQL": "createdAt",
            "custom": "createdAt"
        },
        "updated_at": {
            "frontend": "updatedAt",
            "backend": "updated_at",
            "database": "updated_at",
            "pretty": "Updated At",
            "component": "UpdatedAt",
            "kebab": "updated-at",
            "sqlFunctionRef": "p_updated_at",
            "RestAPI": "updatedAt",
            "GraphQL": "updatedAt",
            "custom": "updatedAt"
        },
        "shared_with": {
            "frontend": "sharedWith",
            "backend": "shared_with",
            "database": "shared_with",
            "pretty": "Shared With",
            "component": "SharedWith",
            "kebab": "shared-with",
            "sqlFunctionRef": "p_shared_with",
            "RestAPI": "sharedWith",
            "GraphQL": "sharedWith",
            "custom": "sharedWith"
        },
        "public": {
            "frontend": "public",
            "backend": "public",
            "database": "public",
            "pretty": "Public",
            "component": "Public",
            "kebab": "public",
            "sqlFunctionRef": "p_public",
            "RestAPI": "public",
            "GraphQL": "public",
            "custom": "public"
        },
        "topic": {
            "frontend": "topic",
            "backend": "topic",
            "database": "topic",
            "pretty": "Topic",
            "component": "Topic",
            "kebab": "topic",
            "sqlFunctionRef": "p_topic",
            "RestAPI": "topic",
            "GraphQL": "topic",
            "custom": "topic"
        },
        "lesson": {
            "frontend": "lesson",
            "backend": "lesson",
            "database": "lesson",
            "pretty": "Lesson",
            "component": "Lesson",
            "kebab": "lesson",
            "sqlFunctionRef": "p_lesson",
            "RestAPI": "lesson",
            "GraphQL": "lesson",
            "custom": "lesson"
        },
        "difficulty": {
            "frontend": "difficulty",
            "backend": "difficulty",
            "database": "difficulty",
            "pretty": "Difficulty",
            "component": "Difficulty",
            "kebab": "difficulty",
            "sqlFunctionRef": "p_difficulty",
            "RestAPI": "difficulty",
            "GraphQL": "difficulty",
            "custom": "difficulty"
        },
        "audio_overview": {
            "frontend": "audioOverview",
            "backend": "audio_overview",
            "database": "audio_overview",
            "pretty": "Audio Overview",
            "component": "AudioOverview",
            "kebab": "audio-overview",
            "sqlFunctionRef": "p_audio_overview",
            "RestAPI": "audioOverview",
            "GraphQL": "audioOverview",
            "custom": "audioOverview"
        }
    },
    processor: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "depends_default": {
            "frontend": "dependsDefault",
            "backend": "depends_default",
            "database": "depends_default",
            "pretty": "Depends Default",
            "component": "DependsDefault",
            "kebab": "depends-default",
            "sqlFunctionRef": "p_depends_default",
            "RestAPI": "dependsDefault",
            "GraphQL": "dependsDefault",
            "custom": "dependsDefault"
        },
        "default_extractors": {
            "frontend": "defaultExtractors",
            "backend": "default_extractors",
            "database": "default_extractors",
            "pretty": "Default Extractors",
            "component": "DefaultExtractors",
            "kebab": "default-extractors",
            "sqlFunctionRef": "p_default_extractors",
            "RestAPI": "defaultExtractors",
            "GraphQL": "defaultExtractors",
            "custom": "defaultExtractors"
        },
        "params": {
            "frontend": "params",
            "backend": "params",
            "database": "params",
            "pretty": "Params",
            "component": "Params",
            "kebab": "params",
            "sqlFunctionRef": "p_params",
            "RestAPI": "params",
            "GraphQL": "params",
            "custom": "params"
        }
    },
    recipe: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "tags": {
            "frontend": "tags",
            "backend": "tags",
            "database": "tags",
            "pretty": "Tags",
            "component": "Tags",
            "kebab": "tags",
            "sqlFunctionRef": "p_tags",
            "RestAPI": "tags",
            "GraphQL": "tags",
            "custom": "tags"
        },
        "sample_output": {
            "frontend": "sampleOutput",
            "backend": "sample_output",
            "database": "sample_output",
            "pretty": "Sample Output",
            "component": "SampleOutput",
            "kebab": "sample-output",
            "sqlFunctionRef": "p_sample_output",
            "RestAPI": "sampleOutput",
            "GraphQL": "sampleOutput",
            "custom": "sampleOutput"
        },
        "is_public": {
            "frontend": "isPublic",
            "backend": "is_public",
            "database": "is_public",
            "pretty": "Is Public",
            "component": "IsPublic",
            "kebab": "is-public",
            "sqlFunctionRef": "p_is_public",
            "RestAPI": "isPublic",
            "GraphQL": "isPublic",
            "custom": "isPublic"
        },
        "status": {
            "frontend": "status",
            "backend": "status",
            "database": "status",
            "pretty": "Status",
            "component": "Status",
            "kebab": "status",
            "sqlFunctionRef": "p_status",
            "RestAPI": "status",
            "GraphQL": "status",
            "custom": "status"
        },
        "version": {
            "frontend": "version",
            "backend": "version",
            "database": "version",
            "pretty": "Version",
            "component": "Version",
            "kebab": "version",
            "sqlFunctionRef": "p_version",
            "RestAPI": "version",
            "GraphQL": "version",
            "custom": "version"
        },
        "messages": {
            "frontend": "messages",
            "backend": "messages",
            "database": "messages",
            "pretty": "Messages",
            "component": "Messages",
            "kebab": "messages",
            "sqlFunctionRef": "p_messages",
            "RestAPI": "messages",
            "GraphQL": "messages",
            "custom": "messages"
        },
        "post_result_options": {
            "frontend": "postResultOptions",
            "backend": "post_result_options",
            "database": "post_result_options",
            "pretty": "Post Result Options",
            "component": "PostResultOptions",
            "kebab": "post-result-options",
            "sqlFunctionRef": "p_post_result_options",
            "RestAPI": "postResultOptions",
            "GraphQL": "postResultOptions",
            "custom": "postResultOptions"
        }
    },
    recipeBroker: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "broker": {
            "frontend": "broker",
            "backend": "broker",
            "database": "broker",
            "pretty": "Broker",
            "component": "Broker",
            "kebab": "broker",
            "sqlFunctionRef": "p_broker",
            "RestAPI": "broker",
            "GraphQL": "broker",
            "custom": "broker"
        },
        "broker_role": {
            "frontend": "brokerRole",
            "backend": "broker_role",
            "database": "broker_role",
            "pretty": "Broker Role",
            "component": "BrokerRole",
            "kebab": "broker-role",
            "sqlFunctionRef": "p_broker_role",
            "RestAPI": "brokerRole",
            "GraphQL": "brokerRole",
            "custom": "brokerRole"
        },
        "required": {
            "frontend": "required",
            "backend": "required",
            "database": "required",
            "pretty": "Required",
            "component": "Required",
            "kebab": "required",
            "sqlFunctionRef": "p_required",
            "RestAPI": "required",
            "GraphQL": "required",
            "custom": "required"
        }
    },
    recipeDisplay: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "display": {
            "frontend": "display",
            "backend": "display",
            "database": "display",
            "pretty": "Display",
            "component": "Display",
            "kebab": "display",
            "sqlFunctionRef": "p_display",
            "RestAPI": "display",
            "GraphQL": "display",
            "custom": "display"
        },
        "priority": {
            "frontend": "priority",
            "backend": "priority",
            "database": "priority",
            "pretty": "Priority",
            "component": "Priority",
            "kebab": "priority",
            "sqlFunctionRef": "p_priority",
            "RestAPI": "priority",
            "GraphQL": "priority",
            "custom": "priority"
        },
        "display_settings": {
            "frontend": "displaySettings",
            "backend": "display_settings",
            "database": "display_settings",
            "pretty": "Display Settings",
            "component": "DisplaySettings",
            "kebab": "display-settings",
            "sqlFunctionRef": "p_display_settings",
            "RestAPI": "displaySettings",
            "GraphQL": "displaySettings",
            "custom": "displaySettings"
        }
    },
    recipeFunction: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "function": {
            "frontend": "function",
            "backend": "function",
            "database": "function",
            "pretty": "Function",
            "component": "Function",
            "kebab": "function",
            "sqlFunctionRef": "p_function",
            "RestAPI": "function",
            "GraphQL": "function",
            "custom": "function"
        },
        "role": {
            "frontend": "role",
            "backend": "role",
            "database": "role",
            "pretty": "Role",
            "component": "Role",
            "kebab": "role",
            "sqlFunctionRef": "p_role",
            "RestAPI": "role",
            "GraphQL": "role",
            "custom": "role"
        },
        "params": {
            "frontend": "params",
            "backend": "params",
            "database": "params",
            "pretty": "Params",
            "component": "Params",
            "kebab": "params",
            "sqlFunctionRef": "p_params",
            "RestAPI": "params",
            "GraphQL": "params",
            "custom": "params"
        }
    },
    recipeModel: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "ai_model": {
            "frontend": "aiModel",
            "backend": "ai_model",
            "database": "ai_model",
            "pretty": "Ai Model",
            "component": "AiModel",
            "kebab": "ai-model",
            "sqlFunctionRef": "p_ai_model",
            "RestAPI": "aiModel",
            "GraphQL": "aiModel",
            "custom": "aiModel"
        },
        "role": {
            "frontend": "role",
            "backend": "role",
            "database": "role",
            "pretty": "Role",
            "component": "Role",
            "kebab": "role",
            "sqlFunctionRef": "p_role",
            "RestAPI": "role",
            "GraphQL": "role",
            "custom": "role"
        },
        "priority": {
            "frontend": "priority",
            "backend": "priority",
            "database": "priority",
            "pretty": "Priority",
            "component": "Priority",
            "kebab": "priority",
            "sqlFunctionRef": "p_priority",
            "RestAPI": "priority",
            "GraphQL": "priority",
            "custom": "priority"
        }
    },
    recipeProcessor: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "processor": {
            "frontend": "processor",
            "backend": "processor",
            "database": "processor",
            "pretty": "Processor",
            "component": "Processor",
            "kebab": "processor",
            "sqlFunctionRef": "p_processor",
            "RestAPI": "processor",
            "GraphQL": "processor",
            "custom": "processor"
        },
        "params": {
            "frontend": "params",
            "backend": "params",
            "database": "params",
            "pretty": "Params",
            "component": "Params",
            "kebab": "params",
            "sqlFunctionRef": "p_params",
            "RestAPI": "params",
            "GraphQL": "params",
            "custom": "params"
        }
    },
    recipeTool: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "recipe": {
            "frontend": "recipe",
            "backend": "recipe",
            "database": "recipe",
            "pretty": "Recipe",
            "component": "Recipe",
            "kebab": "recipe",
            "sqlFunctionRef": "p_recipe",
            "RestAPI": "recipe",
            "GraphQL": "recipe",
            "custom": "recipe"
        },
        "tool": {
            "frontend": "tool",
            "backend": "tool",
            "database": "tool",
            "pretty": "Tool",
            "component": "Tool",
            "kebab": "tool",
            "sqlFunctionRef": "p_tool",
            "RestAPI": "tool",
            "GraphQL": "tool",
            "custom": "tool"
        },
        "params": {
            "frontend": "params",
            "backend": "params",
            "database": "params",
            "pretty": "Params",
            "component": "Params",
            "kebab": "params",
            "sqlFunctionRef": "p_params",
            "RestAPI": "params",
            "GraphQL": "params",
            "custom": "params"
        }
    },
    registeredFunction: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "module_path": {
            "frontend": "modulePath",
            "backend": "module_path",
            "database": "module_path",
            "pretty": "Module Path",
            "component": "ModulePath",
            "kebab": "module-path",
            "sqlFunctionRef": "p_module_path",
            "RestAPI": "modulePath",
            "GraphQL": "modulePath",
            "custom": "modulePath"
        },
        "class_name": {
            "frontend": "className",
            "backend": "class_name",
            "database": "class_name",
            "pretty": "Class Name",
            "component": "ClassName",
            "kebab": "class-name",
            "sqlFunctionRef": "p_class_name",
            "RestAPI": "className",
            "GraphQL": "className",
            "custom": "className"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "return_broker": {
            "frontend": "returnBroker",
            "backend": "return_broker",
            "database": "return_broker",
            "pretty": "Return Broker",
            "component": "ReturnBroker",
            "kebab": "return-broker",
            "sqlFunctionRef": "p_return_broker",
            "RestAPI": "returnBroker",
            "GraphQL": "returnBroker",
            "custom": "returnBroker"
        }
    },
    systemFunction: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "sample": {
            "frontend": "sample",
            "backend": "sample",
            "database": "sample",
            "pretty": "Sample",
            "component": "Sample",
            "kebab": "sample",
            "sqlFunctionRef": "p_sample",
            "RestAPI": "sample",
            "GraphQL": "sample",
            "custom": "sample"
        },
        "input_params": {
            "frontend": "inputParams",
            "backend": "input_params",
            "database": "input_params",
            "pretty": "Input Params",
            "component": "InputParams",
            "kebab": "input-params",
            "sqlFunctionRef": "p_input_params",
            "RestAPI": "inputParams",
            "GraphQL": "inputParams",
            "custom": "inputParams"
        },
        "output_options": {
            "frontend": "outputOptions",
            "backend": "output_options",
            "database": "output_options",
            "pretty": "Output Options",
            "component": "OutputOptions",
            "kebab": "output-options",
            "sqlFunctionRef": "p_output_options",
            "RestAPI": "outputOptions",
            "GraphQL": "outputOptions",
            "custom": "outputOptions"
        },
        "rf_id": {
            "frontend": "rfId",
            "backend": "rf_id",
            "database": "rf_id",
            "pretty": "Rf Id",
            "component": "RfId",
            "kebab": "rf-id",
            "sqlFunctionRef": "p_rf_id",
            "RestAPI": "rfId",
            "GraphQL": "rfId",
            "custom": "rfId"
        }
    },
    tool: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "source": {
            "frontend": "source",
            "backend": "source",
            "database": "source",
            "pretty": "Source",
            "component": "Source",
            "kebab": "source",
            "sqlFunctionRef": "p_source",
            "RestAPI": "source",
            "GraphQL": "source",
            "custom": "source"
        },
        "description": {
            "frontend": "description",
            "backend": "description",
            "database": "description",
            "pretty": "Description",
            "component": "Description",
            "kebab": "description",
            "sqlFunctionRef": "p_description",
            "RestAPI": "description",
            "GraphQL": "description",
            "custom": "description"
        },
        "parameters": {
            "frontend": "parameters",
            "backend": "parameters",
            "database": "parameters",
            "pretty": "Parameters",
            "component": "Parameters",
            "kebab": "parameters",
            "sqlFunctionRef": "p_parameters",
            "RestAPI": "parameters",
            "GraphQL": "parameters",
            "custom": "parameters"
        },
        "required_args": {
            "frontend": "requiredArgs",
            "backend": "required_args",
            "database": "required_args",
            "pretty": "Required Args",
            "component": "RequiredArgs",
            "kebab": "required-args",
            "sqlFunctionRef": "p_required_args",
            "RestAPI": "requiredArgs",
            "GraphQL": "requiredArgs",
            "custom": "requiredArgs"
        },
        "system_function": {
            "frontend": "systemFunction",
            "backend": "system_function",
            "database": "system_function",
            "pretty": "System Function",
            "component": "SystemFunction",
            "kebab": "system-function",
            "sqlFunctionRef": "p_system_function",
            "RestAPI": "systemFunction",
            "GraphQL": "systemFunction",
            "custom": "systemFunction"
        },
        "additional_params": {
            "frontend": "additionalParams",
            "backend": "additional_params",
            "database": "additional_params",
            "pretty": "Additional Params",
            "component": "AdditionalParams",
            "kebab": "additional-params",
            "sqlFunctionRef": "p_additional_params",
            "RestAPI": "additionalParams",
            "GraphQL": "additionalParams",
            "custom": "additionalParams"
        }
    },
    transformer: {
        "id": {
            "frontend": "id",
            "backend": "id",
            "database": "id",
            "pretty": "Id",
            "component": "Id",
            "kebab": "id",
            "sqlFunctionRef": "p_id",
            "RestAPI": "id",
            "GraphQL": "id",
            "custom": "id"
        },
        "name": {
            "frontend": "name",
            "backend": "name",
            "database": "name",
            "pretty": "Name",
            "component": "Name",
            "kebab": "name",
            "sqlFunctionRef": "p_name",
            "RestAPI": "name",
            "GraphQL": "name",
            "custom": "name"
        },
        "input_params": {
            "frontend": "inputParams",
            "backend": "input_params",
            "database": "input_params",
            "pretty": "Input Params",
            "component": "InputParams",
            "kebab": "input-params",
            "sqlFunctionRef": "p_input_params",
            "RestAPI": "inputParams",
            "GraphQL": "inputParams",
            "custom": "inputParams"
        },
        "output_params": {
            "frontend": "outputParams",
            "backend": "output_params",
            "database": "output_params",
            "pretty": "Output Params",
            "component": "OutputParams",
            "kebab": "output-params",
            "sqlFunctionRef": "p_output_params",
            "RestAPI": "outputParams",
            "GraphQL": "outputParams",
            "custom": "outputParams"
        }
    },
    userPreferences: {
        "user_id": {
            "frontend": "userId",
            "backend": "user_id",
            "database": "user_id",
            "pretty": "User Id",
            "component": "UserId",
            "kebab": "user-id",
            "sqlFunctionRef": "p_user_id",
            "RestAPI": "userId",
            "GraphQL": "userId",
            "custom": "userId"
        },
        "preferences": {
            "frontend": "preferences",
            "backend": "preferences",
            "database": "preferences",
            "pretty": "Preferences",
            "component": "Preferences",
            "kebab": "preferences",
            "sqlFunctionRef": "p_preferences",
            "RestAPI": "preferences",
            "GraphQL": "preferences",
            "custom": "preferences"
        },
        "created_at": {
            "frontend": "createdAt",
            "backend": "created_at",
            "database": "created_at",
            "pretty": "Created At",
            "component": "CreatedAt",
            "kebab": "created-at",
            "sqlFunctionRef": "p_created_at",
            "RestAPI": "createdAt",
            "GraphQL": "createdAt",
            "custom": "createdAt"
        },
        "updated_at": {
            "frontend": "updatedAt",
            "backend": "updated_at",
            "database": "updated_at",
            "pretty": "Updated At",
            "component": "UpdatedAt",
            "kebab": "updated-at",
            "sqlFunctionRef": "p_updated_at",
            "RestAPI": "updatedAt",
            "GraphQL": "updatedAt",
            "custom": "updatedAt"
        }
    },
};


// function lookupTableName(
//     cache: UnifiedSchemaCache,
//     name: string,
//     reverse: boolean = false
// ): string {
//     const lookupMap = reverse ? cache.reverseTableNameLookup : cache.tableNameLookup;
//     return lookupMap[name] || name;
// }
//
// function lookupFieldName(
//     cache: UnifiedSchemaCache,
//     table: string,
//     fieldName: string,
//     reverse: boolean = false
// ): string {
//     const lookupMap = reverse ? cache.reverseFieldNameLookup : cache.fieldNameLookup;
//     const tableMap = lookupMap[table];
//     if (!tableMap) {
//         console.log(`Table "${table}" not found in lookup`);
//         return fieldName;
//     }
//     return tableMap[fieldName] || fieldName;
// }
